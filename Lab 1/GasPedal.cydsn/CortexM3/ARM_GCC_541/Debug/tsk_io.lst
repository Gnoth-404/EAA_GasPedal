ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"tsk_io.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Functsk_io,"ax",%progbits
  20              		.align	2
  21              		.global	Functsk_io
  22              		.thumb
  23              		.thumb_func
  24              		.type	Functsk_io, %function
  25              	Functsk_io:
  26              	.LFB110:
  27              		.file 1 "asw\\tsk_io.c"
   1:asw/tsk_io.c  **** /*
   2:asw/tsk_io.c  ****  * Filename: tsk_io.c
   3:asw/tsk_io.c  ****  *
   4:asw/tsk_io.c  ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   5:asw/tsk_io.c  ****  *
   6:asw/tsk_io.c  ****  * description: Task reading and writing input and output 
   7:asw/tsk_io.c  ****  * events: ev_5ms|ev_breakpedal_onData|ev_speed_onData
   8:asw/tsk_io.c  ****  * mode: Cyclic and Event
   9:asw/tsk_io.c  ****  * name: tsk_io
  10:asw/tsk_io.c  ****  * shortname: io
  11:asw/tsk_io.c  ****  * signalpoolsRO: sp_common
  12:asw/tsk_io.c  ****  * signalpoolsRW: sp_common
  13:asw/tsk_io.c  ****  * tickEvent: ev_5ms
  14:asw/tsk_io.c  ****  * timertickperiod: 5
  15:asw/tsk_io.c  ****  *
  16:asw/tsk_io.c  ****  */
  17:asw/tsk_io.c  **** 
  18:asw/tsk_io.c  **** #include "project.h"
  19:asw/tsk_io.c  **** #include "global.h"
  20:asw/tsk_io.c  **** #include "rte.h"
  21:asw/tsk_io.c  **** #include "rte_types.h"
  22:asw/tsk_io.c  **** #include "tsk_io.h"
  23:asw/tsk_io.c  **** 
  24:asw/tsk_io.c  **** 
  25:asw/tsk_io.c  **** 
  26:asw/tsk_io.c  **** /* USER CODE START TSK_IO_INCLUDE */
  27:asw/tsk_io.c  **** 
  28:asw/tsk_io.c  **** /* USER CODE END TSK_IO_INCLUDE */
  29:asw/tsk_io.c  **** 
  30:asw/tsk_io.c  **** #include "swc_gaspedal.h"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 2


  31:asw/tsk_io.c  **** 
  32:asw/tsk_io.c  **** 
  33:asw/tsk_io.c  **** 
  34:asw/tsk_io.c  **** /* USER CODE START TSK_IO_USERDEFINITIONS */
  35:asw/tsk_io.c  **** 
  36:asw/tsk_io.c  **** /* USER CODE END TSK_IO_USERDEFINITIONS */
  37:asw/tsk_io.c  **** 
  38:asw/tsk_io.c  **** /*******************************************************************************
  39:asw/tsk_io.c  ****  * Runnable Tables from Activation Engine
  40:asw/tsk_io.c  ****  *******************************************************************************/
  41:asw/tsk_io.c  **** 
  42:asw/tsk_io.c  **** /* Cyclic Table */
  43:asw/tsk_io.c  **** 
  44:asw/tsk_io.c  **** const RTE_cyclicTable_t RTE_cyclicActivationTable_tsk_io[] = {
  45:asw/tsk_io.c  **** 	{ GASPEDAL_readJoystick_run, 10 },	//Runnable that reads joystick data value x and y every 10ms an
  46:asw/tsk_io.c  **** 	{ GASPEDAL_setEngine_run, 100 },	//Runnable that take the input speed signal value and write it to
  47:asw/tsk_io.c  **** };
  48:asw/tsk_io.c  **** const uint16_t RTE_cyclicActivation_tsk_io_size = sizeof (RTE_cyclicActivationTable_tsk_io) / sizeo
  49:asw/tsk_io.c  **** 
  50:asw/tsk_io.c  **** /* Event Table */
  51:asw/tsk_io.c  **** const RTE_eventTable_t RTE_eventActivationTable_tsk_io[] = {
  52:asw/tsk_io.c  ****     { GASPEDAL_setBrakeLight_run, ev_speed_onData },  //Runnable
  53:asw/tsk_io.c  **** }; 
  54:asw/tsk_io.c  **** const uint16_t RTE_eventActivation_tsk_io_size = sizeof (RTE_eventActivationTable_tsk_io) / sizeof(
  55:asw/tsk_io.c  **** 
  56:asw/tsk_io.c  **** /*******************************************************************************
  57:asw/tsk_io.c  ****  * Task Body
  58:asw/tsk_io.c  ****  *******************************************************************************/
  59:asw/tsk_io.c  **** 
  60:asw/tsk_io.c  **** 
  61:asw/tsk_io.c  **** /*
  62:asw/tsk_io.c  ****  * description: Task reading and writing input and output 
  63:asw/tsk_io.c  ****  * events: ev_5ms|ev_breakpedal_onData|ev_speed_onData
  64:asw/tsk_io.c  ****  * mode: Cyclic and Event
  65:asw/tsk_io.c  ****  * name: tsk_io
  66:asw/tsk_io.c  ****  * shortname: io
  67:asw/tsk_io.c  ****  * signalpoolsRO: sp_common
  68:asw/tsk_io.c  ****  * signalpoolsRW: sp_common
  69:asw/tsk_io.c  ****  * tickEvent: ev_5ms
  70:asw/tsk_io.c  ****  * timertickperiod: 5
  71:asw/tsk_io.c  ****  */
  72:asw/tsk_io.c  **** TASK(tsk_io)
  73:asw/tsk_io.c  **** {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38              	.LVL0:
  74:asw/tsk_io.c  **** 	/* ticktime of the task */
  75:asw/tsk_io.c  **** 	uint32_t ticktime = 0;
  76:asw/tsk_io.c  **** 	
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 3


  77:asw/tsk_io.c  ****     EventMaskType ev = 0;
  39              		.loc 1 77 0
  40 0004 0024     		movs	r4, #0
  41 0006 0194     		str	r4, [sp, #4]
  42              	.LVL1:
  43              	.L3:
  78:asw/tsk_io.c  **** 	
  79:asw/tsk_io.c  **** 	/* USER CODE START TSK_IO_INIT */
  80:asw/tsk_io.c  **** 
  81:asw/tsk_io.c  **** 	/* USER CODE END TSK_IO_INIT */
  82:asw/tsk_io.c  ****     
  83:asw/tsk_io.c  ****     while(1)
  84:asw/tsk_io.c  ****     {
  85:asw/tsk_io.c  ****         //Wait, read and clear the event
  86:asw/tsk_io.c  ****         WaitEvent(ev_5ms|ev_breakpedal_onData|ev_speed_onData);
  44              		.loc 1 86 0
  45 0008 1520     		movs	r0, #21
  46 000a FFF7FEFF 		bl	EE_oo_WaitEvent
  47              	.LVL2:
  87:asw/tsk_io.c  ****         GetEvent(tsk_io,&ev);
  48              		.loc 1 87 0
  49 000e 01A9     		add	r1, sp, #4
  50 0010 0220     		movs	r0, #2
  51 0012 FFF7FEFF 		bl	EE_oo_GetEvent
  52              	.LVL3:
  88:asw/tsk_io.c  ****         ClearEvent(ev);
  53              		.loc 1 88 0
  54 0016 0198     		ldr	r0, [sp, #4]
  55 0018 FFF7FEFF 		bl	EE_oo_ClearEvent
  56              	.LVL4:
  89:asw/tsk_io.c  ****     
  90:asw/tsk_io.c  **** 		/* USER CODE START TSK_IO_TASKBOBY_PRE */
  91:asw/tsk_io.c  **** 
  92:asw/tsk_io.c  **** 		/* USER CODE END TSK_IO_TASKBODY_PRE */
  93:asw/tsk_io.c  ****         
  94:asw/tsk_io.c  ****         if (ev & ev_5ms){
  57              		.loc 1 94 0
  58 001c 019B     		ldr	r3, [sp, #4]
  59 001e 13F0010F 		tst	r3, #1
  60 0022 09D0     		beq	.L2
  95:asw/tsk_io.c  ****             //Process Cyclic table on tick
  96:asw/tsk_io.c  ****             RTE_ProcessCyclicTable(RTE_cyclicActivationTable_tsk_io, RTE_cyclicActivation_tsk_io_si
  61              		.loc 1 96 0
  62 0024 2246     		mov	r2, r4
  63 0026 0221     		movs	r1, #2
  64 0028 0648     		ldr	r0, .L6
  65 002a FFF7FEFF 		bl	RTE_ProcessCyclicTable
  66              	.LVL5:
  97:asw/tsk_io.c  **** 
  98:asw/tsk_io.c  **** 			ticktime += 5;
  67              		.loc 1 98 0
  68 002e 0534     		adds	r4, r4, #5
  69              	.LVL6:
  99:asw/tsk_io.c  **** 			if (ticktime > 0xFFFFFF00) ticktime = 0;
  70              		.loc 1 99 0
  71 0030 14F5807F 		cmn	r4, #256
  72 0034 00D9     		bls	.L2
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 4


  73 0036 0024     		movs	r4, #0
  74              	.LVL7:
  75              	.L2:
 100:asw/tsk_io.c  **** 
 101:asw/tsk_io.c  **** 		};
 102:asw/tsk_io.c  **** 		
 103:asw/tsk_io.c  **** 		//Process data driven events
 104:asw/tsk_io.c  **** 		RTE_ProcessEventTable(RTE_eventActivationTable_tsk_io, RTE_eventActivation_tsk_io_size, ev);
  76              		.loc 1 104 0
  77 0038 019A     		ldr	r2, [sp, #4]
  78 003a 0121     		movs	r1, #1
  79 003c 0248     		ldr	r0, .L6+4
  80 003e FFF7FEFF 		bl	RTE_ProcessEventTable
  81              	.LVL8:
 105:asw/tsk_io.c  **** 		
 106:asw/tsk_io.c  **** 		/* USER CODE START TSK_IO_TASKBODY_POST */
 107:asw/tsk_io.c  **** 
 108:asw/tsk_io.c  **** 		/* USER CODE END TSK_IO_TASKBODY_POST */
 109:asw/tsk_io.c  ****         
 110:asw/tsk_io.c  ****     }
  82              		.loc 1 110 0
  83 0042 E1E7     		b	.L3
  84              	.L7:
  85              		.align	2
  86              	.L6:
  87 0044 00000000 		.word	.LANCHOR0
  88 0048 10000000 		.word	.LANCHOR0+16
  89              		.cfi_endproc
  90              	.LFE110:
  91              		.size	Functsk_io, .-Functsk_io
  92              		.section	.text.ISR2_isr_Button,"ax",%progbits
  93              		.align	2
  94              		.global	ISR2_isr_Button
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR2_isr_Button, %function
  98              	ISR2_isr_Button:
  99              	.LFB112:
 111:asw/tsk_io.c  **** 	
 112:asw/tsk_io.c  **** 	//Just in Case
 113:asw/tsk_io.c  **** 	TerminateTask();
 114:asw/tsk_io.c  **** }
 115:asw/tsk_io.c  **** 
 116:asw/tsk_io.c  **** 
 117:asw/tsk_io.c  **** /*******************************************************************************
 118:asw/tsk_io.c  ****  * Interrupt Service Routines
 119:asw/tsk_io.c  ****  *******************************************************************************/
 120:asw/tsk_io.c  **** 
 121:asw/tsk_io.c  **** /* USER CODE START TSK_IO_ISR */
 122:asw/tsk_io.c  **** ISR2(isr_Button)
 123:asw/tsk_io.c  **** {
 100              		.loc 1 123 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 08B5     		push	{r3, lr}
 105              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 5


 106              		.cfi_offset 3, -8
 107              		.cfi_offset 14, -4
 124:asw/tsk_io.c  ****     if(BUTTON_IsPressed(BUTTON_1))
 108              		.loc 1 124 0
 109 0002 0020     		movs	r0, #0
 110 0004 FFF7FEFF 		bl	BUTTON_IsPressed
 111              	.LVL9:
 112 0008 10B1     		cbz	r0, .L8
 125:asw/tsk_io.c  ****     {
 126:asw/tsk_io.c  ****         ShutdownOS(0);
 113              		.loc 1 126 0
 114 000a 0020     		movs	r0, #0
 115 000c FFF7FEFF 		bl	EE_oo_ShutdownOS
 116              	.LVL10:
 117              	.L8:
 118 0010 08BD     		pop	{r3, pc}
 119              		.cfi_endproc
 120              	.LFE112:
 121              		.size	ISR2_isr_Button, .-ISR2_isr_Button
 122 0012 00BF     		.section	.text.isr_Button,"ax",%progbits
 123              		.align	2
 124              		.global	isr_Button
 125              		.thumb
 126              		.thumb_func
 127              		.type	isr_Button, %function
 128              	isr_Button:
 129              	.LFB111:
 122:asw/tsk_io.c  **** {
 130              		.loc 1 122 0
 131              		.cfi_startproc
 132              		@ Stack Align: May be called with mis-aligned SP.
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 6846     		mov	r0, sp
 136              		.cfi_register 13, 0
 137 0002 20F00701 		bic	r1, r0, #7
 138 0006 8D46     		mov	sp, r1
 139 0008 19B5     		push	{r0, r3, r4, lr}
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 13, -16
 142              		.cfi_offset 3, -12
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 145              	.LVL11:
 146              	.LBB50:
 147              	.LBB51:
 148              		.file 2 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 6


  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 7


  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 8


 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 9


 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 149              		.loc 2 211 0
 150              		.syntax unified
 151              	@ 211 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 152 000a 72B6     		cpsid i
 153              	@ 0 "" 2
 154              		.thumb
 155              		.syntax unified
 156              	.LBE51:
 157              	.LBE50:
 158              	.LBB52:
 159              	.LBB53:
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 10


 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
 262:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 263:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 264:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 265:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 266:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 267:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 268:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return istat;
 269:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 270:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 271:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 273:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Return true (not 0) if IRQs are enabled, 0 (false) if IRQ are disabled.
 274:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 275:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  EE_cortex_mx_get_IRQ_enabled(void)
 276:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 277:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 278:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_UREG ie;
 279:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 280:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 281:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	ie = __get_PRIMASK();
 282:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 283:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 284:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    MRS     r0, PRIMASK\n"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 11


 285:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    EOR     r0, #1\n"
 286:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 287:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 288:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 289:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 290:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	ie = PRIMASK;
 291:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 292:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("MRS %0, primask" : "=r" (ie) );
 293:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 294:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 295:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 296:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 297:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 298:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 299:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return EE_cortex_mx_are_IRQs_enabled(ie);
 300:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 301:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 302:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 303:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_TYPEISR2PRIO  EE_cortex_mx_get_int_prio(void)
 304:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 305:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 306:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 307:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 308:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_UREG prio;
 309:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__KEIL__
 310:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG BASEPRI __ASM("basepri");
 311:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 312:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 313:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 314:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 316:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	/* NVIC_INT_PRI_S = 5 */
 317:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    MRS     R0, BASEPRI\n"
 318:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    ASR     R0, #5\n"
 319:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    BLX     LR\n");
 320:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 321:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 322:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	prio = BASEPRI;
 323:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 324:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 325:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MRS %0, BASEPRI" : "=r" (prio) :: );
 160              		.loc 2 325 0
 161              		.syntax unified
 162              	@ 325 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 163 000c EFF31184 		MRS r4, BASEPRI
 164              	@ 0 "" 2
 165              	.LVL12:
 166              		.thumb
 167              		.syntax unified
 168              	.LBE53:
 169              	.LBE52:
 170              	.LBB54:
 171              	.LBB55:
 326:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 327:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MRS %0, BASEPRI" :: "=r" (prio));
 328:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__GNU__ */
 329:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 12


 330:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 331:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 332:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 333:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 334:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 335:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return prio >> NVIC_INT_PRI_S;
 336:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 337:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 338:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CORTEX_M4__ */
 339:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 340:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CORTEX_M4__ */
 341:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 342:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 343:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_set_int_prio(
 344:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   EE_TYPEISR2PRIO prio
 345:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** )
 346:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 347:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 348:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 349:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	/* NVIC_INT_PRI_S = 5 */
 350:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    LSL    R0, #5\n"
 351:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    MSR    BASEPRI, R0\n");
 352:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 353:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 354:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG BASEPRI __ASM("basepri");
 355:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	BASEPRI = (prio << NVIC_INT_PRI_S);
 356:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 357:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 358:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MSR BASEPRI, %0" :: "r" (prio << NVIC_INT_PRI_S) : );
 359:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 360:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MSR BASEPRI, %0" :: "r" (prio << NVIC_INT_PRI_S));
 361:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__GNU__ */
 362:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 363:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 364:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* __CORTEX_M4__ */
 365:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 366:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 367:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_TYPEISR2PRIO  EE_cortex_mx_get_isr_prio(
 368:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   void
 369:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** )
 370:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 371:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 372:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   register EE_UREG vectact = NVIC_INT_CTRL_R & NVIC_INT_CTRL_VEC_ACT_M;
 172              		.loc 2 372 0
 173 0010 1E4B     		ldr	r3, .L17
 174 0012 1B68     		ldr	r3, [r3]
 175 0014 DBB2     		uxtb	r3, r3
 176              	.LVL13:
 373:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   register EE_TYPEISR2PRIO prio = 0;
 374:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 375:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   if (vectact > EE_CORTEX_MX_SYSTICK_EXC_NUM) {
 177              		.loc 2 375 0
 178 0016 0F2B     		cmp	r3, #15
 179 0018 10D9     		bls	.L12
 376:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     vectact -= EE_CORTEX_MX_SYSTICK_EXC_NUM + 1;
 180              		.loc 2 376 0
 181 001a 103B     		subs	r3, r3, #16
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 13


 182              	.LVL14:
 377:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     prio = NVIC_GET_PRI(vectact);
 183              		.loc 2 377 0
 184 001c 23F00302 		bic	r2, r3, #3
 185 0020 02F16042 		add	r2, r2, #-536870912
 186 0024 02F56442 		add	r2, r2, #58368
 187 0028 1168     		ldr	r1, [r2]
 188 002a DB00     		lsls	r3, r3, #3
 189              	.LVL15:
 190 002c 03F01803 		and	r3, r3, #24
 191 0030 E022     		movs	r2, #224
 192 0032 9A40     		lsls	r2, r2, r3
 193 0034 0A40     		ands	r2, r2, r1
 194 0036 22FA03F3 		lsr	r3, r2, r3
 195              	.LVL16:
 196 003a 06E0     		b	.L13
 197              	.LVL17:
 198              	.L12:
 378:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   }
 379:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__USE_SYSTICK__
 380:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   else if (vectact == EE_CORTEX_MX_SYSTICK_EXC_NUM) {
 199              		.loc 2 380 0
 200 003c 0F2B     		cmp	r3, #15
 201 003e 03D1     		bne	.L16
 381:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     prio = NVIC_SYS_PRI3_R >> NVIC_SYS_PRI3_TICK_S;
 202              		.loc 2 381 0
 203 0040 134B     		ldr	r3, .L17+4
 204              	.LVL18:
 205 0042 1B68     		ldr	r3, [r3]
 206 0044 1B0E     		lsrs	r3, r3, #24
 207              	.LVL19:
 208 0046 00E0     		b	.L13
 209              	.LVL20:
 210              	.L16:
 373:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 211              		.loc 2 373 0
 212 0048 0023     		movs	r3, #0
 213              	.LVL21:
 214              	.L13:
 215              	.LBE55:
 216              	.LBE54:
 217              	.LBB56:
 218              	.LBB57:
 358:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 219              		.loc 2 358 0
 220              		.syntax unified
 221              	@ 358 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 222 004a 83F31188 		MSR BASEPRI, r3
 223              	@ 0 "" 2
 224              		.thumb
 225              		.syntax unified
 226              	.LBE57:
 227              	.LBE56:
 228              	.LBB58:
 229              	.LBB59:
 230              		.file 3 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_irqstub.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* ###*B*###
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 14


   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Copyright (C) 2002-2010  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Some IRQ-related stuff.
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Author: 2009-2010,  Bernardo  Dal Seno
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*******************************************************************************
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *                        !!!WARNING!!!
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * This header depends on "cpu/common/inc/ee_context.inc" or your own
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * implementation of the same. You should include it file before including this
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * file
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  ******************************************************************************/
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 15


  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #ifndef PKG_CPU_COMMON_INC_EE_IRQSTUB_H
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #define PKG_CPU_COMMON_INC_EE_IRQSTUB_H
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* this bring EE_IRQ_nesting_level definition */
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #include "ErikaOS_1_common_ee_primitives.inc"
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* True if we are inside an interrupt-serving routine */
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ EE_TYPEBOOL  EE_is_inside_ISR_call( void )
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** {
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****   return (EE_IRQ_nesting_level > 0U);
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** }
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* EE_decrement_IRQ_nesting_level() and EE_increment_IRQ_nesting_level() are
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * used to keep track of the current IRQ nesting level.
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * EE_std_enableIRQ_nested() and EE_std_disableIRQ_nested() are used to control
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * when IRQ nesting is enabled.
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #if defined(__AS_SC4__)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* For SC4 the nesting level is updated inside the prestub and postub */
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) {}
  80:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) {}
  81:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_enableIRQ_nested(void) {}
  82:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_disableIRQ_nested(void) {}
  83:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #elif defined(__ALLOW_NESTED_IRQ__)
  84:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) { --EE_IRQ_nesting_level; }
  85:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { ++EE_IRQ_nesting_level; }
 231              		.loc 3 85 0
 232 004e 114A     		ldr	r2, .L17+8
 233 0050 1368     		ldr	r3, [r2]
 234 0052 0133     		adds	r3, r3, #1
 235 0054 1360     		str	r3, [r2]
 236              	.LBE59:
 237              	.LBE58:
 122:asw/tsk_io.c  **** {
 238              		.loc 1 122 0
 239 0056 012B     		cmp	r3, #1
 240 0058 01D1     		bne	.L14
 122:asw/tsk_io.c  **** {
 241              		.loc 1 122 0 is_stmt 0 discriminator 1
 242 005a FFF7FEFF 		bl	EE_cortex_mx_change_IRQ_stack
 243              	.LVL22:
 244              	.L14:
 245              	.LBB60:
 246              	.LBB61:
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 247              		.loc 2 191 0 is_stmt 1 discriminator 3
 248              		.syntax unified
 249              	@ 191 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 250 005e 62B6     		cpsie i
 251              	@ 0 "" 2
 252              		.thumb
 253              		.syntax unified
 254              	.LBE61:
 255              	.LBE60:
 122:asw/tsk_io.c  **** {
 256              		.loc 1 122 0 discriminator 3
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 16


 257 0060 FFF7FEFF 		bl	ISR2_isr_Button
 258              	.LVL23:
 259              	.LBB62:
 260              	.LBB63:
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 261              		.loc 2 211 0 discriminator 3
 262              		.syntax unified
 263              	@ 211 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 264 0064 72B6     		cpsid i
 265              	@ 0 "" 2
 266              	.LVL24:
 267              		.thumb
 268              		.syntax unified
 269              	.LBE63:
 270              	.LBE62:
 271              	.LBB64:
 272              	.LBB65:
 358:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 273              		.loc 2 358 0 discriminator 3
 274              		.syntax unified
 275              	@ 358 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 276 0066 84F31188 		MSR BASEPRI, r4
 277              	@ 0 "" 2
 278              	.LVL25:
 279              		.thumb
 280              		.syntax unified
 281              	.LBE65:
 282              	.LBE64:
 283              	.LBB66:
 284              	.LBB67:
  86:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*  EE_std_enableIRQ_nested() and EE_std_disableIRQ_nested() must be defined in
  87:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *  the platform-dependent part, as they dependend on the particular way
  88:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *  interrupts are handled by the CPU. */
  89:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #else
  90:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) { EE_IRQ_nesting_level = 0U; }
  91:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { EE_IRQ_nesting_level = 1U; }
  92:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_enableIRQ_nested(void) {}
  93:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_disableIRQ_nested(void) {}
  94:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #endif
  95:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  96:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_BCC2__)) || (defined(__OO_ECC1__)) \
  97:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****   || (defined(__OO_ECC2__)) || (defined(__AS_SC4__))
  98:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* Function to be called at the end of a function service interrupt, to execute
  99:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****    clean-up specifiend in Autosar standard */
 100:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_end_IRQ_post_stub(void)
 101:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** {
 102:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****   EE_IRQ_end_post_stub();
 285              		.loc 3 102 0 discriminator 3
 286 006a FFF7FEFF 		bl	EE_IRQ_end_post_stub
 287              	.LVL26:
 288              	.LBE67:
 289              	.LBE66:
 290              	.LBB68:
 291              	.LBB69:
  84:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { ++EE_IRQ_nesting_level; }
 292              		.loc 3 84 0 discriminator 3
 293 006e 094A     		ldr	r2, .L17+8
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 17


 294 0070 1368     		ldr	r3, [r2]
 295 0072 013B     		subs	r3, r3, #1
 296 0074 1360     		str	r3, [r2]
 297              	.LBE69:
 298              	.LBE68:
 122:asw/tsk_io.c  **** {
 299              		.loc 1 122 0 discriminator 3
 300 0076 1BB9     		cbnz	r3, .L15
 122:asw/tsk_io.c  **** {
 301              		.loc 1 122 0 is_stmt 0 discriminator 4
 302 0078 FFF7FEFF 		bl	EE_cortex_mx_change_IRQ_stack_back
 303              	.LVL27:
 304              	.LBB70:
 305              	.LBB71:
 306              		.file 4 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 18


  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@file	ee_irq_cng_cont.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@brief	Function active the context change interrupt
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@author	Gianluca Franchino
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@author	Giuseppe Serano
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@date	2012
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** */ 
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****     
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** /*
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * PSoC Port and API Generation
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Carlos Fernando Meier Martinez
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Hochschule Darmstadt, Germany. 2017.
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  */
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #ifndef __INCLUDE_CORTEX_MX_IRQ_CNG_CONTEXT_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #define __INCLUDE_CORTEX_MX_IRQ_CNG_CONTEXT_H__
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #ifdef __GNU__
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #endif
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** /* Implemented in ee_<compiler>_change_context_isr.s */
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** extern void EE_switch_context(void);
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** __INLINE__ void  EE_cortex_mx_IRQ_active_change_context(void)
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** {
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	EE_switch_context();
 307              		.loc 4 68 0 is_stmt 1 discriminator 4
 308 007c FFF7FEFF 		bl	EE_switch_context
 309              	.LVL28:
 310              	.L15:
 311              	.LBE71:
 312              	.LBE70:
 313              	.LBB72:
 314              	.LBB73:
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 315              		.loc 2 191 0 discriminator 6
 316              		.syntax unified
 317              	@ 191 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 318 0080 62B6     		cpsie i
 319              	@ 0 "" 2
 320              		.thumb
 321              		.syntax unified
 322              	.LBE73:
 323              	.LBE72:
 122:asw/tsk_io.c  **** {
 324              		.loc 1 122 0 discriminator 6
 325 0082 BDE81940 		pop	{r0, r3, r4, lr}
 326              		.cfi_restore 14
 327              		.cfi_restore 4
 328              		.cfi_restore 3
 329              		.cfi_restore 0
 330              		.cfi_def_cfa_offset 0
 331 0086 8546     		mov	sp, r0
 332 0088 7047     		bx	lr
 333              	.L18:
 334 008a 00BF     		.align	2
 335              	.L17:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 19


 336 008c 04ED00E0 		.word	-536810236
 337 0090 20ED00E0 		.word	-536810208
 338 0094 00000000 		.word	EE_IRQ_nesting_level
 339              		.cfi_endproc
 340              	.LFE111:
 341              		.size	isr_Button, .-isr_Button
 342              		.global	RTE_eventActivation_tsk_io_size
 343              		.global	RTE_eventActivationTable_tsk_io
 344              		.global	RTE_cyclicActivation_tsk_io_size
 345              		.global	RTE_cyclicActivationTable_tsk_io
 346              		.section	.rodata
 347              		.align	2
 348              		.set	.LANCHOR0,. + 0
 349              		.type	RTE_cyclicActivationTable_tsk_io, %object
 350              		.size	RTE_cyclicActivationTable_tsk_io, 16
 351              	RTE_cyclicActivationTable_tsk_io:
 352 0000 00000000 		.word	GASPEDAL_readJoystick_run
 353 0004 0A00     		.short	10
 354 0006 0000     		.space	2
 355 0008 00000000 		.word	GASPEDAL_setEngine_run
 356 000c 6400     		.short	100
 357 000e 0000     		.space	2
 358              		.type	RTE_eventActivationTable_tsk_io, %object
 359              		.size	RTE_eventActivationTable_tsk_io, 8
 360              	RTE_eventActivationTable_tsk_io:
 361 0010 00000000 		.word	GASPEDAL_setBrakeLight_run
 362 0014 10000000 		.word	16
 363              		.type	RTE_eventActivation_tsk_io_size, %object
 364              		.size	RTE_eventActivation_tsk_io_size, 2
 365              	RTE_eventActivation_tsk_io_size:
 366 0018 0100     		.short	1
 367              		.type	RTE_cyclicActivation_tsk_io_size, %object
 368              		.size	RTE_cyclicActivation_tsk_io_size, 2
 369              	RTE_cyclicActivation_tsk_io_size:
 370 001a 0200     		.short	2
 371              		.text
 372              	.Letext0:
 373              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 374              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 375              		.file 7 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_types.inc"
 376              		.file 8 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_common.inc"
 377              		.file 9 ".\\bsw\\rte/rte_types.h"
 378              		.file 10 ".\\bsw\\rte/rte.h"
 379              		.file 11 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_intfunc.inc"
 380              		.file 12 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc"
 381              		.file 13 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_primitives.inc"
 382              		.file 14 "Generated_Source\\PSoC5/core_cm3.h"
 383              		.file 15 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_kernel.inc"
 384              		.file 16 ".\\bsw\\LabBoard/button.h"
 385              		.file 17 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_irq.inc"
 386              		.file 18 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_irq.inc"
 387              		.section	.debug_info,"",%progbits
 388              	.Ldebug_info0:
 389 0000 E4050000 		.4byte	0x5e4
 390 0004 0400     		.2byte	0x4
 391 0006 00000000 		.4byte	.Ldebug_abbrev0
 392 000a 04       		.byte	0x4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 20


 393 000b 01       		.uleb128 0x1
 394 000c FB040000 		.4byte	.LASF72
 395 0010 0C       		.byte	0xc
 396 0011 B0020000 		.4byte	.LASF73
 397 0015 47000000 		.4byte	.LASF74
 398 0019 00000000 		.4byte	.Ldebug_ranges0+0
 399 001d 00000000 		.4byte	0
 400 0021 00000000 		.4byte	.Ldebug_line0
 401 0025 02       		.uleb128 0x2
 402 0026 01       		.byte	0x1
 403 0027 06       		.byte	0x6
 404 0028 0B030000 		.4byte	.LASF0
 405 002c 02       		.uleb128 0x2
 406 002d 01       		.byte	0x1
 407 002e 08       		.byte	0x8
 408 002f BD020000 		.4byte	.LASF1
 409 0033 02       		.uleb128 0x2
 410 0034 02       		.byte	0x2
 411 0035 05       		.byte	0x5
 412 0036 8C000000 		.4byte	.LASF2
 413 003a 03       		.uleb128 0x3
 414 003b E5000000 		.4byte	.LASF4
 415 003f 05       		.byte	0x5
 416 0040 2B       		.byte	0x2b
 417 0041 45000000 		.4byte	0x45
 418 0045 02       		.uleb128 0x2
 419 0046 02       		.byte	0x2
 420 0047 07       		.byte	0x7
 421 0048 BB030000 		.4byte	.LASF3
 422 004c 03       		.uleb128 0x3
 423 004d 83040000 		.4byte	.LASF5
 424 0051 05       		.byte	0x5
 425 0052 3F       		.byte	0x3f
 426 0053 57000000 		.4byte	0x57
 427 0057 02       		.uleb128 0x2
 428 0058 04       		.byte	0x4
 429 0059 05       		.byte	0x5
 430 005a C7010000 		.4byte	.LASF6
 431 005e 03       		.uleb128 0x3
 432 005f D4000000 		.4byte	.LASF7
 433 0063 05       		.byte	0x5
 434 0064 41       		.byte	0x41
 435 0065 69000000 		.4byte	0x69
 436 0069 02       		.uleb128 0x2
 437 006a 04       		.byte	0x4
 438 006b 07       		.byte	0x7
 439 006c 1E040000 		.4byte	.LASF8
 440 0070 02       		.uleb128 0x2
 441 0071 08       		.byte	0x8
 442 0072 05       		.byte	0x5
 443 0073 96010000 		.4byte	.LASF9
 444 0077 02       		.uleb128 0x2
 445 0078 08       		.byte	0x8
 446 0079 07       		.byte	0x7
 447 007a 17030000 		.4byte	.LASF10
 448 007e 04       		.uleb128 0x4
 449 007f 04       		.byte	0x4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 21


 450 0080 05       		.byte	0x5
 451 0081 696E7400 		.ascii	"int\000"
 452 0085 02       		.uleb128 0x2
 453 0086 04       		.byte	0x4
 454 0087 07       		.byte	0x7
 455 0088 4A030000 		.4byte	.LASF11
 456 008c 03       		.uleb128 0x3
 457 008d 57030000 		.4byte	.LASF12
 458 0091 06       		.byte	0x6
 459 0092 24       		.byte	0x24
 460 0093 3A000000 		.4byte	0x3a
 461 0097 03       		.uleb128 0x3
 462 0098 E5030000 		.4byte	.LASF13
 463 009c 06       		.byte	0x6
 464 009d 2C       		.byte	0x2c
 465 009e 4C000000 		.4byte	0x4c
 466 00a2 03       		.uleb128 0x3
 467 00a3 00000000 		.4byte	.LASF14
 468 00a7 06       		.byte	0x6
 469 00a8 30       		.byte	0x30
 470 00a9 5E000000 		.4byte	0x5e
 471 00ad 02       		.uleb128 0x2
 472 00ae 04       		.byte	0x4
 473 00af 04       		.byte	0x4
 474 00b0 09000000 		.4byte	.LASF15
 475 00b4 02       		.uleb128 0x2
 476 00b5 08       		.byte	0x8
 477 00b6 04       		.byte	0x4
 478 00b7 D9040000 		.4byte	.LASF16
 479 00bb 02       		.uleb128 0x2
 480 00bc 01       		.byte	0x1
 481 00bd 08       		.byte	0x8
 482 00be E0030000 		.4byte	.LASF17
 483 00c2 02       		.uleb128 0x2
 484 00c3 08       		.byte	0x8
 485 00c4 04       		.byte	0x4
 486 00c5 85020000 		.4byte	.LASF18
 487 00c9 03       		.uleb128 0x3
 488 00ca AA030000 		.4byte	.LASF19
 489 00ce 07       		.byte	0x7
 490 00cf 53       		.byte	0x53
 491 00d0 7E000000 		.4byte	0x7e
 492 00d4 03       		.uleb128 0x3
 493 00d5 E3020000 		.4byte	.LASF20
 494 00d9 07       		.byte	0x7
 495 00da 54       		.byte	0x54
 496 00db 85000000 		.4byte	0x85
 497 00df 03       		.uleb128 0x3
 498 00e0 21000000 		.4byte	.LASF21
 499 00e4 02       		.byte	0x2
 500 00e5 4D       		.byte	0x4d
 501 00e6 D4000000 		.4byte	0xd4
 502 00ea 03       		.uleb128 0x3
 503 00eb CC000000 		.4byte	.LASF22
 504 00ef 02       		.byte	0x2
 505 00f0 4F       		.byte	0x4f
 506 00f1 D4000000 		.4byte	0xd4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 22


 507 00f5 03       		.uleb128 0x3
 508 00f6 39040000 		.4byte	.LASF23
 509 00fa 02       		.byte	0x2
 510 00fb 54       		.byte	0x54
 511 00fc DF000000 		.4byte	0xdf
 512 0100 03       		.uleb128 0x3
 513 0101 11010000 		.4byte	.LASF24
 514 0105 02       		.byte	0x2
 515 0106 75       		.byte	0x75
 516 0107 DF000000 		.4byte	0xdf
 517 010b 03       		.uleb128 0x3
 518 010c 0A010000 		.4byte	.LASF25
 519 0110 02       		.byte	0x2
 520 0111 78       		.byte	0x78
 521 0112 C9000000 		.4byte	0xc9
 522 0116 05       		.uleb128 0x5
 523 0117 39000000 		.4byte	.LASF26
 524 011b 08       		.byte	0x8
 525 011c 2C02     		.2byte	0x22c
 526 011e DF000000 		.4byte	0xdf
 527 0122 02       		.uleb128 0x2
 528 0123 04       		.byte	0x4
 529 0124 07       		.byte	0x7
 530 0125 F7010000 		.4byte	.LASF27
 531 0129 03       		.uleb128 0x3
 532 012a 21010000 		.4byte	.LASF28
 533 012e 09       		.byte	0x9
 534 012f 21       		.byte	0x21
 535 0130 16010000 		.4byte	0x116
 536 0134 03       		.uleb128 0x3
 537 0135 E0040000 		.4byte	.LASF29
 538 0139 0A       		.byte	0xa
 539 013a 66       		.byte	0x66
 540 013b 3F010000 		.4byte	0x13f
 541 013f 06       		.uleb128 0x6
 542 0140 04       		.byte	0x4
 543 0141 45010000 		.4byte	0x145
 544 0145 07       		.uleb128 0x7
 545 0146 50010000 		.4byte	0x150
 546 014a 08       		.uleb128 0x8
 547 014b 29010000 		.4byte	0x129
 548 014f 00       		.byte	0
 549 0150 09       		.uleb128 0x9
 550 0151 08       		.byte	0x8
 551 0152 0A       		.byte	0xa
 552 0153 6B       		.byte	0x6b
 553 0154 71010000 		.4byte	0x171
 554 0158 0A       		.uleb128 0xa
 555 0159 72756E00 		.ascii	"run\000"
 556 015d 0A       		.byte	0xa
 557 015e 6D       		.byte	0x6d
 558 015f 34010000 		.4byte	0x134
 559 0163 00       		.byte	0
 560 0164 0B       		.uleb128 0xb
 561 0165 72010000 		.4byte	.LASF30
 562 0169 0A       		.byte	0xa
 563 016a 6E       		.byte	0x6e
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 23


 564 016b 8C000000 		.4byte	0x8c
 565 016f 04       		.byte	0x4
 566 0170 00       		.byte	0
 567 0171 03       		.uleb128 0x3
 568 0172 CE030000 		.4byte	.LASF31
 569 0176 0A       		.byte	0xa
 570 0177 6F       		.byte	0x6f
 571 0178 50010000 		.4byte	0x150
 572 017c 09       		.uleb128 0x9
 573 017d 08       		.byte	0x8
 574 017e 0A       		.byte	0xa
 575 017f 74       		.byte	0x74
 576 0180 9D010000 		.4byte	0x19d
 577 0184 0A       		.uleb128 0xa
 578 0185 72756E00 		.ascii	"run\000"
 579 0189 0A       		.byte	0xa
 580 018a 76       		.byte	0x76
 581 018b 34010000 		.4byte	0x134
 582 018f 00       		.byte	0
 583 0190 0B       		.uleb128 0xb
 584 0191 DF000000 		.4byte	.LASF32
 585 0195 0A       		.byte	0xa
 586 0196 77       		.byte	0x77
 587 0197 16010000 		.4byte	0x116
 588 019b 04       		.byte	0x4
 589 019c 00       		.byte	0
 590 019d 03       		.uleb128 0x3
 591 019e 2E030000 		.4byte	.LASF33
 592 01a2 0A       		.byte	0xa
 593 01a3 78       		.byte	0x78
 594 01a4 7C010000 		.4byte	0x17c
 595 01a8 0C       		.uleb128 0xc
 596 01a9 B3030000 		.4byte	.LASF75
 597 01ad 01       		.byte	0x1
 598 01ae 2C000000 		.4byte	0x2c
 599 01b2 10       		.byte	0x10
 600 01b3 59       		.byte	0x59
 601 01b4 D1010000 		.4byte	0x1d1
 602 01b8 0D       		.uleb128 0xd
 603 01b9 A4040000 		.4byte	.LASF34
 604 01bd 00       		.byte	0
 605 01be 0D       		.uleb128 0xd
 606 01bf AD040000 		.4byte	.LASF35
 607 01c3 01       		.byte	0x1
 608 01c4 0D       		.uleb128 0xd
 609 01c5 B6040000 		.4byte	.LASF36
 610 01c9 02       		.byte	0x2
 611 01ca 0D       		.uleb128 0xd
 612 01cb 32020000 		.4byte	.LASF37
 613 01cf 03       		.byte	0x3
 614 01d0 00       		.byte	0
 615 01d1 0E       		.uleb128 0xe
 616 01d2 91020000 		.4byte	.LASF38
 617 01d6 03       		.byte	0x3
 618 01d7 55       		.byte	0x55
 619 01d8 03       		.byte	0x3
 620 01d9 0F       		.uleb128 0xf
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 24


 621 01da BF040000 		.4byte	.LASF76
 622 01de 02       		.byte	0x2
 623 01df 5701     		.2byte	0x157
 624 01e1 03       		.byte	0x3
 625 01e2 F3010000 		.4byte	0x1f3
 626 01e6 10       		.uleb128 0x10
 627 01e7 A1050000 		.4byte	.LASF47
 628 01eb 02       		.byte	0x2
 629 01ec 5801     		.2byte	0x158
 630 01ee 00010000 		.4byte	0x100
 631 01f2 00       		.byte	0
 632 01f3 11       		.uleb128 0x11
 633 01f4 6B020000 		.4byte	.LASF45
 634 01f8 02       		.byte	0x2
 635 01f9 2F01     		.2byte	0x12f
 636 01fb 00010000 		.4byte	0x100
 637 01ff 03       		.byte	0x3
 638 0200 11020000 		.4byte	0x211
 639 0204 12       		.uleb128 0x12
 640 0205 A1050000 		.4byte	.LASF47
 641 0209 02       		.byte	0x2
 642 020a 3401     		.2byte	0x134
 643 020c DF000000 		.4byte	0xdf
 644 0210 00       		.byte	0
 645 0211 0E       		.uleb128 0xe
 646 0212 CB020000 		.4byte	.LASF39
 647 0216 02       		.byte	0x2
 648 0217 C8       		.byte	0xc8
 649 0218 03       		.byte	0x3
 650 0219 13       		.uleb128 0x13
 651 021a 45040000 		.4byte	.LASF77
 652 021e 03       		.byte	0x3
 653 021f 42       		.byte	0x42
 654 0220 F5000000 		.4byte	0xf5
 655 0224 03       		.byte	0x3
 656 0225 0E       		.uleb128 0xe
 657 0226 A6050000 		.4byte	.LASF40
 658 022a 03       		.byte	0x3
 659 022b 54       		.byte	0x54
 660 022c 03       		.byte	0x3
 661 022d 0E       		.uleb128 0xe
 662 022e 19020000 		.4byte	.LASF41
 663 0232 03       		.byte	0x3
 664 0233 64       		.byte	0x64
 665 0234 03       		.byte	0x3
 666 0235 0E       		.uleb128 0xe
 667 0236 8D040000 		.4byte	.LASF42
 668 023a 02       		.byte	0x2
 669 023b B4       		.byte	0xb4
 670 023c 03       		.byte	0x3
 671 023d 0E       		.uleb128 0xe
 672 023e D0010000 		.4byte	.LASF43
 673 0242 04       		.byte	0x4
 674 0243 42       		.byte	0x42
 675 0244 03       		.byte	0x3
 676 0245 14       		.uleb128 0x14
 677 0246 8B010000 		.4byte	.LASF78
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 25


 678 024a 01       		.byte	0x1
 679 024b 48       		.byte	0x48
 680 024c 00000000 		.4byte	.LFB110
 681 0250 4C000000 		.4byte	.LFE110-.LFB110
 682 0254 01       		.uleb128 0x1
 683 0255 9C       		.byte	0x9c
 684 0256 E6020000 		.4byte	0x2e6
 685 025a 15       		.uleb128 0x15
 686 025b 30040000 		.4byte	.LASF44
 687 025f 01       		.byte	0x1
 688 0260 4B       		.byte	0x4b
 689 0261 A2000000 		.4byte	0xa2
 690 0265 00000000 		.4byte	.LLST0
 691 0269 16       		.uleb128 0x16
 692 026a 657600   		.ascii	"ev\000"
 693 026d 01       		.byte	0x1
 694 026e 4D       		.byte	0x4d
 695 026f 16010000 		.4byte	0x116
 696 0273 02       		.uleb128 0x2
 697 0274 91       		.byte	0x91
 698 0275 74       		.sleb128 -12
 699 0276 17       		.uleb128 0x17
 700 0277 0E000000 		.4byte	.LVL2
 701 027b 6A050000 		.4byte	0x56a
 702 027f 89020000 		.4byte	0x289
 703 0283 18       		.uleb128 0x18
 704 0284 01       		.uleb128 0x1
 705 0285 50       		.byte	0x50
 706 0286 01       		.uleb128 0x1
 707 0287 45       		.byte	0x45
 708 0288 00       		.byte	0
 709 0289 17       		.uleb128 0x17
 710 028a 16000000 		.4byte	.LVL3
 711 028e 76050000 		.4byte	0x576
 712 0292 A2020000 		.4byte	0x2a2
 713 0296 18       		.uleb128 0x18
 714 0297 01       		.uleb128 0x1
 715 0298 50       		.byte	0x50
 716 0299 01       		.uleb128 0x1
 717 029a 32       		.byte	0x32
 718 029b 18       		.uleb128 0x18
 719 029c 01       		.uleb128 0x1
 720 029d 51       		.byte	0x51
 721 029e 02       		.uleb128 0x2
 722 029f 91       		.byte	0x91
 723 02a0 74       		.sleb128 -12
 724 02a1 00       		.byte	0
 725 02a2 19       		.uleb128 0x19
 726 02a3 1C000000 		.4byte	.LVL4
 727 02a7 82050000 		.4byte	0x582
 728 02ab 17       		.uleb128 0x17
 729 02ac 2E000000 		.4byte	.LVL5
 730 02b0 8E050000 		.4byte	0x58e
 731 02b4 CD020000 		.4byte	0x2cd
 732 02b8 18       		.uleb128 0x18
 733 02b9 01       		.uleb128 0x1
 734 02ba 50       		.byte	0x50
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 26


 735 02bb 05       		.uleb128 0x5
 736 02bc 03       		.byte	0x3
 737 02bd 00000000 		.4byte	.LANCHOR0
 738 02c1 18       		.uleb128 0x18
 739 02c2 01       		.uleb128 0x1
 740 02c3 51       		.byte	0x51
 741 02c4 01       		.uleb128 0x1
 742 02c5 32       		.byte	0x32
 743 02c6 18       		.uleb128 0x18
 744 02c7 01       		.uleb128 0x1
 745 02c8 52       		.byte	0x52
 746 02c9 02       		.uleb128 0x2
 747 02ca 74       		.byte	0x74
 748 02cb 00       		.sleb128 0
 749 02cc 00       		.byte	0
 750 02cd 1A       		.uleb128 0x1a
 751 02ce 42000000 		.4byte	.LVL8
 752 02d2 99050000 		.4byte	0x599
 753 02d6 18       		.uleb128 0x18
 754 02d7 01       		.uleb128 0x1
 755 02d8 50       		.byte	0x50
 756 02d9 05       		.uleb128 0x5
 757 02da 03       		.byte	0x3
 758 02db 10000000 		.4byte	.LANCHOR0+16
 759 02df 18       		.uleb128 0x18
 760 02e0 01       		.uleb128 0x1
 761 02e1 51       		.byte	0x51
 762 02e2 01       		.uleb128 0x1
 763 02e3 31       		.byte	0x31
 764 02e4 00       		.byte	0
 765 02e5 00       		.byte	0
 766 02e6 1B       		.uleb128 0x1b
 767 02e7 29000000 		.4byte	.LASF49
 768 02eb 01       		.byte	0x1
 769 02ec 7A       		.byte	0x7a
 770 02ed 00000000 		.4byte	.LFB112
 771 02f1 12000000 		.4byte	.LFE112-.LFB112
 772 02f5 01       		.uleb128 0x1
 773 02f6 9C       		.byte	0x9c
 774 02f7 1E030000 		.4byte	0x31e
 775 02fb 17       		.uleb128 0x17
 776 02fc 08000000 		.4byte	.LVL9
 777 0300 A4050000 		.4byte	0x5a4
 778 0304 0E030000 		.4byte	0x30e
 779 0308 18       		.uleb128 0x18
 780 0309 01       		.uleb128 0x1
 781 030a 50       		.byte	0x50
 782 030b 01       		.uleb128 0x1
 783 030c 30       		.byte	0x30
 784 030d 00       		.byte	0
 785 030e 1A       		.uleb128 0x1a
 786 030f 10000000 		.4byte	.LVL10
 787 0313 AF050000 		.4byte	0x5af
 788 0317 18       		.uleb128 0x18
 789 0318 01       		.uleb128 0x1
 790 0319 50       		.byte	0x50
 791 031a 01       		.uleb128 0x1
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 27


 792 031b 30       		.byte	0x30
 793 031c 00       		.byte	0
 794 031d 00       		.byte	0
 795 031e 11       		.uleb128 0x11
 796 031f F0000000 		.4byte	.LASF46
 797 0323 02       		.byte	0x2
 798 0324 6F01     		.2byte	0x16f
 799 0326 00010000 		.4byte	0x100
 800 032a 03       		.byte	0x3
 801 032b 48030000 		.4byte	0x348
 802 032f 12       		.uleb128 0x12
 803 0330 03040000 		.4byte	.LASF48
 804 0334 02       		.byte	0x2
 805 0335 7401     		.2byte	0x174
 806 0337 DF000000 		.4byte	0xdf
 807 033b 12       		.uleb128 0x12
 808 033c A1050000 		.4byte	.LASF47
 809 0340 02       		.byte	0x2
 810 0341 7501     		.2byte	0x175
 811 0343 00010000 		.4byte	0x100
 812 0347 00       		.byte	0
 813 0348 1B       		.uleb128 0x1b
 814 0349 3F030000 		.4byte	.LASF50
 815 034d 01       		.byte	0x1
 816 034e 7A       		.byte	0x7a
 817 034f 00000000 		.4byte	.LFB111
 818 0353 98000000 		.4byte	.LFE111-.LFB111
 819 0357 01       		.uleb128 0x1
 820 0358 9C       		.byte	0x9c
 821 0359 A5040000 		.4byte	0x4a5
 822 035d 1C       		.uleb128 0x1c
 823 035e 69706C00 		.ascii	"ipl\000"
 824 0362 01       		.byte	0x1
 825 0363 7A       		.byte	0x7a
 826 0364 DF000000 		.4byte	0xdf
 827 0368 1F000000 		.4byte	.LLST1
 828 036c 1D       		.uleb128 0x1d
 829 036d 11020000 		.4byte	0x211
 830 0371 0A000000 		.4byte	.LBB50
 831 0375 02000000 		.4byte	.LBE50-.LBB50
 832 0379 01       		.byte	0x1
 833 037a 7A       		.byte	0x7a
 834 037b 1E       		.uleb128 0x1e
 835 037c F3010000 		.4byte	0x1f3
 836 0380 0C000000 		.4byte	.LBB52
 837 0384 04000000 		.4byte	.LBE52-.LBB52
 838 0388 01       		.byte	0x1
 839 0389 7A       		.byte	0x7a
 840 038a 9E030000 		.4byte	0x39e
 841 038e 1F       		.uleb128 0x1f
 842 038f 0C000000 		.4byte	.LBB53
 843 0393 04000000 		.4byte	.LBE53-.LBB53
 844 0397 20       		.uleb128 0x20
 845 0398 04020000 		.4byte	0x204
 846 039c 00       		.byte	0
 847 039d 00       		.byte	0
 848 039e 1E       		.uleb128 0x1e
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 28


 849 039f 1E030000 		.4byte	0x31e
 850 03a3 10000000 		.4byte	.LBB54
 851 03a7 3A000000 		.4byte	.LBE54-.LBB54
 852 03ab 01       		.byte	0x1
 853 03ac 7A       		.byte	0x7a
 854 03ad CE030000 		.4byte	0x3ce
 855 03b1 1F       		.uleb128 0x1f
 856 03b2 10000000 		.4byte	.LBB55
 857 03b6 3A000000 		.4byte	.LBE55-.LBB55
 858 03ba 21       		.uleb128 0x21
 859 03bb 2F030000 		.4byte	0x32f
 860 03bf 33000000 		.4byte	.LLST2
 861 03c3 21       		.uleb128 0x21
 862 03c4 3B030000 		.4byte	0x33b
 863 03c8 5C000000 		.4byte	.LLST3
 864 03cc 00       		.byte	0
 865 03cd 00       		.byte	0
 866 03ce 1E       		.uleb128 0x1e
 867 03cf D9010000 		.4byte	0x1d9
 868 03d3 4A000000 		.4byte	.LBB56
 869 03d7 04000000 		.4byte	.LBE56-.LBB56
 870 03db 01       		.byte	0x1
 871 03dc 7A       		.byte	0x7a
 872 03dd E7030000 		.4byte	0x3e7
 873 03e1 22       		.uleb128 0x22
 874 03e2 E6010000 		.4byte	0x1e6
 875 03e6 00       		.byte	0
 876 03e7 1D       		.uleb128 0x1d
 877 03e8 D1010000 		.4byte	0x1d1
 878 03ec 4E000000 		.4byte	.LBB58
 879 03f0 08000000 		.4byte	.LBE58-.LBB58
 880 03f4 01       		.byte	0x1
 881 03f5 7A       		.byte	0x7a
 882 03f6 1D       		.uleb128 0x1d
 883 03f7 35020000 		.4byte	0x235
 884 03fb 5E000000 		.4byte	.LBB60
 885 03ff 02000000 		.4byte	.LBE60-.LBB60
 886 0403 01       		.byte	0x1
 887 0404 7A       		.byte	0x7a
 888 0405 1D       		.uleb128 0x1d
 889 0406 11020000 		.4byte	0x211
 890 040a 64000000 		.4byte	.LBB62
 891 040e 02000000 		.4byte	.LBE62-.LBB62
 892 0412 01       		.byte	0x1
 893 0413 7A       		.byte	0x7a
 894 0414 1E       		.uleb128 0x1e
 895 0415 D9010000 		.4byte	0x1d9
 896 0419 66000000 		.4byte	.LBB64
 897 041d 04000000 		.4byte	.LBE64-.LBB64
 898 0421 01       		.byte	0x1
 899 0422 7A       		.byte	0x7a
 900 0423 31040000 		.4byte	0x431
 901 0427 23       		.uleb128 0x23
 902 0428 E6010000 		.4byte	0x1e6
 903 042c 9E000000 		.4byte	.LLST4
 904 0430 00       		.byte	0
 905 0431 1E       		.uleb128 0x1e
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 29


 906 0432 2D020000 		.4byte	0x22d
 907 0436 6A000000 		.4byte	.LBB66
 908 043a 04000000 		.4byte	.LBE66-.LBB66
 909 043e 01       		.byte	0x1
 910 043f 7A       		.byte	0x7a
 911 0440 4E040000 		.4byte	0x44e
 912 0444 19       		.uleb128 0x19
 913 0445 6E000000 		.4byte	.LVL26
 914 0449 BB050000 		.4byte	0x5bb
 915 044d 00       		.byte	0
 916 044e 1D       		.uleb128 0x1d
 917 044f 25020000 		.4byte	0x225
 918 0453 6E000000 		.4byte	.LBB68
 919 0457 08000000 		.4byte	.LBE68-.LBB68
 920 045b 01       		.byte	0x1
 921 045c 7A       		.byte	0x7a
 922 045d 1E       		.uleb128 0x1e
 923 045e 3D020000 		.4byte	0x23d
 924 0462 7C000000 		.4byte	.LBB70
 925 0466 04000000 		.4byte	.LBE70-.LBB70
 926 046a 01       		.byte	0x1
 927 046b 7A       		.byte	0x7a
 928 046c 7A040000 		.4byte	0x47a
 929 0470 19       		.uleb128 0x19
 930 0471 80000000 		.4byte	.LVL28
 931 0475 C6050000 		.4byte	0x5c6
 932 0479 00       		.byte	0
 933 047a 1D       		.uleb128 0x1d
 934 047b 35020000 		.4byte	0x235
 935 047f 80000000 		.4byte	.LBB72
 936 0483 02000000 		.4byte	.LBE72-.LBB72
 937 0487 01       		.byte	0x1
 938 0488 7A       		.byte	0x7a
 939 0489 19       		.uleb128 0x19
 940 048a 5E000000 		.4byte	.LVL22
 941 048e D1050000 		.4byte	0x5d1
 942 0492 19       		.uleb128 0x19
 943 0493 64000000 		.4byte	.LVL23
 944 0497 E6020000 		.4byte	0x2e6
 945 049b 19       		.uleb128 0x19
 946 049c 7C000000 		.4byte	.LVL27
 947 04a0 DC050000 		.4byte	0x5dc
 948 04a4 00       		.byte	0
 949 04a5 24       		.uleb128 0x24
 950 04a6 89050000 		.4byte	.LASF51
 951 04aa 0B       		.byte	0xb
 952 04ab 40       		.byte	0x40
 953 04ac DF000000 		.4byte	0xdf
 954 04b0 24       		.uleb128 0x24
 955 04b1 00020000 		.4byte	.LASF52
 956 04b5 0B       		.byte	0xb
 957 04b6 47       		.byte	0x47
 958 04b7 EA000000 		.4byte	0xea
 959 04bb 24       		.uleb128 0x24
 960 04bc 0B040000 		.4byte	.LASF53
 961 04c0 0B       		.byte	0xb
 962 04c1 4A       		.byte	0x4a
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 30


 963 04c2 DF000000 		.4byte	0xdf
 964 04c6 24       		.uleb128 0x24
 965 04c7 91030000 		.4byte	.LASF54
 966 04cb 0C       		.byte	0xc
 967 04cc 48       		.byte	0x48
 968 04cd 0B010000 		.4byte	0x10b
 969 04d1 24       		.uleb128 0x24
 970 04d2 4C010000 		.4byte	.LASF55
 971 04d6 0D       		.byte	0xd
 972 04d7 44       		.byte	0x44
 973 04d8 DF000000 		.4byte	0xdf
 974 04dc 25       		.uleb128 0x25
 975 04dd EE040000 		.4byte	.LASF56
 976 04e1 0E       		.byte	0xe
 977 04e2 1207     		.2byte	0x712
 978 04e4 E8040000 		.4byte	0x4e8
 979 04e8 26       		.uleb128 0x26
 980 04e9 97000000 		.4byte	0x97
 981 04ed 27       		.uleb128 0x27
 982 04ee FD040000 		.4byte	0x4fd
 983 04f2 FD040000 		.4byte	0x4fd
 984 04f6 28       		.uleb128 0x28
 985 04f7 22010000 		.4byte	0x122
 986 04fb 01       		.byte	0x1
 987 04fc 00       		.byte	0
 988 04fd 29       		.uleb128 0x29
 989 04fe 71010000 		.4byte	0x171
 990 0502 2A       		.uleb128 0x2a
 991 0503 96000000 		.4byte	.LASF57
 992 0507 01       		.byte	0x1
 993 0508 2C       		.byte	0x2c
 994 0509 13050000 		.4byte	0x513
 995 050d 05       		.uleb128 0x5
 996 050e 03       		.byte	0x3
 997 050f 00000000 		.4byte	RTE_cyclicActivationTable_tsk_io
 998 0513 29       		.uleb128 0x29
 999 0514 ED040000 		.4byte	0x4ed
 1000 0518 2A       		.uleb128 0x2a
 1001 0519 2B010000 		.4byte	.LASF58
 1002 051d 01       		.byte	0x1
 1003 051e 30       		.byte	0x30
 1004 051f 29050000 		.4byte	0x529
 1005 0523 05       		.uleb128 0x5
 1006 0524 03       		.byte	0x3
 1007 0525 00000000 		.4byte	RTE_cyclicActivation_tsk_io_size
 1008 0529 29       		.uleb128 0x29
 1009 052a 8C000000 		.4byte	0x8c
 1010 052e 27       		.uleb128 0x27
 1011 052f 3E050000 		.4byte	0x53e
 1012 0533 3E050000 		.4byte	0x53e
 1013 0537 28       		.uleb128 0x28
 1014 0538 22010000 		.4byte	0x122
 1015 053c 00       		.byte	0
 1016 053d 00       		.byte	0
 1017 053e 29       		.uleb128 0x29
 1018 053f 9D010000 		.4byte	0x19d
 1019 0543 2A       		.uleb128 0x2a
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 31


 1020 0544 3B020000 		.4byte	.LASF59
 1021 0548 01       		.byte	0x1
 1022 0549 33       		.byte	0x33
 1023 054a 54050000 		.4byte	0x554
 1024 054e 05       		.uleb128 0x5
 1025 054f 03       		.byte	0x3
 1026 0550 00000000 		.4byte	RTE_eventActivationTable_tsk_io
 1027 0554 29       		.uleb128 0x29
 1028 0555 2E050000 		.4byte	0x52e
 1029 0559 2A       		.uleb128 0x2a
 1030 055a 71030000 		.4byte	.LASF60
 1031 055e 01       		.byte	0x1
 1032 055f 36       		.byte	0x36
 1033 0560 29050000 		.4byte	0x529
 1034 0564 05       		.uleb128 0x5
 1035 0565 03       		.byte	0x3
 1036 0566 00000000 		.4byte	RTE_eventActivation_tsk_io_size
 1037 056a 2B       		.uleb128 0x2b
 1038 056b 5B020000 		.4byte	.LASF61
 1039 056f 5B020000 		.4byte	.LASF61
 1040 0573 0F       		.byte	0xf
 1041 0574 5901     		.2byte	0x159
 1042 0576 2B       		.uleb128 0x2b
 1043 0577 7C010000 		.4byte	.LASF62
 1044 057b 7C010000 		.4byte	.LASF62
 1045 057f 0F       		.byte	0xf
 1046 0580 5401     		.2byte	0x154
 1047 0582 2B       		.uleb128 0x2b
 1048 0583 60030000 		.4byte	.LASF63
 1049 0587 60030000 		.4byte	.LASF63
 1050 058b 0F       		.byte	0xf
 1051 058c 4F01     		.2byte	0x14f
 1052 058e 2C       		.uleb128 0x2c
 1053 058f 6C040000 		.4byte	.LASF64
 1054 0593 6C040000 		.4byte	.LASF64
 1055 0597 0A       		.byte	0xa
 1056 0598 8E       		.byte	0x8e
 1057 0599 2C       		.uleb128 0x2c
 1058 059a ED030000 		.4byte	.LASF65
 1059 059e ED030000 		.4byte	.LASF65
 1060 05a2 0A       		.byte	0xa
 1061 05a3 97       		.byte	0x97
 1062 05a4 2C       		.uleb128 0x2c
 1063 05a5 61010000 		.4byte	.LASF66
 1064 05a9 61010000 		.4byte	.LASF66
 1065 05ad 10       		.byte	0x10
 1066 05ae 7F       		.byte	0x7f
 1067 05af 2B       		.uleb128 0x2b
 1068 05b0 5B040000 		.4byte	.LASF67
 1069 05b4 5B040000 		.4byte	.LASF67
 1070 05b8 0F       		.byte	0xf
 1071 05b9 3102     		.2byte	0x231
 1072 05bb 2C       		.uleb128 0x2c
 1073 05bc B7000000 		.4byte	.LASF68
 1074 05c0 B7000000 		.4byte	.LASF68
 1075 05c4 11       		.byte	0x11
 1076 05c5 4B       		.byte	0x4b
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 32


 1077 05c6 2C       		.uleb128 0x2c
 1078 05c7 0F000000 		.4byte	.LASF69
 1079 05cb 0F000000 		.4byte	.LASF69
 1080 05cf 04       		.byte	0x4
 1081 05d0 40       		.byte	0x40
 1082 05d1 2C       		.uleb128 0x2c
 1083 05d2 ED020000 		.4byte	.LASF70
 1084 05d6 ED020000 		.4byte	.LASF70
 1085 05da 12       		.byte	0x12
 1086 05db 68       		.byte	0x68
 1087 05dc 2C       		.uleb128 0x2c
 1088 05dd A4010000 		.4byte	.LASF71
 1089 05e1 A4010000 		.4byte	.LASF71
 1090 05e5 12       		.byte	0x12
 1091 05e6 69       		.byte	0x69
 1092 05e7 00       		.byte	0
 1093              		.section	.debug_abbrev,"",%progbits
 1094              	.Ldebug_abbrev0:
 1095 0000 01       		.uleb128 0x1
 1096 0001 11       		.uleb128 0x11
 1097 0002 01       		.byte	0x1
 1098 0003 25       		.uleb128 0x25
 1099 0004 0E       		.uleb128 0xe
 1100 0005 13       		.uleb128 0x13
 1101 0006 0B       		.uleb128 0xb
 1102 0007 03       		.uleb128 0x3
 1103 0008 0E       		.uleb128 0xe
 1104 0009 1B       		.uleb128 0x1b
 1105 000a 0E       		.uleb128 0xe
 1106 000b 55       		.uleb128 0x55
 1107 000c 17       		.uleb128 0x17
 1108 000d 11       		.uleb128 0x11
 1109 000e 01       		.uleb128 0x1
 1110 000f 10       		.uleb128 0x10
 1111 0010 17       		.uleb128 0x17
 1112 0011 00       		.byte	0
 1113 0012 00       		.byte	0
 1114 0013 02       		.uleb128 0x2
 1115 0014 24       		.uleb128 0x24
 1116 0015 00       		.byte	0
 1117 0016 0B       		.uleb128 0xb
 1118 0017 0B       		.uleb128 0xb
 1119 0018 3E       		.uleb128 0x3e
 1120 0019 0B       		.uleb128 0xb
 1121 001a 03       		.uleb128 0x3
 1122 001b 0E       		.uleb128 0xe
 1123 001c 00       		.byte	0
 1124 001d 00       		.byte	0
 1125 001e 03       		.uleb128 0x3
 1126 001f 16       		.uleb128 0x16
 1127 0020 00       		.byte	0
 1128 0021 03       		.uleb128 0x3
 1129 0022 0E       		.uleb128 0xe
 1130 0023 3A       		.uleb128 0x3a
 1131 0024 0B       		.uleb128 0xb
 1132 0025 3B       		.uleb128 0x3b
 1133 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 33


 1134 0027 49       		.uleb128 0x49
 1135 0028 13       		.uleb128 0x13
 1136 0029 00       		.byte	0
 1137 002a 00       		.byte	0
 1138 002b 04       		.uleb128 0x4
 1139 002c 24       		.uleb128 0x24
 1140 002d 00       		.byte	0
 1141 002e 0B       		.uleb128 0xb
 1142 002f 0B       		.uleb128 0xb
 1143 0030 3E       		.uleb128 0x3e
 1144 0031 0B       		.uleb128 0xb
 1145 0032 03       		.uleb128 0x3
 1146 0033 08       		.uleb128 0x8
 1147 0034 00       		.byte	0
 1148 0035 00       		.byte	0
 1149 0036 05       		.uleb128 0x5
 1150 0037 16       		.uleb128 0x16
 1151 0038 00       		.byte	0
 1152 0039 03       		.uleb128 0x3
 1153 003a 0E       		.uleb128 0xe
 1154 003b 3A       		.uleb128 0x3a
 1155 003c 0B       		.uleb128 0xb
 1156 003d 3B       		.uleb128 0x3b
 1157 003e 05       		.uleb128 0x5
 1158 003f 49       		.uleb128 0x49
 1159 0040 13       		.uleb128 0x13
 1160 0041 00       		.byte	0
 1161 0042 00       		.byte	0
 1162 0043 06       		.uleb128 0x6
 1163 0044 0F       		.uleb128 0xf
 1164 0045 00       		.byte	0
 1165 0046 0B       		.uleb128 0xb
 1166 0047 0B       		.uleb128 0xb
 1167 0048 49       		.uleb128 0x49
 1168 0049 13       		.uleb128 0x13
 1169 004a 00       		.byte	0
 1170 004b 00       		.byte	0
 1171 004c 07       		.uleb128 0x7
 1172 004d 15       		.uleb128 0x15
 1173 004e 01       		.byte	0x1
 1174 004f 27       		.uleb128 0x27
 1175 0050 19       		.uleb128 0x19
 1176 0051 01       		.uleb128 0x1
 1177 0052 13       		.uleb128 0x13
 1178 0053 00       		.byte	0
 1179 0054 00       		.byte	0
 1180 0055 08       		.uleb128 0x8
 1181 0056 05       		.uleb128 0x5
 1182 0057 00       		.byte	0
 1183 0058 49       		.uleb128 0x49
 1184 0059 13       		.uleb128 0x13
 1185 005a 00       		.byte	0
 1186 005b 00       		.byte	0
 1187 005c 09       		.uleb128 0x9
 1188 005d 13       		.uleb128 0x13
 1189 005e 01       		.byte	0x1
 1190 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 34


 1191 0060 0B       		.uleb128 0xb
 1192 0061 3A       		.uleb128 0x3a
 1193 0062 0B       		.uleb128 0xb
 1194 0063 3B       		.uleb128 0x3b
 1195 0064 0B       		.uleb128 0xb
 1196 0065 01       		.uleb128 0x1
 1197 0066 13       		.uleb128 0x13
 1198 0067 00       		.byte	0
 1199 0068 00       		.byte	0
 1200 0069 0A       		.uleb128 0xa
 1201 006a 0D       		.uleb128 0xd
 1202 006b 00       		.byte	0
 1203 006c 03       		.uleb128 0x3
 1204 006d 08       		.uleb128 0x8
 1205 006e 3A       		.uleb128 0x3a
 1206 006f 0B       		.uleb128 0xb
 1207 0070 3B       		.uleb128 0x3b
 1208 0071 0B       		.uleb128 0xb
 1209 0072 49       		.uleb128 0x49
 1210 0073 13       		.uleb128 0x13
 1211 0074 38       		.uleb128 0x38
 1212 0075 0B       		.uleb128 0xb
 1213 0076 00       		.byte	0
 1214 0077 00       		.byte	0
 1215 0078 0B       		.uleb128 0xb
 1216 0079 0D       		.uleb128 0xd
 1217 007a 00       		.byte	0
 1218 007b 03       		.uleb128 0x3
 1219 007c 0E       		.uleb128 0xe
 1220 007d 3A       		.uleb128 0x3a
 1221 007e 0B       		.uleb128 0xb
 1222 007f 3B       		.uleb128 0x3b
 1223 0080 0B       		.uleb128 0xb
 1224 0081 49       		.uleb128 0x49
 1225 0082 13       		.uleb128 0x13
 1226 0083 38       		.uleb128 0x38
 1227 0084 0B       		.uleb128 0xb
 1228 0085 00       		.byte	0
 1229 0086 00       		.byte	0
 1230 0087 0C       		.uleb128 0xc
 1231 0088 04       		.uleb128 0x4
 1232 0089 01       		.byte	0x1
 1233 008a 03       		.uleb128 0x3
 1234 008b 0E       		.uleb128 0xe
 1235 008c 0B       		.uleb128 0xb
 1236 008d 0B       		.uleb128 0xb
 1237 008e 49       		.uleb128 0x49
 1238 008f 13       		.uleb128 0x13
 1239 0090 3A       		.uleb128 0x3a
 1240 0091 0B       		.uleb128 0xb
 1241 0092 3B       		.uleb128 0x3b
 1242 0093 0B       		.uleb128 0xb
 1243 0094 01       		.uleb128 0x1
 1244 0095 13       		.uleb128 0x13
 1245 0096 00       		.byte	0
 1246 0097 00       		.byte	0
 1247 0098 0D       		.uleb128 0xd
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 35


 1248 0099 28       		.uleb128 0x28
 1249 009a 00       		.byte	0
 1250 009b 03       		.uleb128 0x3
 1251 009c 0E       		.uleb128 0xe
 1252 009d 1C       		.uleb128 0x1c
 1253 009e 0B       		.uleb128 0xb
 1254 009f 00       		.byte	0
 1255 00a0 00       		.byte	0
 1256 00a1 0E       		.uleb128 0xe
 1257 00a2 2E       		.uleb128 0x2e
 1258 00a3 00       		.byte	0
 1259 00a4 03       		.uleb128 0x3
 1260 00a5 0E       		.uleb128 0xe
 1261 00a6 3A       		.uleb128 0x3a
 1262 00a7 0B       		.uleb128 0xb
 1263 00a8 3B       		.uleb128 0x3b
 1264 00a9 0B       		.uleb128 0xb
 1265 00aa 27       		.uleb128 0x27
 1266 00ab 19       		.uleb128 0x19
 1267 00ac 20       		.uleb128 0x20
 1268 00ad 0B       		.uleb128 0xb
 1269 00ae 00       		.byte	0
 1270 00af 00       		.byte	0
 1271 00b0 0F       		.uleb128 0xf
 1272 00b1 2E       		.uleb128 0x2e
 1273 00b2 01       		.byte	0x1
 1274 00b3 03       		.uleb128 0x3
 1275 00b4 0E       		.uleb128 0xe
 1276 00b5 3A       		.uleb128 0x3a
 1277 00b6 0B       		.uleb128 0xb
 1278 00b7 3B       		.uleb128 0x3b
 1279 00b8 05       		.uleb128 0x5
 1280 00b9 27       		.uleb128 0x27
 1281 00ba 19       		.uleb128 0x19
 1282 00bb 20       		.uleb128 0x20
 1283 00bc 0B       		.uleb128 0xb
 1284 00bd 01       		.uleb128 0x1
 1285 00be 13       		.uleb128 0x13
 1286 00bf 00       		.byte	0
 1287 00c0 00       		.byte	0
 1288 00c1 10       		.uleb128 0x10
 1289 00c2 05       		.uleb128 0x5
 1290 00c3 00       		.byte	0
 1291 00c4 03       		.uleb128 0x3
 1292 00c5 0E       		.uleb128 0xe
 1293 00c6 3A       		.uleb128 0x3a
 1294 00c7 0B       		.uleb128 0xb
 1295 00c8 3B       		.uleb128 0x3b
 1296 00c9 05       		.uleb128 0x5
 1297 00ca 49       		.uleb128 0x49
 1298 00cb 13       		.uleb128 0x13
 1299 00cc 00       		.byte	0
 1300 00cd 00       		.byte	0
 1301 00ce 11       		.uleb128 0x11
 1302 00cf 2E       		.uleb128 0x2e
 1303 00d0 01       		.byte	0x1
 1304 00d1 03       		.uleb128 0x3
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 36


 1305 00d2 0E       		.uleb128 0xe
 1306 00d3 3A       		.uleb128 0x3a
 1307 00d4 0B       		.uleb128 0xb
 1308 00d5 3B       		.uleb128 0x3b
 1309 00d6 05       		.uleb128 0x5
 1310 00d7 27       		.uleb128 0x27
 1311 00d8 19       		.uleb128 0x19
 1312 00d9 49       		.uleb128 0x49
 1313 00da 13       		.uleb128 0x13
 1314 00db 20       		.uleb128 0x20
 1315 00dc 0B       		.uleb128 0xb
 1316 00dd 01       		.uleb128 0x1
 1317 00de 13       		.uleb128 0x13
 1318 00df 00       		.byte	0
 1319 00e0 00       		.byte	0
 1320 00e1 12       		.uleb128 0x12
 1321 00e2 34       		.uleb128 0x34
 1322 00e3 00       		.byte	0
 1323 00e4 03       		.uleb128 0x3
 1324 00e5 0E       		.uleb128 0xe
 1325 00e6 3A       		.uleb128 0x3a
 1326 00e7 0B       		.uleb128 0xb
 1327 00e8 3B       		.uleb128 0x3b
 1328 00e9 05       		.uleb128 0x5
 1329 00ea 49       		.uleb128 0x49
 1330 00eb 13       		.uleb128 0x13
 1331 00ec 00       		.byte	0
 1332 00ed 00       		.byte	0
 1333 00ee 13       		.uleb128 0x13
 1334 00ef 2E       		.uleb128 0x2e
 1335 00f0 00       		.byte	0
 1336 00f1 03       		.uleb128 0x3
 1337 00f2 0E       		.uleb128 0xe
 1338 00f3 3A       		.uleb128 0x3a
 1339 00f4 0B       		.uleb128 0xb
 1340 00f5 3B       		.uleb128 0x3b
 1341 00f6 0B       		.uleb128 0xb
 1342 00f7 27       		.uleb128 0x27
 1343 00f8 19       		.uleb128 0x19
 1344 00f9 49       		.uleb128 0x49
 1345 00fa 13       		.uleb128 0x13
 1346 00fb 20       		.uleb128 0x20
 1347 00fc 0B       		.uleb128 0xb
 1348 00fd 00       		.byte	0
 1349 00fe 00       		.byte	0
 1350 00ff 14       		.uleb128 0x14
 1351 0100 2E       		.uleb128 0x2e
 1352 0101 01       		.byte	0x1
 1353 0102 3F       		.uleb128 0x3f
 1354 0103 19       		.uleb128 0x19
 1355 0104 03       		.uleb128 0x3
 1356 0105 0E       		.uleb128 0xe
 1357 0106 3A       		.uleb128 0x3a
 1358 0107 0B       		.uleb128 0xb
 1359 0108 3B       		.uleb128 0x3b
 1360 0109 0B       		.uleb128 0xb
 1361 010a 27       		.uleb128 0x27
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 37


 1362 010b 19       		.uleb128 0x19
 1363 010c 8701     		.uleb128 0x87
 1364 010e 19       		.uleb128 0x19
 1365 010f 11       		.uleb128 0x11
 1366 0110 01       		.uleb128 0x1
 1367 0111 12       		.uleb128 0x12
 1368 0112 06       		.uleb128 0x6
 1369 0113 40       		.uleb128 0x40
 1370 0114 18       		.uleb128 0x18
 1371 0115 9742     		.uleb128 0x2117
 1372 0117 19       		.uleb128 0x19
 1373 0118 01       		.uleb128 0x1
 1374 0119 13       		.uleb128 0x13
 1375 011a 00       		.byte	0
 1376 011b 00       		.byte	0
 1377 011c 15       		.uleb128 0x15
 1378 011d 34       		.uleb128 0x34
 1379 011e 00       		.byte	0
 1380 011f 03       		.uleb128 0x3
 1381 0120 0E       		.uleb128 0xe
 1382 0121 3A       		.uleb128 0x3a
 1383 0122 0B       		.uleb128 0xb
 1384 0123 3B       		.uleb128 0x3b
 1385 0124 0B       		.uleb128 0xb
 1386 0125 49       		.uleb128 0x49
 1387 0126 13       		.uleb128 0x13
 1388 0127 02       		.uleb128 0x2
 1389 0128 17       		.uleb128 0x17
 1390 0129 00       		.byte	0
 1391 012a 00       		.byte	0
 1392 012b 16       		.uleb128 0x16
 1393 012c 34       		.uleb128 0x34
 1394 012d 00       		.byte	0
 1395 012e 03       		.uleb128 0x3
 1396 012f 08       		.uleb128 0x8
 1397 0130 3A       		.uleb128 0x3a
 1398 0131 0B       		.uleb128 0xb
 1399 0132 3B       		.uleb128 0x3b
 1400 0133 0B       		.uleb128 0xb
 1401 0134 49       		.uleb128 0x49
 1402 0135 13       		.uleb128 0x13
 1403 0136 02       		.uleb128 0x2
 1404 0137 18       		.uleb128 0x18
 1405 0138 00       		.byte	0
 1406 0139 00       		.byte	0
 1407 013a 17       		.uleb128 0x17
 1408 013b 898201   		.uleb128 0x4109
 1409 013e 01       		.byte	0x1
 1410 013f 11       		.uleb128 0x11
 1411 0140 01       		.uleb128 0x1
 1412 0141 31       		.uleb128 0x31
 1413 0142 13       		.uleb128 0x13
 1414 0143 01       		.uleb128 0x1
 1415 0144 13       		.uleb128 0x13
 1416 0145 00       		.byte	0
 1417 0146 00       		.byte	0
 1418 0147 18       		.uleb128 0x18
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 38


 1419 0148 8A8201   		.uleb128 0x410a
 1420 014b 00       		.byte	0
 1421 014c 02       		.uleb128 0x2
 1422 014d 18       		.uleb128 0x18
 1423 014e 9142     		.uleb128 0x2111
 1424 0150 18       		.uleb128 0x18
 1425 0151 00       		.byte	0
 1426 0152 00       		.byte	0
 1427 0153 19       		.uleb128 0x19
 1428 0154 898201   		.uleb128 0x4109
 1429 0157 00       		.byte	0
 1430 0158 11       		.uleb128 0x11
 1431 0159 01       		.uleb128 0x1
 1432 015a 31       		.uleb128 0x31
 1433 015b 13       		.uleb128 0x13
 1434 015c 00       		.byte	0
 1435 015d 00       		.byte	0
 1436 015e 1A       		.uleb128 0x1a
 1437 015f 898201   		.uleb128 0x4109
 1438 0162 01       		.byte	0x1
 1439 0163 11       		.uleb128 0x11
 1440 0164 01       		.uleb128 0x1
 1441 0165 31       		.uleb128 0x31
 1442 0166 13       		.uleb128 0x13
 1443 0167 00       		.byte	0
 1444 0168 00       		.byte	0
 1445 0169 1B       		.uleb128 0x1b
 1446 016a 2E       		.uleb128 0x2e
 1447 016b 01       		.byte	0x1
 1448 016c 3F       		.uleb128 0x3f
 1449 016d 19       		.uleb128 0x19
 1450 016e 03       		.uleb128 0x3
 1451 016f 0E       		.uleb128 0xe
 1452 0170 3A       		.uleb128 0x3a
 1453 0171 0B       		.uleb128 0xb
 1454 0172 3B       		.uleb128 0x3b
 1455 0173 0B       		.uleb128 0xb
 1456 0174 27       		.uleb128 0x27
 1457 0175 19       		.uleb128 0x19
 1458 0176 11       		.uleb128 0x11
 1459 0177 01       		.uleb128 0x1
 1460 0178 12       		.uleb128 0x12
 1461 0179 06       		.uleb128 0x6
 1462 017a 40       		.uleb128 0x40
 1463 017b 18       		.uleb128 0x18
 1464 017c 9742     		.uleb128 0x2117
 1465 017e 19       		.uleb128 0x19
 1466 017f 01       		.uleb128 0x1
 1467 0180 13       		.uleb128 0x13
 1468 0181 00       		.byte	0
 1469 0182 00       		.byte	0
 1470 0183 1C       		.uleb128 0x1c
 1471 0184 34       		.uleb128 0x34
 1472 0185 00       		.byte	0
 1473 0186 03       		.uleb128 0x3
 1474 0187 08       		.uleb128 0x8
 1475 0188 3A       		.uleb128 0x3a
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 39


 1476 0189 0B       		.uleb128 0xb
 1477 018a 3B       		.uleb128 0x3b
 1478 018b 0B       		.uleb128 0xb
 1479 018c 49       		.uleb128 0x49
 1480 018d 13       		.uleb128 0x13
 1481 018e 02       		.uleb128 0x2
 1482 018f 17       		.uleb128 0x17
 1483 0190 00       		.byte	0
 1484 0191 00       		.byte	0
 1485 0192 1D       		.uleb128 0x1d
 1486 0193 1D       		.uleb128 0x1d
 1487 0194 00       		.byte	0
 1488 0195 31       		.uleb128 0x31
 1489 0196 13       		.uleb128 0x13
 1490 0197 11       		.uleb128 0x11
 1491 0198 01       		.uleb128 0x1
 1492 0199 12       		.uleb128 0x12
 1493 019a 06       		.uleb128 0x6
 1494 019b 58       		.uleb128 0x58
 1495 019c 0B       		.uleb128 0xb
 1496 019d 59       		.uleb128 0x59
 1497 019e 0B       		.uleb128 0xb
 1498 019f 00       		.byte	0
 1499 01a0 00       		.byte	0
 1500 01a1 1E       		.uleb128 0x1e
 1501 01a2 1D       		.uleb128 0x1d
 1502 01a3 01       		.byte	0x1
 1503 01a4 31       		.uleb128 0x31
 1504 01a5 13       		.uleb128 0x13
 1505 01a6 11       		.uleb128 0x11
 1506 01a7 01       		.uleb128 0x1
 1507 01a8 12       		.uleb128 0x12
 1508 01a9 06       		.uleb128 0x6
 1509 01aa 58       		.uleb128 0x58
 1510 01ab 0B       		.uleb128 0xb
 1511 01ac 59       		.uleb128 0x59
 1512 01ad 0B       		.uleb128 0xb
 1513 01ae 01       		.uleb128 0x1
 1514 01af 13       		.uleb128 0x13
 1515 01b0 00       		.byte	0
 1516 01b1 00       		.byte	0
 1517 01b2 1F       		.uleb128 0x1f
 1518 01b3 0B       		.uleb128 0xb
 1519 01b4 01       		.byte	0x1
 1520 01b5 11       		.uleb128 0x11
 1521 01b6 01       		.uleb128 0x1
 1522 01b7 12       		.uleb128 0x12
 1523 01b8 06       		.uleb128 0x6
 1524 01b9 00       		.byte	0
 1525 01ba 00       		.byte	0
 1526 01bb 20       		.uleb128 0x20
 1527 01bc 34       		.uleb128 0x34
 1528 01bd 00       		.byte	0
 1529 01be 31       		.uleb128 0x31
 1530 01bf 13       		.uleb128 0x13
 1531 01c0 00       		.byte	0
 1532 01c1 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 40


 1533 01c2 21       		.uleb128 0x21
 1534 01c3 34       		.uleb128 0x34
 1535 01c4 00       		.byte	0
 1536 01c5 31       		.uleb128 0x31
 1537 01c6 13       		.uleb128 0x13
 1538 01c7 02       		.uleb128 0x2
 1539 01c8 17       		.uleb128 0x17
 1540 01c9 00       		.byte	0
 1541 01ca 00       		.byte	0
 1542 01cb 22       		.uleb128 0x22
 1543 01cc 05       		.uleb128 0x5
 1544 01cd 00       		.byte	0
 1545 01ce 31       		.uleb128 0x31
 1546 01cf 13       		.uleb128 0x13
 1547 01d0 00       		.byte	0
 1548 01d1 00       		.byte	0
 1549 01d2 23       		.uleb128 0x23
 1550 01d3 05       		.uleb128 0x5
 1551 01d4 00       		.byte	0
 1552 01d5 31       		.uleb128 0x31
 1553 01d6 13       		.uleb128 0x13
 1554 01d7 02       		.uleb128 0x2
 1555 01d8 17       		.uleb128 0x17
 1556 01d9 00       		.byte	0
 1557 01da 00       		.byte	0
 1558 01db 24       		.uleb128 0x24
 1559 01dc 34       		.uleb128 0x34
 1560 01dd 00       		.byte	0
 1561 01de 03       		.uleb128 0x3
 1562 01df 0E       		.uleb128 0xe
 1563 01e0 3A       		.uleb128 0x3a
 1564 01e1 0B       		.uleb128 0xb
 1565 01e2 3B       		.uleb128 0x3b
 1566 01e3 0B       		.uleb128 0xb
 1567 01e4 49       		.uleb128 0x49
 1568 01e5 13       		.uleb128 0x13
 1569 01e6 3F       		.uleb128 0x3f
 1570 01e7 19       		.uleb128 0x19
 1571 01e8 3C       		.uleb128 0x3c
 1572 01e9 19       		.uleb128 0x19
 1573 01ea 00       		.byte	0
 1574 01eb 00       		.byte	0
 1575 01ec 25       		.uleb128 0x25
 1576 01ed 34       		.uleb128 0x34
 1577 01ee 00       		.byte	0
 1578 01ef 03       		.uleb128 0x3
 1579 01f0 0E       		.uleb128 0xe
 1580 01f1 3A       		.uleb128 0x3a
 1581 01f2 0B       		.uleb128 0xb
 1582 01f3 3B       		.uleb128 0x3b
 1583 01f4 05       		.uleb128 0x5
 1584 01f5 49       		.uleb128 0x49
 1585 01f6 13       		.uleb128 0x13
 1586 01f7 3F       		.uleb128 0x3f
 1587 01f8 19       		.uleb128 0x19
 1588 01f9 3C       		.uleb128 0x3c
 1589 01fa 19       		.uleb128 0x19
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 41


 1590 01fb 00       		.byte	0
 1591 01fc 00       		.byte	0
 1592 01fd 26       		.uleb128 0x26
 1593 01fe 35       		.uleb128 0x35
 1594 01ff 00       		.byte	0
 1595 0200 49       		.uleb128 0x49
 1596 0201 13       		.uleb128 0x13
 1597 0202 00       		.byte	0
 1598 0203 00       		.byte	0
 1599 0204 27       		.uleb128 0x27
 1600 0205 01       		.uleb128 0x1
 1601 0206 01       		.byte	0x1
 1602 0207 49       		.uleb128 0x49
 1603 0208 13       		.uleb128 0x13
 1604 0209 01       		.uleb128 0x1
 1605 020a 13       		.uleb128 0x13
 1606 020b 00       		.byte	0
 1607 020c 00       		.byte	0
 1608 020d 28       		.uleb128 0x28
 1609 020e 21       		.uleb128 0x21
 1610 020f 00       		.byte	0
 1611 0210 49       		.uleb128 0x49
 1612 0211 13       		.uleb128 0x13
 1613 0212 2F       		.uleb128 0x2f
 1614 0213 0B       		.uleb128 0xb
 1615 0214 00       		.byte	0
 1616 0215 00       		.byte	0
 1617 0216 29       		.uleb128 0x29
 1618 0217 26       		.uleb128 0x26
 1619 0218 00       		.byte	0
 1620 0219 49       		.uleb128 0x49
 1621 021a 13       		.uleb128 0x13
 1622 021b 00       		.byte	0
 1623 021c 00       		.byte	0
 1624 021d 2A       		.uleb128 0x2a
 1625 021e 34       		.uleb128 0x34
 1626 021f 00       		.byte	0
 1627 0220 03       		.uleb128 0x3
 1628 0221 0E       		.uleb128 0xe
 1629 0222 3A       		.uleb128 0x3a
 1630 0223 0B       		.uleb128 0xb
 1631 0224 3B       		.uleb128 0x3b
 1632 0225 0B       		.uleb128 0xb
 1633 0226 49       		.uleb128 0x49
 1634 0227 13       		.uleb128 0x13
 1635 0228 3F       		.uleb128 0x3f
 1636 0229 19       		.uleb128 0x19
 1637 022a 02       		.uleb128 0x2
 1638 022b 18       		.uleb128 0x18
 1639 022c 00       		.byte	0
 1640 022d 00       		.byte	0
 1641 022e 2B       		.uleb128 0x2b
 1642 022f 2E       		.uleb128 0x2e
 1643 0230 00       		.byte	0
 1644 0231 3F       		.uleb128 0x3f
 1645 0232 19       		.uleb128 0x19
 1646 0233 3C       		.uleb128 0x3c
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 42


 1647 0234 19       		.uleb128 0x19
 1648 0235 6E       		.uleb128 0x6e
 1649 0236 0E       		.uleb128 0xe
 1650 0237 03       		.uleb128 0x3
 1651 0238 0E       		.uleb128 0xe
 1652 0239 3A       		.uleb128 0x3a
 1653 023a 0B       		.uleb128 0xb
 1654 023b 3B       		.uleb128 0x3b
 1655 023c 05       		.uleb128 0x5
 1656 023d 00       		.byte	0
 1657 023e 00       		.byte	0
 1658 023f 2C       		.uleb128 0x2c
 1659 0240 2E       		.uleb128 0x2e
 1660 0241 00       		.byte	0
 1661 0242 3F       		.uleb128 0x3f
 1662 0243 19       		.uleb128 0x19
 1663 0244 3C       		.uleb128 0x3c
 1664 0245 19       		.uleb128 0x19
 1665 0246 6E       		.uleb128 0x6e
 1666 0247 0E       		.uleb128 0xe
 1667 0248 03       		.uleb128 0x3
 1668 0249 0E       		.uleb128 0xe
 1669 024a 3A       		.uleb128 0x3a
 1670 024b 0B       		.uleb128 0xb
 1671 024c 3B       		.uleb128 0x3b
 1672 024d 0B       		.uleb128 0xb
 1673 024e 00       		.byte	0
 1674 024f 00       		.byte	0
 1675 0250 00       		.byte	0
 1676              		.section	.debug_loc,"",%progbits
 1677              	.Ldebug_loc0:
 1678              	.LLST0:
 1679 0000 04000000 		.4byte	.LVL0
 1680 0004 08000000 		.4byte	.LVL1
 1681 0008 0200     		.2byte	0x2
 1682 000a 30       		.byte	0x30
 1683 000b 9F       		.byte	0x9f
 1684 000c 08000000 		.4byte	.LVL1
 1685 0010 4C000000 		.4byte	.LFE110
 1686 0014 0100     		.2byte	0x1
 1687 0016 54       		.byte	0x54
 1688 0017 00000000 		.4byte	0
 1689 001b 00000000 		.4byte	0
 1690              	.LLST1:
 1691 001f 0A000000 		.4byte	.LVL11
 1692 0023 10000000 		.4byte	.LVL12
 1693 0027 0200     		.2byte	0x2
 1694 0029 30       		.byte	0x30
 1695 002a 9F       		.byte	0x9f
 1696 002b 00000000 		.4byte	0
 1697 002f 00000000 		.4byte	0
 1698              	.LLST2:
 1699 0033 16000000 		.4byte	.LVL13
 1700 0037 2C000000 		.4byte	.LVL15
 1701 003b 0100     		.2byte	0x1
 1702 003d 53       		.byte	0x53
 1703 003e 3C000000 		.4byte	.LVL17
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 43


 1704 0042 42000000 		.4byte	.LVL18
 1705 0046 0100     		.2byte	0x1
 1706 0048 53       		.byte	0x53
 1707 0049 48000000 		.4byte	.LVL20
 1708 004d 4A000000 		.4byte	.LVL21
 1709 0051 0100     		.2byte	0x1
 1710 0053 53       		.byte	0x53
 1711 0054 00000000 		.4byte	0
 1712 0058 00000000 		.4byte	0
 1713              	.LLST3:
 1714 005c 16000000 		.4byte	.LVL13
 1715 0060 3A000000 		.4byte	.LVL16
 1716 0064 0200     		.2byte	0x2
 1717 0066 30       		.byte	0x30
 1718 0067 9F       		.byte	0x9f
 1719 0068 3A000000 		.4byte	.LVL16
 1720 006c 3C000000 		.4byte	.LVL17
 1721 0070 0100     		.2byte	0x1
 1722 0072 53       		.byte	0x53
 1723 0073 3C000000 		.4byte	.LVL17
 1724 0077 46000000 		.4byte	.LVL19
 1725 007b 0200     		.2byte	0x2
 1726 007d 30       		.byte	0x30
 1727 007e 9F       		.byte	0x9f
 1728 007f 46000000 		.4byte	.LVL19
 1729 0083 48000000 		.4byte	.LVL20
 1730 0087 0100     		.2byte	0x1
 1731 0089 53       		.byte	0x53
 1732 008a 48000000 		.4byte	.LVL20
 1733 008e 4A000000 		.4byte	.LVL21
 1734 0092 0200     		.2byte	0x2
 1735 0094 30       		.byte	0x30
 1736 0095 9F       		.byte	0x9f
 1737 0096 00000000 		.4byte	0
 1738 009a 00000000 		.4byte	0
 1739              	.LLST4:
 1740 009e 66000000 		.4byte	.LVL24
 1741 00a2 6A000000 		.4byte	.LVL25
 1742 00a6 0100     		.2byte	0x1
 1743 00a8 54       		.byte	0x54
 1744 00a9 00000000 		.4byte	0
 1745 00ad 00000000 		.4byte	0
 1746              		.section	.debug_aranges,"",%progbits
 1747 0000 2C000000 		.4byte	0x2c
 1748 0004 0200     		.2byte	0x2
 1749 0006 00000000 		.4byte	.Ldebug_info0
 1750 000a 04       		.byte	0x4
 1751 000b 00       		.byte	0
 1752 000c 0000     		.2byte	0
 1753 000e 0000     		.2byte	0
 1754 0010 00000000 		.4byte	.LFB110
 1755 0014 4C000000 		.4byte	.LFE110-.LFB110
 1756 0018 00000000 		.4byte	.LFB112
 1757 001c 12000000 		.4byte	.LFE112-.LFB112
 1758 0020 00000000 		.4byte	.LFB111
 1759 0024 98000000 		.4byte	.LFE111-.LFB111
 1760 0028 00000000 		.4byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 44


 1761 002c 00000000 		.4byte	0
 1762              		.section	.debug_ranges,"",%progbits
 1763              	.Ldebug_ranges0:
 1764 0000 00000000 		.4byte	.LFB110
 1765 0004 4C000000 		.4byte	.LFE110
 1766 0008 00000000 		.4byte	.LFB112
 1767 000c 12000000 		.4byte	.LFE112
 1768 0010 00000000 		.4byte	.LFB111
 1769 0014 98000000 		.4byte	.LFE111
 1770 0018 00000000 		.4byte	0
 1771 001c 00000000 		.4byte	0
 1772              		.section	.debug_line,"",%progbits
 1773              	.Ldebug_line0:
 1774 0000 C9030000 		.section	.debug_str,"MS",%progbits,1
 1774      0200F702 
 1774      00000201 
 1774      FB0E0D00 
 1774      01010101 
 1775              	.LASF14:
 1776 0000 75696E74 		.ascii	"uint32_t\000"
 1776      33325F74 
 1776      00
 1777              	.LASF15:
 1778 0009 666C6F61 		.ascii	"float\000"
 1778      7400
 1779              	.LASF69:
 1780 000f 45455F73 		.ascii	"EE_switch_context\000"
 1780      77697463 
 1780      685F636F 
 1780      6E746578 
 1780      7400
 1781              	.LASF21:
 1782 0021 45455F55 		.ascii	"EE_UREG\000"
 1782      52454700 
 1783              	.LASF49:
 1784 0029 49535232 		.ascii	"ISR2_isr_Button\000"
 1784      5F697372 
 1784      5F427574 
 1784      746F6E00 
 1785              	.LASF26:
 1786 0039 4576656E 		.ascii	"EventMaskType\000"
 1786      744D6173 
 1786      6B547970 
 1786      6500
 1787              	.LASF74:
 1788 0047 433A5C55 		.ascii	"C:\\Users\\vboxuser\\Documents\\GitHub\\EAA_GasPeda"
 1788      73657273 
 1788      5C76626F 
 1788      78757365 
 1788      725C446F 
 1789 0075 6C5C4C61 		.ascii	"l\\Lab 1\\GasPedal.cydsn\000"
 1789      6220315C 
 1789      47617350 
 1789      6564616C 
 1789      2E637964 
 1790              	.LASF2:
 1791 008c 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 45


 1791      7420696E 
 1791      7400
 1792              	.LASF57:
 1793 0096 5254455F 		.ascii	"RTE_cyclicActivationTable_tsk_io\000"
 1793      6379636C 
 1793      69634163 
 1793      74697661 
 1793      74696F6E 
 1794              	.LASF68:
 1795 00b7 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1795      52515F65 
 1795      6E645F70 
 1795      6F73745F 
 1795      73747562 
 1796              	.LASF22:
 1797 00cc 45455F46 		.ascii	"EE_FREG\000"
 1797      52454700 
 1798              	.LASF7:
 1799 00d4 5F5F7569 		.ascii	"__uint32_t\000"
 1799      6E743332 
 1799      5F7400
 1800              	.LASF32:
 1801 00df 6576656E 		.ascii	"event\000"
 1801      7400
 1802              	.LASF4:
 1803 00e5 5F5F7569 		.ascii	"__uint16_t\000"
 1803      6E743136 
 1803      5F7400
 1804              	.LASF46:
 1805 00f0 45455F63 		.ascii	"EE_cortex_mx_get_isr_prio\000"
 1805      6F727465 
 1805      785F6D78 
 1805      5F676574 
 1805      5F697372 
 1806              	.LASF25:
 1807 010a 45455F54 		.ascii	"EE_TID\000"
 1807      494400
 1808              	.LASF24:
 1809 0111 45455F54 		.ascii	"EE_TYPEISR2PRIO\000"
 1809      59504549 
 1809      53523250 
 1809      52494F00 
 1810              	.LASF28:
 1811 0121 5254455F 		.ascii	"RTE_event\000"
 1811      6576656E 
 1811      7400
 1812              	.LASF58:
 1813 012b 5254455F 		.ascii	"RTE_cyclicActivation_tsk_io_size\000"
 1813      6379636C 
 1813      69634163 
 1813      74697661 
 1813      74696F6E 
 1814              	.LASF55:
 1815 014c 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1815      52515F6E 
 1815      65737469 
 1815      6E675F6C 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 46


 1815      6576656C 
 1816              	.LASF66:
 1817 0161 42555454 		.ascii	"BUTTON_IsPressed\000"
 1817      4F4E5F49 
 1817      73507265 
 1817      73736564 
 1817      00
 1818              	.LASF30:
 1819 0172 6379636C 		.ascii	"cycleTime\000"
 1819      6554696D 
 1819      6500
 1820              	.LASF62:
 1821 017c 45455F6F 		.ascii	"EE_oo_GetEvent\000"
 1821      6F5F4765 
 1821      74457665 
 1821      6E7400
 1822              	.LASF78:
 1823 018b 46756E63 		.ascii	"Functsk_io\000"
 1823      74736B5F 
 1823      696F00
 1824              	.LASF9:
 1825 0196 6C6F6E67 		.ascii	"long long int\000"
 1825      206C6F6E 
 1825      6720696E 
 1825      7400
 1826              	.LASF71:
 1827 01a4 45455F63 		.ascii	"EE_cortex_mx_change_IRQ_stack_back\000"
 1827      6F727465 
 1827      785F6D78 
 1827      5F636861 
 1827      6E67655F 
 1828              	.LASF6:
 1829 01c7 6C6F6E67 		.ascii	"long int\000"
 1829      20696E74 
 1829      00
 1830              	.LASF43:
 1831 01d0 45455F63 		.ascii	"EE_cortex_mx_IRQ_active_change_context\000"
 1831      6F727465 
 1831      785F6D78 
 1831      5F495251 
 1831      5F616374 
 1832              	.LASF27:
 1833 01f7 73697A65 		.ascii	"sizetype\000"
 1833      74797065 
 1833      00
 1834              	.LASF52:
 1835 0200 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1835      6F5F4952 
 1835      515F7375 
 1835      7370656E 
 1835      645F7374 
 1836              	.LASF41:
 1837 0219 45455F73 		.ascii	"EE_std_end_IRQ_post_stub\000"
 1837      74645F65 
 1837      6E645F49 
 1837      52515F70 
 1837      6F73745F 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 47


 1838              	.LASF37:
 1839 0232 42555454 		.ascii	"BUTTON_4\000"
 1839      4F4E5F34 
 1839      00
 1840              	.LASF59:
 1841 023b 5254455F 		.ascii	"RTE_eventActivationTable_tsk_io\000"
 1841      6576656E 
 1841      74416374 
 1841      69766174 
 1841      696F6E54 
 1842              	.LASF61:
 1843 025b 45455F6F 		.ascii	"EE_oo_WaitEvent\000"
 1843      6F5F5761 
 1843      69744576 
 1843      656E7400 
 1844              	.LASF45:
 1845 026b 45455F63 		.ascii	"EE_cortex_mx_get_int_prio\000"
 1845      6F727465 
 1845      785F6D78 
 1845      5F676574 
 1845      5F696E74 
 1846              	.LASF18:
 1847 0285 6C6F6E67 		.ascii	"long double\000"
 1847      20646F75 
 1847      626C6500 
 1848              	.LASF38:
 1849 0291 45455F69 		.ascii	"EE_increment_IRQ_nesting_level\000"
 1849      6E637265 
 1849      6D656E74 
 1849      5F495251 
 1849      5F6E6573 
 1850              	.LASF73:
 1851 02b0 6173775C 		.ascii	"asw\\tsk_io.c\000"
 1851      74736B5F 
 1851      696F2E63 
 1851      00
 1852              	.LASF1:
 1853 02bd 756E7369 		.ascii	"unsigned char\000"
 1853      676E6564 
 1853      20636861 
 1853      7200
 1854              	.LASF39:
 1855 02cb 45455F63 		.ascii	"EE_cortex_mx_disableIRQ\000"
 1855      6F727465 
 1855      785F6D78 
 1855      5F646973 
 1855      61626C65 
 1856              	.LASF20:
 1857 02e3 45455F55 		.ascii	"EE_UINT32\000"
 1857      494E5433 
 1857      3200
 1858              	.LASF70:
 1859 02ed 45455F63 		.ascii	"EE_cortex_mx_change_IRQ_stack\000"
 1859      6F727465 
 1859      785F6D78 
 1859      5F636861 
 1859      6E67655F 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 48


 1860              	.LASF0:
 1861 030b 7369676E 		.ascii	"signed char\000"
 1861      65642063 
 1861      68617200 
 1862              	.LASF10:
 1863 0317 6C6F6E67 		.ascii	"long long unsigned int\000"
 1863      206C6F6E 
 1863      6720756E 
 1863      7369676E 
 1863      65642069 
 1864              	.LASF33:
 1865 032e 5254455F 		.ascii	"RTE_eventTable_t\000"
 1865      6576656E 
 1865      74546162 
 1865      6C655F74 
 1865      00
 1866              	.LASF50:
 1867 033f 6973725F 		.ascii	"isr_Button\000"
 1867      42757474 
 1867      6F6E00
 1868              	.LASF11:
 1869 034a 756E7369 		.ascii	"unsigned int\000"
 1869      676E6564 
 1869      20696E74 
 1869      00
 1870              	.LASF12:
 1871 0357 75696E74 		.ascii	"uint16_t\000"
 1871      31365F74 
 1871      00
 1872              	.LASF63:
 1873 0360 45455F6F 		.ascii	"EE_oo_ClearEvent\000"
 1873      6F5F436C 
 1873      65617245 
 1873      76656E74 
 1873      00
 1874              	.LASF60:
 1875 0371 5254455F 		.ascii	"RTE_eventActivation_tsk_io_size\000"
 1875      6576656E 
 1875      74416374 
 1875      69766174 
 1875      696F6E5F 
 1876              	.LASF54:
 1877 0391 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1877      74645F65 
 1877      6E646379 
 1877      636C655F 
 1877      6E657874 
 1878              	.LASF19:
 1879 03aa 45455F49 		.ascii	"EE_INT32\000"
 1879      4E543332 
 1879      00
 1880              	.LASF75:
 1881 03b3 65427574 		.ascii	"eButton\000"
 1881      746F6E00 
 1882              	.LASF3:
 1883 03bb 73686F72 		.ascii	"short unsigned int\000"
 1883      7420756E 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 49


 1883      7369676E 
 1883      65642069 
 1883      6E7400
 1884              	.LASF31:
 1885 03ce 5254455F 		.ascii	"RTE_cyclicTable_t\000"
 1885      6379636C 
 1885      69635461 
 1885      626C655F 
 1885      7400
 1886              	.LASF17:
 1887 03e0 63686172 		.ascii	"char\000"
 1887      00
 1888              	.LASF13:
 1889 03e5 696E7433 		.ascii	"int32_t\000"
 1889      325F7400 
 1890              	.LASF65:
 1891 03ed 5254455F 		.ascii	"RTE_ProcessEventTable\000"
 1891      50726F63 
 1891      65737345 
 1891      76656E74 
 1891      5461626C 
 1892              	.LASF48:
 1893 0403 76656374 		.ascii	"vectact\000"
 1893      61637400 
 1894              	.LASF53:
 1895 040b 45455F41 		.ascii	"EE_ApplicationMode\000"
 1895      70706C69 
 1895      63617469 
 1895      6F6E4D6F 
 1895      646500
 1896              	.LASF8:
 1897 041e 6C6F6E67 		.ascii	"long unsigned int\000"
 1897      20756E73 
 1897      69676E65 
 1897      6420696E 
 1897      7400
 1898              	.LASF44:
 1899 0430 7469636B 		.ascii	"ticktime\000"
 1899      74696D65 
 1899      00
 1900              	.LASF23:
 1901 0439 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1901      59504542 
 1901      4F4F4C00 
 1902              	.LASF77:
 1903 0445 45455F69 		.ascii	"EE_is_inside_ISR_call\000"
 1903      735F696E 
 1903      73696465 
 1903      5F495352 
 1903      5F63616C 
 1904              	.LASF67:
 1905 045b 45455F6F 		.ascii	"EE_oo_ShutdownOS\000"
 1905      6F5F5368 
 1905      7574646F 
 1905      776E4F53 
 1905      00
 1906              	.LASF64:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 50


 1907 046c 5254455F 		.ascii	"RTE_ProcessCyclicTable\000"
 1907      50726F63 
 1907      65737343 
 1907      79636C69 
 1907      63546162 
 1908              	.LASF5:
 1909 0483 5F5F696E 		.ascii	"__int32_t\000"
 1909      7433325F 
 1909      7400
 1910              	.LASF42:
 1911 048d 45455F63 		.ascii	"EE_cortex_mx_enableIRQ\000"
 1911      6F727465 
 1911      785F6D78 
 1911      5F656E61 
 1911      626C6549 
 1912              	.LASF34:
 1913 04a4 42555454 		.ascii	"BUTTON_1\000"
 1913      4F4E5F31 
 1913      00
 1914              	.LASF35:
 1915 04ad 42555454 		.ascii	"BUTTON_2\000"
 1915      4F4E5F32 
 1915      00
 1916              	.LASF36:
 1917 04b6 42555454 		.ascii	"BUTTON_3\000"
 1917      4F4E5F33 
 1917      00
 1918              	.LASF76:
 1919 04bf 45455F63 		.ascii	"EE_cortex_mx_set_int_prio\000"
 1919      6F727465 
 1919      785F6D78 
 1919      5F736574 
 1919      5F696E74 
 1920              	.LASF16:
 1921 04d9 646F7562 		.ascii	"double\000"
 1921      6C6500
 1922              	.LASF29:
 1923 04e0 5254455F 		.ascii	"RTE_pRunnable\000"
 1923      7052756E 
 1923      6E61626C 
 1923      6500
 1924              	.LASF56:
 1925 04ee 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1925      52784275 
 1925      66666572 
 1925      00
 1926              	.LASF72:
 1927 04fb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1927      43313120 
 1927      352E342E 
 1927      31203230 
 1927      31363036 
 1928 052e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1928      20726576 
 1928      6973696F 
 1928      6E203233 
 1928      37373135 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccCRgROP.s 			page 51


 1929 0561 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1929      66756E63 
 1929      74696F6E 
 1929      2D736563 
 1929      74696F6E 
 1930              	.LASF51:
 1931 0589 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1931      6F5F4952 
 1931      515F6469 
 1931      7361626C 
 1931      655F636F 
 1932              	.LASF47:
 1933 05a1 7072696F 		.ascii	"prio\000"
 1933      00
 1934              	.LASF40:
 1935 05a6 45455F64 		.ascii	"EE_decrement_IRQ_nesting_level\000"
 1935      65637265 
 1935      6D656E74 
 1935      5F495251 
 1935      5F6E6573 
 1936              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
