ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ISR2_systick_handler,"ax",%progbits
  20              		.align	2
  21              		.global	ISR2_systick_handler
  22              		.thumb
  23              		.thumb_func
  24              		.type	ISR2_systick_handler, %function
  25              	ISR2_systick_handler:
  26              	.LFB112:
  27              		.file 1 "asw\\main.c"
   1:asw/main.c    **** /* ========================================
   2:asw/main.c    ****  *
   3:asw/main.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:asw/main.c    ****  * All Rights Reserved
   5:asw/main.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:asw/main.c    ****  *
   7:asw/main.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:asw/main.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:asw/main.c    ****  *
  10:asw/main.c    ****  * ========================================
  11:asw/main.c    **** */
  12:asw/main.c    **** #include "project.h"
  13:asw/main.c    **** #include "global.h"
  14:asw/main.c    **** 
  15:asw/main.c    **** #include <stdlib.h>
  16:asw/main.c    **** #include <stdio.h>
  17:asw/main.c    **** #include "joystick.h"
  18:asw/main.c    **** #include "watchdog.h"
  19:asw/main.c    **** #include "button.h"
  20:asw/main.c    **** #include "led.h"
  21:asw/main.c    **** //ISR which will increment the systick counter every ms
  22:asw/main.c    **** ISR(systick_handler)
  23:asw/main.c    **** {
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 2


  35              		.cfi_offset 14, -4
  24:asw/main.c    ****     CounterTick(cnt_systick);
  36              		.loc 1 24 0
  37 0002 0020     		movs	r0, #0
  38 0004 FFF7FEFF 		bl	EE_oo_IncrementCounter
  39              	.LVL0:
  40 0008 08BD     		pop	{r3, pc}
  41              		.cfi_endproc
  42              	.LFE112:
  43              		.size	ISR2_systick_handler, .-ISR2_systick_handler
  44 000a 00BF     		.section	.text.systick_handler,"ax",%progbits
  45              		.align	2
  46              		.global	systick_handler
  47              		.thumb
  48              		.thumb_func
  49              		.type	systick_handler, %function
  50              	systick_handler:
  51              	.LFB111:
  22:asw/main.c    **** {
  52              		.loc 1 22 0
  53              		.cfi_startproc
  54              		@ Stack Align: May be called with mis-aligned SP.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 6846     		mov	r0, sp
  58              		.cfi_register 13, 0
  59 0002 20F00701 		bic	r1, r0, #7
  60 0006 8D46     		mov	sp, r1
  61 0008 19B5     		push	{r0, r3, r4, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 13, -16
  64              		.cfi_offset 3, -12
  65              		.cfi_offset 4, -8
  66              		.cfi_offset 14, -4
  67              	.LVL1:
  68              	.LBB56:
  69              	.LBB57:
  70              		.file 2 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 3


  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 4


  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 5


 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 6


 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
  71              		.loc 2 211 0
  72              		.syntax unified
  73              	@ 211 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  74 000a 72B6     		cpsid i
  75              	@ 0 "" 2
  76              		.thumb
  77              		.syntax unified
  78              	.LBE57:
  79              	.LBE56:
  80              	.LBB58:
  81              	.LBB59:
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 7


 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
 262:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 263:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 264:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 265:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 266:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 267:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 268:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return istat;
 269:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 270:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 271:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 273:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Return true (not 0) if IRQs are enabled, 0 (false) if IRQ are disabled.
 274:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 275:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  EE_cortex_mx_get_IRQ_enabled(void)
 276:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 277:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 278:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_UREG ie;
 279:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 280:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 281:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	ie = __get_PRIMASK();
 282:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 283:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 284:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    MRS     r0, PRIMASK\n"
 285:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    EOR     r0, #1\n"
 286:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 287:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 288:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 289:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 290:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	ie = PRIMASK;
 291:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 292:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("MRS %0, primask" : "=r" (ie) );
 293:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 8


 294:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 295:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 296:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 297:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 298:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 299:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return EE_cortex_mx_are_IRQs_enabled(ie);
 300:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 301:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 302:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 303:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_TYPEISR2PRIO  EE_cortex_mx_get_int_prio(void)
 304:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 305:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 306:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 307:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 308:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_UREG prio;
 309:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__KEIL__
 310:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG BASEPRI __ASM("basepri");
 311:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 312:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 313:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 314:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 316:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	/* NVIC_INT_PRI_S = 5 */
 317:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    MRS     R0, BASEPRI\n"
 318:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    ASR     R0, #5\n"
 319:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    BLX     LR\n");
 320:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 321:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 322:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	prio = BASEPRI;
 323:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 324:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 325:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MRS %0, BASEPRI" : "=r" (prio) :: );
  82              		.loc 2 325 0
  83              		.syntax unified
  84              	@ 325 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  85 000c EFF31184 		MRS r4, BASEPRI
  86              	@ 0 "" 2
  87              	.LVL2:
  88              		.thumb
  89              		.syntax unified
  90              	.LBE59:
  91              	.LBE58:
  92              	.LBB60:
  93              	.LBB61:
 326:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 327:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MRS %0, BASEPRI" :: "=r" (prio));
 328:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__GNU__ */
 329:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 330:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 331:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 332:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 333:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 334:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 335:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return prio >> NVIC_INT_PRI_S;
 336:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 337:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 338:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CORTEX_M4__ */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 9


 339:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 340:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CORTEX_M4__ */
 341:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 342:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 343:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_set_int_prio(
 344:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   EE_TYPEISR2PRIO prio
 345:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** )
 346:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 347:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 348:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 349:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	/* NVIC_INT_PRI_S = 5 */
 350:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    LSL    R0, #5\n"
 351:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    MSR    BASEPRI, R0\n");
 352:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 353:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 354:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG BASEPRI __ASM("basepri");
 355:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	BASEPRI = (prio << NVIC_INT_PRI_S);
 356:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 357:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 358:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MSR BASEPRI, %0" :: "r" (prio << NVIC_INT_PRI_S) : );
 359:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 360:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("MSR BASEPRI, %0" :: "r" (prio << NVIC_INT_PRI_S));
 361:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__GNU__ */
 362:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 363:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 364:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* __CORTEX_M4__ */
 365:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 366:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 367:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_TYPEISR2PRIO  EE_cortex_mx_get_isr_prio(
 368:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   void
 369:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** )
 370:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 371:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_M4__
 372:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   register EE_UREG vectact = NVIC_INT_CTRL_R & NVIC_INT_CTRL_VEC_ACT_M;
  94              		.loc 2 372 0
  95 0010 1E4B     		ldr	r3, .L9
  96 0012 1B68     		ldr	r3, [r3]
  97 0014 DBB2     		uxtb	r3, r3
  98              	.LVL3:
 373:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   register EE_TYPEISR2PRIO prio = 0;
 374:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 375:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   if (vectact > EE_CORTEX_MX_SYSTICK_EXC_NUM) {
  99              		.loc 2 375 0
 100 0016 0F2B     		cmp	r3, #15
 101 0018 10D9     		bls	.L4
 376:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     vectact -= EE_CORTEX_MX_SYSTICK_EXC_NUM + 1;
 102              		.loc 2 376 0
 103 001a 103B     		subs	r3, r3, #16
 104              	.LVL4:
 377:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     prio = NVIC_GET_PRI(vectact);
 105              		.loc 2 377 0
 106 001c 23F00302 		bic	r2, r3, #3
 107 0020 02F16042 		add	r2, r2, #-536870912
 108 0024 02F56442 		add	r2, r2, #58368
 109 0028 1168     		ldr	r1, [r2]
 110 002a DB00     		lsls	r3, r3, #3
 111              	.LVL5:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 10


 112 002c 03F01803 		and	r3, r3, #24
 113 0030 E022     		movs	r2, #224
 114 0032 9A40     		lsls	r2, r2, r3
 115 0034 0A40     		ands	r2, r2, r1
 116 0036 22FA03F3 		lsr	r3, r2, r3
 117              	.LVL6:
 118 003a 06E0     		b	.L5
 119              	.LVL7:
 120              	.L4:
 378:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   }
 379:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__USE_SYSTICK__
 380:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****   else if (vectact == EE_CORTEX_MX_SYSTICK_EXC_NUM) {
 121              		.loc 2 380 0
 122 003c 0F2B     		cmp	r3, #15
 123 003e 03D1     		bne	.L8
 381:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     prio = NVIC_SYS_PRI3_R >> NVIC_SYS_PRI3_TICK_S;
 124              		.loc 2 381 0
 125 0040 134B     		ldr	r3, .L9+4
 126              	.LVL8:
 127 0042 1B68     		ldr	r3, [r3]
 128 0044 1B0E     		lsrs	r3, r3, #24
 129              	.LVL9:
 130 0046 00E0     		b	.L5
 131              	.LVL10:
 132              	.L8:
 373:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 133              		.loc 2 373 0
 134 0048 0023     		movs	r3, #0
 135              	.LVL11:
 136              	.L5:
 137              	.LBE61:
 138              	.LBE60:
 139              	.LBB62:
 140              	.LBB63:
 358:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 141              		.loc 2 358 0
 142              		.syntax unified
 143              	@ 358 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 144 004a 83F31188 		MSR BASEPRI, r3
 145              	@ 0 "" 2
 146              		.thumb
 147              		.syntax unified
 148              	.LBE63:
 149              	.LBE62:
 150              	.LBB64:
 151              	.LBB65:
 152              		.file 3 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_irqstub.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Copyright (C) 2002-2010  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * version 2 as published by the Free Software Foundation,
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 11


  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Some IRQ-related stuff.
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Author: 2009-2010,  Bernardo  Dal Seno
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*******************************************************************************
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *                        !!!WARNING!!!
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * This header depends on "cpu/common/inc/ee_context.inc" or your own
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * implementation of the same. You should include it file before including this
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * file
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  ******************************************************************************/
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #ifndef PKG_CPU_COMMON_INC_EE_IRQSTUB_H
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #define PKG_CPU_COMMON_INC_EE_IRQSTUB_H
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* this bring EE_IRQ_nesting_level definition */
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #include "ErikaOS_1_common_ee_primitives.inc"
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* True if we are inside an interrupt-serving routine */
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ EE_TYPEBOOL  EE_is_inside_ISR_call( void )
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** {
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 12


  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****   return (EE_IRQ_nesting_level > 0U);
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** }
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* EE_decrement_IRQ_nesting_level() and EE_increment_IRQ_nesting_level() are
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * used to keep track of the current IRQ nesting level.
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * EE_std_enableIRQ_nested() and EE_std_disableIRQ_nested() are used to control
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  * when IRQ nesting is enabled.
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #if defined(__AS_SC4__)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* For SC4 the nesting level is updated inside the prestub and postub */
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) {}
  80:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) {}
  81:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_enableIRQ_nested(void) {}
  82:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_disableIRQ_nested(void) {}
  83:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #elif defined(__ALLOW_NESTED_IRQ__)
  84:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) { --EE_IRQ_nesting_level; }
  85:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { ++EE_IRQ_nesting_level; }
 153              		.loc 3 85 0
 154 004e 114A     		ldr	r2, .L9+8
 155 0050 1368     		ldr	r3, [r2]
 156 0052 0133     		adds	r3, r3, #1
 157 0054 1360     		str	r3, [r2]
 158              	.LBE65:
 159              	.LBE64:
  22:asw/main.c    **** {
 160              		.loc 1 22 0
 161 0056 012B     		cmp	r3, #1
 162 0058 01D1     		bne	.L6
  22:asw/main.c    **** {
 163              		.loc 1 22 0 is_stmt 0 discriminator 1
 164 005a FFF7FEFF 		bl	EE_cortex_mx_change_IRQ_stack
 165              	.LVL12:
 166              	.L6:
 167              	.LBB66:
 168              	.LBB67:
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 169              		.loc 2 191 0 is_stmt 1 discriminator 3
 170              		.syntax unified
 171              	@ 191 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 172 005e 62B6     		cpsie i
 173              	@ 0 "" 2
 174              		.thumb
 175              		.syntax unified
 176              	.LBE67:
 177              	.LBE66:
  22:asw/main.c    **** {
 178              		.loc 1 22 0 discriminator 3
 179 0060 FFF7FEFF 		bl	ISR2_systick_handler
 180              	.LVL13:
 181              	.LBB68:
 182              	.LBB69:
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 183              		.loc 2 211 0 discriminator 3
 184              		.syntax unified
 185              	@ 211 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 186 0064 72B6     		cpsid i
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 13


 187              	@ 0 "" 2
 188              	.LVL14:
 189              		.thumb
 190              		.syntax unified
 191              	.LBE69:
 192              	.LBE68:
 193              	.LBB70:
 194              	.LBB71:
 358:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 195              		.loc 2 358 0 discriminator 3
 196              		.syntax unified
 197              	@ 358 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 198 0066 84F31188 		MSR BASEPRI, r4
 199              	@ 0 "" 2
 200              	.LVL15:
 201              		.thumb
 202              		.syntax unified
 203              	.LBE71:
 204              	.LBE70:
 205              	.LBB72:
 206              	.LBB73:
  86:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /*  EE_std_enableIRQ_nested() and EE_std_disableIRQ_nested() must be defined in
  87:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *  the platform-dependent part, as they dependend on the particular way
  88:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****  *  interrupts are handled by the CPU. */
  89:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #else
  90:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_decrement_IRQ_nesting_level(void) { EE_IRQ_nesting_level = 0U; }
  91:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { EE_IRQ_nesting_level = 1U; }
  92:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_enableIRQ_nested(void) {}
  93:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_disableIRQ_nested(void) {}
  94:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #endif
  95:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** 
  96:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_BCC2__)) || (defined(__OO_ECC1__)) \
  97:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****   || (defined(__OO_ECC2__)) || (defined(__AS_SC4__))
  98:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** /* Function to be called at the end of a function service interrupt, to execute
  99:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****    clean-up specifiend in Autosar standard */
 100:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_std_end_IRQ_post_stub(void)
 101:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** {
 102:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc ****   EE_IRQ_end_post_stub();
 207              		.loc 3 102 0 discriminator 3
 208 006a FFF7FEFF 		bl	EE_IRQ_end_post_stub
 209              	.LVL16:
 210              	.LBE73:
 211              	.LBE72:
 212              	.LBB74:
 213              	.LBB75:
  84:Generated_Source\PSoC5/ErikaOS_1_common_ee_irqstub.inc **** __INLINE__ void  EE_increment_IRQ_nesting_level(void) { ++EE_IRQ_nesting_level; }
 214              		.loc 3 84 0 discriminator 3
 215 006e 094A     		ldr	r2, .L9+8
 216 0070 1368     		ldr	r3, [r2]
 217 0072 013B     		subs	r3, r3, #1
 218 0074 1360     		str	r3, [r2]
 219              	.LBE75:
 220              	.LBE74:
  22:asw/main.c    **** {
 221              		.loc 1 22 0 discriminator 3
 222 0076 1BB9     		cbnz	r3, .L7
  22:asw/main.c    **** {
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 14


 223              		.loc 1 22 0 is_stmt 0 discriminator 4
 224 0078 FFF7FEFF 		bl	EE_cortex_mx_change_IRQ_stack_back
 225              	.LVL17:
 226              	.LBB76:
 227              	.LBB77:
 228              		.file 4 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@file	ee_irq_cng_cont.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@brief	Function active the context change interrupt
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@author	Gianluca Franchino
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@author	Giuseppe Serano
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	@date	2012
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** */ 
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****     
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** /*
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * PSoC Port and API Generation
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 15


  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Carlos Fernando Meier Martinez
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  * Hochschule Darmstadt, Germany. 2017.
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc ****  */
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #ifndef __INCLUDE_CORTEX_MX_IRQ_CNG_CONTEXT_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #define __INCLUDE_CORTEX_MX_IRQ_CNG_CONTEXT_H__
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #ifdef __GNU__
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** #endif
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** /* Implemented in ee_<compiler>_change_context_isr.s */
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** extern void EE_switch_context(void);
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** __INLINE__ void  EE_cortex_mx_IRQ_active_change_context(void)
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** {
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_irq_cng_cont.inc **** 	EE_switch_context();
 229              		.loc 4 68 0 is_stmt 1 discriminator 4
 230 007c FFF7FEFF 		bl	EE_switch_context
 231              	.LVL18:
 232              	.L7:
 233              	.LBE77:
 234              	.LBE76:
 235              	.LBB78:
 236              	.LBB79:
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 237              		.loc 2 191 0 discriminator 6
 238              		.syntax unified
 239              	@ 191 "Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 240 0080 62B6     		cpsie i
 241              	@ 0 "" 2
 242              		.thumb
 243              		.syntax unified
 244              	.LBE79:
 245              	.LBE78:
  22:asw/main.c    **** {
 246              		.loc 1 22 0 discriminator 6
 247 0082 BDE81940 		pop	{r0, r3, r4, lr}
 248              		.cfi_restore 14
 249              		.cfi_restore 4
 250              		.cfi_restore 3
 251              		.cfi_restore 0
 252              		.cfi_def_cfa_offset 0
 253 0086 8546     		mov	sp, r0
 254 0088 7047     		bx	lr
 255              	.L10:
 256 008a 00BF     		.align	2
 257              	.L9:
 258 008c 04ED00E0 		.word	-536810236
 259 0090 20ED00E0 		.word	-536810208
 260 0094 00000000 		.word	EE_IRQ_nesting_level
 261              		.cfi_endproc
 262              	.LFE111:
 263              		.size	systick_handler, .-systick_handler
 264              		.section	.text.main,"ax",%progbits
 265              		.align	2
 266              		.global	main
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 16


 267              		.thumb
 268              		.thumb_func
 269              		.type	main, %function
 270              	main:
 271              	.LFB113:
  25:asw/main.c    **** }
  26:asw/main.c    **** 
  27:asw/main.c    **** int main()
  28:asw/main.c    **** {
 272              		.loc 1 28 0
 273              		.cfi_startproc
 274              		@ Volatile: function does not return.
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 08B5     		push	{r3, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
  29:asw/main.c    ****     CyGlobalIntEnable; /* Enable global interrupts. */
 281              		.loc 1 29 0
 282              		.syntax unified
 283              	@ 29 "asw\main.c" 1
 284 0002 62B6     		CPSIE   i
 285              	@ 0 "" 2
 286              	.LVL19:
 287              		.thumb
 288              		.syntax unified
 289              	.LBB80:
 290              	.LBB81:
 291              		.file 5 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * Copyright (C) 2002-2012  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * obligated to do so.  If you do not wish to do so, delete this
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 17


  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /**
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @file	ee_systick.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @brief	SysTick system timer driver header file.
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @author	Giuseppe Serano
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @date	2012
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** **/
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** #ifndef	__INCLUDE_CORTEX_MX_SYSTICK_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** #define	__INCLUDE_CORTEX_MX_SYSTICK_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** #ifdef	__USE_SYSTICK__
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /** error value. No errors happened **/
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** #define	EE_SYSTICK_NO_ERRORS	0
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /** error value. Wrong funtion arguments values **/
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** #define	EE_SYSTICK_ERR_BAD_ARGS	1
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /**
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @brief Start SysTick.
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     This will start the SysTick counter.  If an ISR has been defined, it is
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     called when the SysTick counter rolls over.
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @note Calling this function will cause the SysTick counter to (re)commence
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     counting from its current value.  The counter is not automatically reloaded
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     with the period as specified in a previous call to EE_systick_set_period().
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     If an immediate reload is required, the \b NVIC_ST_CURRENT register must be
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     written to force this.  Any write to this register clears the SysTick
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     counter to 0 and will cause a reload with the supplied period on the next
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     clock.
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_start(void)
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** {
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R |= NVIC_ST_CTRL_CLK_SRC | NVIC_ST_CTRL_ENABLE;
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** }
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /**
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 18


  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @brief Stop SysTick.
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     This will stop the SysTick counter.  If an ISR has been defined, it will
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     no longer be called until SysTick is restarted.
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** */
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_stop(void)
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** {
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R &= ~(NVIC_ST_CTRL_ENABLE);
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** }
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /**
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @brief Enables the SysTick interrupt.
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     This function will enable the SysTick interrupt, allowing it to be
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     reflected to the processor.
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @note The SysTick ISR does not need to clear the SysTick interrupt source as
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     this is done automatically by NVIC when the interrupt ISR is called.
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_enable_int()
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R |= NVIC_ST_CTRL_INTEN;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** }
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /**
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @brief Disables the SysTick interrupt.
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     This function will disable the SysTick interrupt, preventing it from being
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     reflected to the processor.
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  */
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** __INLINE__ void  EE_systick_disable_int()
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** {
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****   NVIC_ST_CTRL_R &= ~(NVIC_ST_CTRL_INTEN);
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** }
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** /**
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @brief Sets the period of the SysTick counter.
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @param period is the number of clock ticks in each period of the SysTick
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     counter; must be between 1 and 16,777,216, inclusive. If the \e period is
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     out of range the function returns \b EE_SYSTICK_ERR_BAD_ARGS, else it will
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     returns \b EE_SYSTICK_NO_ERRORS.
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     This function sets the rate at which the SysTick counter wraps; this
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     equates to the number of processor clocks between interrupts.
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     @note Calling this function does not cause the SysTick counter to reload
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     immediately.  If an immediate reload is required, the \b NVIC_ST_CURRENT
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     register must be written.  Any write to this register clears the SysTick
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     counter to 0 and will cause a reload with the \e period supplied here on
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     the next clock after the SysTick is enabled.
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****  */
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** __INLINE__ EE_UREG  EE_systick_set_period(EE_UREG period)
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** {
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****   if ((period == NVIC_ST_RELOAD_S) || (period > NVIC_ST_RELOAD_M))
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****     return EE_SYSTICK_ERR_BAD_ARGS;
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 19


 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc ****   NVIC_ST_RELOAD_R = period - 1;
 292              		.loc 5 142 0
 293 0004 45F6BF52 		movw	r2, #23999
 294 0008 054B     		ldr	r3, .L14
 295 000a 1A60     		str	r2, [r3]
 296              	.LVL20:
 297              	.LBE81:
 298              	.LBE80:
 299              	.LBB82:
 300              	.LBB83:
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** }
 301              		.loc 5 106 0
 302 000c 054A     		ldr	r2, .L14+4
 303 000e 1368     		ldr	r3, [r2]
 304 0010 43F00203 		orr	r3, r3, #2
 305 0014 1360     		str	r3, [r2]
 306              	.L12:
 307              	.LBE83:
 308              	.LBE82:
  30:asw/main.c    ****    
  31:asw/main.c    ****     //Set systick period to 1 ms. Enable the INT and start it.
  32:asw/main.c    **** 	EE_systick_set_period(MILLISECONDS_TO_TICKS(1, BCLK__BUS_CLK__HZ));
  33:asw/main.c    **** 	EE_systick_enable_int();
  34:asw/main.c    ****    
  35:asw/main.c    ****     // Start Operating System
  36:asw/main.c    ****     for(;;)	    
  37:asw/main.c    ****     	StartOS(OSDEFAULTAPPMODE);
 309              		.loc 1 37 0 discriminator 1
 310 0016 0020     		movs	r0, #0
 311 0018 FFF7FEFF 		bl	EE_oo_StartOS
 312              	.LVL21:
 313 001c FBE7     		b	.L12
 314              	.L15:
 315 001e 00BF     		.align	2
 316              	.L14:
 317 0020 14E000E0 		.word	-536813548
 318 0024 10E000E0 		.word	-536813552
 319              		.cfi_endproc
 320              	.LFE113:
 321              		.size	main, .-main
 322              		.section	.text.unhandledException,"ax",%progbits
 323              		.align	2
 324              		.global	unhandledException
 325              		.thumb
 326              		.thumb_func
 327              		.type	unhandledException, %function
 328              	unhandledException:
 329              	.LFB114:
  38:asw/main.c    **** }
  39:asw/main.c    **** 
  40:asw/main.c    **** void unhandledException()
  41:asw/main.c    **** {
 330              		.loc 1 41 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 20


  42:asw/main.c    ****     //Ooops, something terrible happened....check the call stack to see how we got here...
  43:asw/main.c    ****     __asm("bkpt");
 335              		.loc 1 43 0
 336              		.syntax unified
 337              	@ 43 "asw\main.c" 1
 338 0000 00BE     		bkpt
 339              	@ 0 "" 2
 340              		.thumb
 341              		.syntax unified
 342 0002 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE114:
 345              		.size	unhandledException, .-unhandledException
 346              		.section	.text.hardware_init,"ax",%progbits
 347              		.align	2
 348              		.global	hardware_init
 349              		.thumb
 350              		.thumb_func
 351              		.type	hardware_init, %function
 352              	hardware_init:
 353              	.LFB115:
  44:asw/main.c    **** }
  45:asw/main.c    **** void hardware_init()
  46:asw/main.c    **** {
 354              		.loc 1 46 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 08B5     		push	{r3, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
  47:asw/main.c    ****     
  48:asw/main.c    ****     CyGlobalIntDisable;
 362              		.loc 1 48 0
 363              		.syntax unified
 364              	@ 48 "asw\main.c" 1
 365 0002 72B6     		CPSID   i
 366              	@ 0 "" 2
  49:asw/main.c    ****     
  50:asw/main.c    ****     JOYSTICK_Init();
 367              		.loc 1 50 0
 368              		.thumb
 369              		.syntax unified
 370 0004 FFF7FEFF 		bl	JOYSTICK_Init
 371              	.LVL22:
  51:asw/main.c    ****     UART_LOG_Start();
 372              		.loc 1 51 0
 373 0008 FFF7FEFF 		bl	UART_LOG_Start
 374              	.LVL23:
  52:asw/main.c    ****     LED_Init();
 375              		.loc 1 52 0
 376 000c FFF7FEFF 		bl	LED_Init
 377              	.LVL24:
  53:asw/main.c    ****     CyGlobalIntEnable;
 378              		.loc 1 53 0
 379              		.syntax unified
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 21


 380              	@ 53 "asw\main.c" 1
 381 0010 62B6     		CPSIE   i
 382              	@ 0 "" 2
 383              		.thumb
 384              		.syntax unified
 385 0012 08BD     		pop	{r3, pc}
 386              		.cfi_endproc
 387              	.LFE115:
 388              		.size	hardware_init, .-hardware_init
 389              		.section	.text.Functsk_init,"ax",%progbits
 390              		.align	2
 391              		.global	Functsk_init
 392              		.thumb
 393              		.thumb_func
 394              		.type	Functsk_init, %function
 395              	Functsk_init:
 396              	.LFB116:
  54:asw/main.c    **** }
  55:asw/main.c    **** /********************************************************************************
  56:asw/main.c    ****  * Task Definitions
  57:asw/main.c    ****  ********************************************************************************/
  58:asw/main.c    **** 
  59:asw/main.c    **** TASK(tsk_init)
  60:asw/main.c    **** {
 397              		.loc 1 60 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401 0000 08B5     		push	{r3, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
  61:asw/main.c    ****     
  62:asw/main.c    ****     //Init MCAL Drivers
  63:asw/main.c    **** 
  64:asw/main.c    ****     
  65:asw/main.c    ****     hardware_init();
 405              		.loc 1 65 0
 406 0002 FFF7FEFF 		bl	hardware_init
 407              	.LVL25:
  66:asw/main.c    ****     WD_Start(TIMEOUT_2s);
 408              		.loc 1 66 0
 409 0006 0320     		movs	r0, #3
 410 0008 FFF7FEFF 		bl	WD_Start
 411              	.LVL26:
  67:asw/main.c    ****     //Reconfigure ISRs with OS parameters.
  68:asw/main.c    ****     //This line MUST be called after the hardware driver initialisation!
  69:asw/main.c    ****     EE_system_init();
 412              		.loc 1 69 0
 413 000c FFF7FEFF 		bl	EE_system_init
 414              	.LVL27:
  70:asw/main.c    **** 	UART_LOG_PutString("EAA Lab1 - Nguyen Tien Anh Ha\n");
 415              		.loc 1 70 0
 416 0010 1448     		ldr	r0, .L23
 417 0012 FFF7FEFF 		bl	UART_LOG_PutString
 418              	.LVL28:
 419              	.LBB84:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 22


 420              	.LBB85:
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_systick.inc **** }
 421              		.loc 5 81 0
 422 0016 144A     		ldr	r2, .L23+4
 423 0018 1368     		ldr	r3, [r2]
 424 001a 43F00503 		orr	r3, r3, #5
 425 001e 1360     		str	r3, [r2]
 426              	.LBE85:
 427              	.LBE84:
  71:asw/main.c    ****     //Start SysTick
  72:asw/main.c    **** 	//Must be done here, because otherwise the isr vector is not overwritten yet
  73:asw/main.c    ****     EE_systick_start();  
  74:asw/main.c    ****     
  75:asw/main.c    **** 	if(WD_CheckResetBit())
 428              		.loc 1 75 0
 429 0020 FFF7FEFF 		bl	WD_CheckResetBit
 430              	.LVL29:
 431 0024 18B1     		cbz	r0, .L20
  76:asw/main.c    ****     {
  77:asw/main.c    ****         UART_LOG_PutString("The system has been reset due to WatchDog Timer!!!\n");
 432              		.loc 1 77 0
 433 0026 1148     		ldr	r0, .L23+8
 434 0028 FFF7FEFF 		bl	UART_LOG_PutString
 435              	.LVL30:
 436 002c 02E0     		b	.L21
 437              	.L20:
  78:asw/main.c    ****     }
  79:asw/main.c    ****     else
  80:asw/main.c    ****     {
  81:asw/main.c    ****         UART_LOG_PutString("The system has been reset through Power on button!!!\n");
 438              		.loc 1 81 0
 439 002e 1048     		ldr	r0, .L23+12
 440 0030 FFF7FEFF 		bl	UART_LOG_PutString
 441              	.LVL31:
 442              	.L21:
  82:asw/main.c    ****     }
  83:asw/main.c    ****     
  84:asw/main.c    ****     //Start the alarm with 5ms cycle time
  85:asw/main.c    ****     SetRelAlarm(alrm_Tick5ms,5,5);
 443              		.loc 1 85 0
 444 0034 0522     		movs	r2, #5
 445 0036 1146     		mov	r1, r2
 446 0038 0020     		movs	r0, #0
 447 003a FFF7FEFF 		bl	EE_oo_SetRelAlarm
 448              	.LVL32:
  86:asw/main.c    ****     
  87:asw/main.c    ****     ActivateTask(tsk_io);
 449              		.loc 1 87 0
 450 003e 0220     		movs	r0, #2
 451 0040 FFF7FEFF 		bl	EE_oo_ActivateTask
 452              	.LVL33:
  88:asw/main.c    ****     ActivateTask(tsk_control);
 453              		.loc 1 88 0
 454 0044 0320     		movs	r0, #3
 455 0046 FFF7FEFF 		bl	EE_oo_ActivateTask
 456              	.LVL34:
  89:asw/main.c    ****     ActivateTask(tsk_tft);
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 23


 457              		.loc 1 89 0
 458 004a 0520     		movs	r0, #5
 459 004c FFF7FEFF 		bl	EE_oo_ActivateTask
 460              	.LVL35:
  90:asw/main.c    ****     ActivateTask(tsk_system);
 461              		.loc 1 90 0
 462 0050 0420     		movs	r0, #4
 463 0052 FFF7FEFF 		bl	EE_oo_ActivateTask
 464              	.LVL36:
  91:asw/main.c    ****     ActivateTask(tsk_background);
 465              		.loc 1 91 0
 466 0056 0020     		movs	r0, #0
 467 0058 FFF7FEFF 		bl	EE_oo_ActivateTask
 468              	.LVL37:
  92:asw/main.c    ****     
  93:asw/main.c    ****     TerminateTask();
 469              		.loc 1 93 0
 470 005c FFF7FEFF 		bl	EE_oo_TerminateTask
 471              	.LVL38:
 472 0060 08BD     		pop	{r3, pc}
 473              	.L24:
 474 0062 00BF     		.align	2
 475              	.L23:
 476 0064 00000000 		.word	.LC0
 477 0068 10E000E0 		.word	-536813552
 478 006c 20000000 		.word	.LC1
 479 0070 54000000 		.word	.LC2
 480              		.cfi_endproc
 481              	.LFE116:
 482              		.size	Functsk_init, .-Functsk_init
 483              		.section	.text.Functsk_background,"ax",%progbits
 484              		.align	2
 485              		.global	Functsk_background
 486              		.thumb
 487              		.thumb_func
 488              		.type	Functsk_background, %function
 489              	Functsk_background:
 490              	.LFB117:
  94:asw/main.c    ****     
  95:asw/main.c    **** }
  96:asw/main.c    **** 
  97:asw/main.c    **** 
  98:asw/main.c    **** 
  99:asw/main.c    **** 
 100:asw/main.c    **** 
 101:asw/main.c    **** TASK(tsk_background)
 102:asw/main.c    **** {
 491              		.loc 1 102 0
 492              		.cfi_startproc
 493              		@ Volatile: function does not return.
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496 0000 08B5     		push	{r3, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 3, -8
 499              		.cfi_offset 14, -4
 500              	.L26:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 24


 103:asw/main.c    ****     while(1)
 104:asw/main.c    ****     {
 105:asw/main.c    ****         //do something with low prioroty
 106:asw/main.c    ****         // feed our lovely watchdog if runnables are running
 107:asw/main.c    ****         WD_Trigger();
 501              		.loc 1 107 0 discriminator 1
 502 0002 FFF7FEFF 		bl	WD_Trigger
 503              	.LVL39:
 504 0006 FCE7     		b	.L26
 505              		.cfi_endproc
 506              	.LFE117:
 507              		.size	Functsk_background, .-Functsk_background
 508              		.section	.rodata.str1.4,"aMS",%progbits,1
 509              		.align	2
 510              	.LC0:
 511 0000 45414120 		.ascii	"EAA Lab1 - Nguyen Tien Anh Ha\012\000"
 511      4C616231 
 511      202D204E 
 511      67757965 
 511      6E205469 
 512 001f 00       		.space	1
 513              	.LC1:
 514 0020 54686520 		.ascii	"The system has been reset due to WatchDog Timer!!!\012"
 514      73797374 
 514      656D2068 
 514      61732062 
 514      65656E20 
 515 0053 00       		.ascii	"\000"
 516              	.LC2:
 517 0054 54686520 		.ascii	"The system has been reset through Power on button!!"
 517      73797374 
 517      656D2068 
 517      61732062 
 517      65656E20 
 518 0087 210A00   		.ascii	"!\012\000"
 519              		.text
 520              	.Letext0:
 521              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 522              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 523              		.file 8 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_types.inc"
 524              		.file 9 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_intfunc.inc"
 525              		.file 10 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc"
 526              		.file 11 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_primitives.inc"
 527              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 528              		.file 13 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_kernel.inc"
 529              		.file 14 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_irq.inc"
 530              		.file 15 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_irq.inc"
 531              		.file 16 ".\\bsw\\LabBoard/joystick.h"
 532              		.file 17 "Generated_Source\\PSoC5/UART_LOG.h"
 533              		.file 18 ".\\bsw\\LabBoard/led.h"
 534              		.file 19 ".\\bsw\\LabBoard/watchdog.h"
 535              		.section	.debug_info,"",%progbits
 536              	.Ldebug_info0:
 537 0000 39060000 		.4byte	0x639
 538 0004 0400     		.2byte	0x4
 539 0006 00000000 		.4byte	.Ldebug_abbrev0
 540 000a 04       		.byte	0x4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 25


 541 000b 01       		.uleb128 0x1
 542 000c C8040000 		.4byte	.LASF68
 543 0010 0C       		.byte	0xc
 544 0011 F4020000 		.4byte	.LASF69
 545 0015 6F000000 		.4byte	.LASF70
 546 0019 00000000 		.4byte	.Ldebug_ranges0+0
 547 001d 00000000 		.4byte	0
 548 0021 00000000 		.4byte	.Ldebug_line0
 549 0025 02       		.uleb128 0x2
 550 0026 01       		.byte	0x1
 551 0027 06       		.byte	0x6
 552 0028 AA020000 		.4byte	.LASF0
 553 002c 02       		.uleb128 0x2
 554 002d 01       		.byte	0x1
 555 002e 08       		.byte	0x8
 556 002f 5C020000 		.4byte	.LASF1
 557 0033 02       		.uleb128 0x2
 558 0034 02       		.byte	0x2
 559 0035 05       		.byte	0x5
 560 0036 B4000000 		.4byte	.LASF2
 561 003a 02       		.uleb128 0x2
 562 003b 02       		.byte	0x2
 563 003c 07       		.byte	0x7
 564 003d 48030000 		.4byte	.LASF3
 565 0041 03       		.uleb128 0x3
 566 0042 C5030000 		.4byte	.LASF9
 567 0046 06       		.byte	0x6
 568 0047 3F       		.byte	0x3f
 569 0048 4C000000 		.4byte	0x4c
 570 004c 02       		.uleb128 0x2
 571 004d 04       		.byte	0x4
 572 004e 05       		.byte	0x5
 573 004f 9A010000 		.4byte	.LASF4
 574 0053 02       		.uleb128 0x2
 575 0054 04       		.byte	0x4
 576 0055 07       		.byte	0x7
 577 0056 E2030000 		.4byte	.LASF5
 578 005a 02       		.uleb128 0x2
 579 005b 08       		.byte	0x8
 580 005c 05       		.byte	0x5
 581 005d 87010000 		.4byte	.LASF6
 582 0061 02       		.uleb128 0x2
 583 0062 08       		.byte	0x8
 584 0063 07       		.byte	0x7
 585 0064 B6020000 		.4byte	.LASF7
 586 0068 04       		.uleb128 0x4
 587 0069 04       		.byte	0x4
 588 006a 05       		.byte	0x5
 589 006b 696E7400 		.ascii	"int\000"
 590 006f 02       		.uleb128 0x2
 591 0070 04       		.byte	0x4
 592 0071 07       		.byte	0x7
 593 0072 CD020000 		.4byte	.LASF8
 594 0076 03       		.uleb128 0x3
 595 0077 BD030000 		.4byte	.LASF10
 596 007b 07       		.byte	0x7
 597 007c 2C       		.byte	0x2c
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 26


 598 007d 41000000 		.4byte	0x41
 599 0081 02       		.uleb128 0x2
 600 0082 04       		.byte	0x4
 601 0083 04       		.byte	0x4
 602 0084 81010000 		.4byte	.LASF11
 603 0088 02       		.uleb128 0x2
 604 0089 08       		.byte	0x8
 605 008a 04       		.byte	0x4
 606 008b A4040000 		.4byte	.LASF12
 607 008f 02       		.uleb128 0x2
 608 0090 01       		.byte	0x1
 609 0091 08       		.byte	0x8
 610 0092 95010000 		.4byte	.LASF13
 611 0096 02       		.uleb128 0x2
 612 0097 08       		.byte	0x8
 613 0098 04       		.byte	0x4
 614 0099 31020000 		.4byte	.LASF14
 615 009d 03       		.uleb128 0x3
 616 009e 18030000 		.4byte	.LASF15
 617 00a2 08       		.byte	0x8
 618 00a3 53       		.byte	0x53
 619 00a4 68000000 		.4byte	0x68
 620 00a8 03       		.uleb128 0x3
 621 00a9 82020000 		.4byte	.LASF16
 622 00ad 08       		.byte	0x8
 623 00ae 54       		.byte	0x54
 624 00af 6F000000 		.4byte	0x6f
 625 00b3 03       		.uleb128 0x3
 626 00b4 2B000000 		.4byte	.LASF17
 627 00b8 02       		.byte	0x2
 628 00b9 4D       		.byte	0x4d
 629 00ba A8000000 		.4byte	0xa8
 630 00be 03       		.uleb128 0x3
 631 00bf C7000000 		.4byte	.LASF18
 632 00c3 02       		.byte	0x2
 633 00c4 4F       		.byte	0x4f
 634 00c5 A8000000 		.4byte	0xa8
 635 00c9 03       		.uleb128 0x3
 636 00ca 0D000000 		.4byte	.LASF19
 637 00ce 02       		.byte	0x2
 638 00cf 54       		.byte	0x54
 639 00d0 B3000000 		.4byte	0xb3
 640 00d4 03       		.uleb128 0x3
 641 00d5 1C010000 		.4byte	.LASF20
 642 00d9 02       		.byte	0x2
 643 00da 75       		.byte	0x75
 644 00db B3000000 		.4byte	0xb3
 645 00df 03       		.uleb128 0x3
 646 00e0 15010000 		.4byte	.LASF21
 647 00e4 02       		.byte	0x2
 648 00e5 78       		.byte	0x78
 649 00e6 9D000000 		.4byte	0x9d
 650 00ea 02       		.uleb128 0x2
 651 00eb 04       		.byte	0x4
 652 00ec 07       		.byte	0x7
 653 00ed BE000000 		.4byte	.LASF22
 654 00f1 05       		.uleb128 0x5
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 27


 655 00f2 01       		.byte	0x1
 656 00f3 2C000000 		.4byte	0x2c
 657 00f7 13       		.byte	0x13
 658 00f8 59       		.byte	0x59
 659 00f9 16010000 		.4byte	0x116
 660 00fd 06       		.uleb128 0x6
 661 00fe 5A040000 		.4byte	.LASF23
 662 0102 03       		.byte	0x3
 663 0103 06       		.uleb128 0x6
 664 0104 96040000 		.4byte	.LASF24
 665 0108 02       		.byte	0x2
 666 0109 06       		.uleb128 0x6
 667 010a 00000000 		.4byte	.LASF25
 668 010e 01       		.byte	0x1
 669 010f 06       		.uleb128 0x6
 670 0110 2C010000 		.4byte	.LASF26
 671 0114 00       		.byte	0
 672 0115 00       		.byte	0
 673 0116 07       		.uleb128 0x7
 674 0117 3D020000 		.4byte	.LASF27
 675 011b 03       		.byte	0x3
 676 011c 55       		.byte	0x55
 677 011d 03       		.byte	0x3
 678 011e 08       		.uleb128 0x8
 679 011f 7C040000 		.4byte	.LASF71
 680 0123 02       		.byte	0x2
 681 0124 5701     		.2byte	0x157
 682 0126 03       		.byte	0x3
 683 0127 38010000 		.4byte	0x138
 684 012b 09       		.uleb128 0x9
 685 012c 6E050000 		.4byte	.LASF35
 686 0130 02       		.byte	0x2
 687 0131 5801     		.2byte	0x158
 688 0133 D4000000 		.4byte	0xd4
 689 0137 00       		.byte	0
 690 0138 0A       		.uleb128 0xa
 691 0139 17020000 		.4byte	.LASF33
 692 013d 02       		.byte	0x2
 693 013e 2F01     		.2byte	0x12f
 694 0140 D4000000 		.4byte	0xd4
 695 0144 03       		.byte	0x3
 696 0145 56010000 		.4byte	0x156
 697 0149 0B       		.uleb128 0xb
 698 014a 6E050000 		.4byte	.LASF35
 699 014e 02       		.byte	0x2
 700 014f 3401     		.2byte	0x134
 701 0151 B3000000 		.4byte	0xb3
 702 0155 00       		.byte	0
 703 0156 07       		.uleb128 0x7
 704 0157 6A020000 		.4byte	.LASF28
 705 015b 02       		.byte	0x2
 706 015c C8       		.byte	0xc8
 707 015d 03       		.byte	0x3
 708 015e 0C       		.uleb128 0xc
 709 015f 17040000 		.4byte	.LASF72
 710 0163 03       		.byte	0x3
 711 0164 42       		.byte	0x42
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 28


 712 0165 C9000000 		.4byte	0xc9
 713 0169 03       		.byte	0x3
 714 016a 07       		.uleb128 0x7
 715 016b 73050000 		.4byte	.LASF29
 716 016f 03       		.byte	0x3
 717 0170 54       		.byte	0x54
 718 0171 03       		.byte	0x3
 719 0172 07       		.uleb128 0x7
 720 0173 56000000 		.4byte	.LASF30
 721 0177 03       		.byte	0x3
 722 0178 64       		.byte	0x64
 723 0179 03       		.byte	0x3
 724 017a 07       		.uleb128 0x7
 725 017b 65040000 		.4byte	.LASF31
 726 017f 02       		.byte	0x2
 727 0180 B4       		.byte	0xb4
 728 0181 03       		.byte	0x3
 729 0182 07       		.uleb128 0x7
 730 0183 21030000 		.4byte	.LASF32
 731 0187 04       		.byte	0x4
 732 0188 42       		.byte	0x42
 733 0189 03       		.byte	0x3
 734 018a 0D       		.uleb128 0xd
 735 018b 5B030000 		.4byte	.LASF73
 736 018f 05       		.byte	0x5
 737 0190 68       		.byte	0x68
 738 0191 03       		.byte	0x3
 739 0192 0E       		.uleb128 0xe
 740 0193 71030000 		.4byte	.LASF34
 741 0197 05       		.byte	0x5
 742 0198 89       		.byte	0x89
 743 0199 B3000000 		.4byte	0xb3
 744 019d 03       		.byte	0x3
 745 019e AE010000 		.4byte	0x1ae
 746 01a2 0F       		.uleb128 0xf
 747 01a3 ED020000 		.4byte	.LASF36
 748 01a7 05       		.byte	0x5
 749 01a8 89       		.byte	0x89
 750 01a9 B3000000 		.4byte	0xb3
 751 01ad 00       		.byte	0
 752 01ae 07       		.uleb128 0x7
 753 01af A3010000 		.4byte	.LASF37
 754 01b3 05       		.byte	0x5
 755 01b4 4F       		.byte	0x4f
 756 01b5 03       		.byte	0x3
 757 01b6 10       		.uleb128 0x10
 758 01b7 02040000 		.4byte	.LASF40
 759 01bb 01       		.byte	0x1
 760 01bc 16       		.byte	0x16
 761 01bd 00000000 		.4byte	.LFB112
 762 01c1 0A000000 		.4byte	.LFE112-.LFB112
 763 01c5 01       		.uleb128 0x1
 764 01c6 9C       		.byte	0x9c
 765 01c7 DB010000 		.4byte	0x1db
 766 01cb 11       		.uleb128 0x11
 767 01cc 08000000 		.4byte	.LVL0
 768 01d0 7D050000 		.4byte	0x57d
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 29


 769 01d4 12       		.uleb128 0x12
 770 01d5 01       		.uleb128 0x1
 771 01d6 50       		.byte	0x50
 772 01d7 01       		.uleb128 0x1
 773 01d8 30       		.byte	0x30
 774 01d9 00       		.byte	0
 775 01da 00       		.byte	0
 776 01db 0A       		.uleb128 0xa
 777 01dc FB000000 		.4byte	.LASF38
 778 01e0 02       		.byte	0x2
 779 01e1 6F01     		.2byte	0x16f
 780 01e3 D4000000 		.4byte	0xd4
 781 01e7 03       		.byte	0x3
 782 01e8 05020000 		.4byte	0x205
 783 01ec 0B       		.uleb128 0xb
 784 01ed 2D040000 		.4byte	.LASF39
 785 01f1 02       		.byte	0x2
 786 01f2 7401     		.2byte	0x174
 787 01f4 B3000000 		.4byte	0xb3
 788 01f8 0B       		.uleb128 0xb
 789 01f9 6E050000 		.4byte	.LASF35
 790 01fd 02       		.byte	0x2
 791 01fe 7501     		.2byte	0x175
 792 0200 D4000000 		.4byte	0xd4
 793 0204 00       		.byte	0
 794 0205 10       		.uleb128 0x10
 795 0206 AB040000 		.4byte	.LASF41
 796 020a 01       		.byte	0x1
 797 020b 16       		.byte	0x16
 798 020c 00000000 		.4byte	.LFB111
 799 0210 98000000 		.4byte	.LFE111-.LFB111
 800 0214 01       		.uleb128 0x1
 801 0215 9C       		.byte	0x9c
 802 0216 62030000 		.4byte	0x362
 803 021a 13       		.uleb128 0x13
 804 021b 69706C00 		.ascii	"ipl\000"
 805 021f 01       		.byte	0x1
 806 0220 16       		.byte	0x16
 807 0221 B3000000 		.4byte	0xb3
 808 0225 00000000 		.4byte	.LLST0
 809 0229 14       		.uleb128 0x14
 810 022a 56010000 		.4byte	0x156
 811 022e 0A000000 		.4byte	.LBB56
 812 0232 02000000 		.4byte	.LBE56-.LBB56
 813 0236 01       		.byte	0x1
 814 0237 16       		.byte	0x16
 815 0238 15       		.uleb128 0x15
 816 0239 38010000 		.4byte	0x138
 817 023d 0C000000 		.4byte	.LBB58
 818 0241 04000000 		.4byte	.LBE58-.LBB58
 819 0245 01       		.byte	0x1
 820 0246 16       		.byte	0x16
 821 0247 5B020000 		.4byte	0x25b
 822 024b 16       		.uleb128 0x16
 823 024c 0C000000 		.4byte	.LBB59
 824 0250 04000000 		.4byte	.LBE59-.LBB59
 825 0254 17       		.uleb128 0x17
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 30


 826 0255 49010000 		.4byte	0x149
 827 0259 00       		.byte	0
 828 025a 00       		.byte	0
 829 025b 15       		.uleb128 0x15
 830 025c DB010000 		.4byte	0x1db
 831 0260 10000000 		.4byte	.LBB60
 832 0264 3A000000 		.4byte	.LBE60-.LBB60
 833 0268 01       		.byte	0x1
 834 0269 16       		.byte	0x16
 835 026a 8B020000 		.4byte	0x28b
 836 026e 16       		.uleb128 0x16
 837 026f 10000000 		.4byte	.LBB61
 838 0273 3A000000 		.4byte	.LBE61-.LBB61
 839 0277 18       		.uleb128 0x18
 840 0278 EC010000 		.4byte	0x1ec
 841 027c 14000000 		.4byte	.LLST1
 842 0280 18       		.uleb128 0x18
 843 0281 F8010000 		.4byte	0x1f8
 844 0285 3D000000 		.4byte	.LLST2
 845 0289 00       		.byte	0
 846 028a 00       		.byte	0
 847 028b 15       		.uleb128 0x15
 848 028c 1E010000 		.4byte	0x11e
 849 0290 4A000000 		.4byte	.LBB62
 850 0294 04000000 		.4byte	.LBE62-.LBB62
 851 0298 01       		.byte	0x1
 852 0299 16       		.byte	0x16
 853 029a A4020000 		.4byte	0x2a4
 854 029e 19       		.uleb128 0x19
 855 029f 2B010000 		.4byte	0x12b
 856 02a3 00       		.byte	0
 857 02a4 14       		.uleb128 0x14
 858 02a5 16010000 		.4byte	0x116
 859 02a9 4E000000 		.4byte	.LBB64
 860 02ad 08000000 		.4byte	.LBE64-.LBB64
 861 02b1 01       		.byte	0x1
 862 02b2 16       		.byte	0x16
 863 02b3 14       		.uleb128 0x14
 864 02b4 7A010000 		.4byte	0x17a
 865 02b8 5E000000 		.4byte	.LBB66
 866 02bc 02000000 		.4byte	.LBE66-.LBB66
 867 02c0 01       		.byte	0x1
 868 02c1 16       		.byte	0x16
 869 02c2 14       		.uleb128 0x14
 870 02c3 56010000 		.4byte	0x156
 871 02c7 64000000 		.4byte	.LBB68
 872 02cb 02000000 		.4byte	.LBE68-.LBB68
 873 02cf 01       		.byte	0x1
 874 02d0 16       		.byte	0x16
 875 02d1 15       		.uleb128 0x15
 876 02d2 1E010000 		.4byte	0x11e
 877 02d6 66000000 		.4byte	.LBB70
 878 02da 04000000 		.4byte	.LBE70-.LBB70
 879 02de 01       		.byte	0x1
 880 02df 16       		.byte	0x16
 881 02e0 EE020000 		.4byte	0x2ee
 882 02e4 1A       		.uleb128 0x1a
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 31


 883 02e5 2B010000 		.4byte	0x12b
 884 02e9 7F000000 		.4byte	.LLST3
 885 02ed 00       		.byte	0
 886 02ee 15       		.uleb128 0x15
 887 02ef 72010000 		.4byte	0x172
 888 02f3 6A000000 		.4byte	.LBB72
 889 02f7 04000000 		.4byte	.LBE72-.LBB72
 890 02fb 01       		.byte	0x1
 891 02fc 16       		.byte	0x16
 892 02fd 0B030000 		.4byte	0x30b
 893 0301 1B       		.uleb128 0x1b
 894 0302 6E000000 		.4byte	.LVL16
 895 0306 89050000 		.4byte	0x589
 896 030a 00       		.byte	0
 897 030b 14       		.uleb128 0x14
 898 030c 6A010000 		.4byte	0x16a
 899 0310 6E000000 		.4byte	.LBB74
 900 0314 08000000 		.4byte	.LBE74-.LBB74
 901 0318 01       		.byte	0x1
 902 0319 16       		.byte	0x16
 903 031a 15       		.uleb128 0x15
 904 031b 82010000 		.4byte	0x182
 905 031f 7C000000 		.4byte	.LBB76
 906 0323 04000000 		.4byte	.LBE76-.LBB76
 907 0327 01       		.byte	0x1
 908 0328 16       		.byte	0x16
 909 0329 37030000 		.4byte	0x337
 910 032d 1B       		.uleb128 0x1b
 911 032e 80000000 		.4byte	.LVL18
 912 0332 94050000 		.4byte	0x594
 913 0336 00       		.byte	0
 914 0337 14       		.uleb128 0x14
 915 0338 7A010000 		.4byte	0x17a
 916 033c 80000000 		.4byte	.LBB78
 917 0340 02000000 		.4byte	.LBE78-.LBB78
 918 0344 01       		.byte	0x1
 919 0345 16       		.byte	0x16
 920 0346 1B       		.uleb128 0x1b
 921 0347 5E000000 		.4byte	.LVL12
 922 034b 9F050000 		.4byte	0x59f
 923 034f 1B       		.uleb128 0x1b
 924 0350 64000000 		.4byte	.LVL13
 925 0354 B6010000 		.4byte	0x1b6
 926 0358 1B       		.uleb128 0x1b
 927 0359 7C000000 		.4byte	.LVL17
 928 035d AA050000 		.4byte	0x5aa
 929 0361 00       		.byte	0
 930 0362 1C       		.uleb128 0x1c
 931 0363 CF000000 		.4byte	.LASF43
 932 0367 01       		.byte	0x1
 933 0368 1B       		.byte	0x1b
 934 0369 68000000 		.4byte	0x68
 935 036d 00000000 		.4byte	.LFB113
 936 0371 28000000 		.4byte	.LFE113-.LFB113
 937 0375 01       		.uleb128 0x1
 938 0376 9C       		.byte	0x9c
 939 0377 B7030000 		.4byte	0x3b7
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 32


 940 037b 15       		.uleb128 0x15
 941 037c 92010000 		.4byte	0x192
 942 0380 04000000 		.4byte	.LBB80
 943 0384 08000000 		.4byte	.LBE80-.LBB80
 944 0388 01       		.byte	0x1
 945 0389 20       		.byte	0x20
 946 038a 98030000 		.4byte	0x398
 947 038e 1A       		.uleb128 0x1a
 948 038f A2010000 		.4byte	0x1a2
 949 0393 92000000 		.4byte	.LLST4
 950 0397 00       		.byte	0
 951 0398 14       		.uleb128 0x14
 952 0399 8A010000 		.4byte	0x18a
 953 039d 0C000000 		.4byte	.LBB82
 954 03a1 0A000000 		.4byte	.LBE82-.LBB82
 955 03a5 01       		.byte	0x1
 956 03a6 21       		.byte	0x21
 957 03a7 11       		.uleb128 0x11
 958 03a8 1C000000 		.4byte	.LVL21
 959 03ac B5050000 		.4byte	0x5b5
 960 03b0 12       		.uleb128 0x12
 961 03b1 01       		.uleb128 0x1
 962 03b2 50       		.byte	0x50
 963 03b3 01       		.uleb128 0x1
 964 03b4 30       		.byte	0x30
 965 03b5 00       		.byte	0
 966 03b6 00       		.byte	0
 967 03b7 1D       		.uleb128 0x1d
 968 03b8 87030000 		.4byte	.LASF74
 969 03bc 01       		.byte	0x1
 970 03bd 28       		.byte	0x28
 971 03be 00000000 		.4byte	.LFB114
 972 03c2 04000000 		.4byte	.LFE114-.LFB114
 973 03c6 01       		.uleb128 0x1
 974 03c7 9C       		.byte	0x9c
 975 03c8 1E       		.uleb128 0x1e
 976 03c9 CD010000 		.4byte	.LASF75
 977 03cd 01       		.byte	0x1
 978 03ce 2D       		.byte	0x2d
 979 03cf 00000000 		.4byte	.LFB115
 980 03d3 14000000 		.4byte	.LFE115-.LFB115
 981 03d7 01       		.uleb128 0x1
 982 03d8 9C       		.byte	0x9c
 983 03d9 F9030000 		.4byte	0x3f9
 984 03dd 1B       		.uleb128 0x1b
 985 03de 08000000 		.4byte	.LVL22
 986 03e2 C1050000 		.4byte	0x5c1
 987 03e6 1B       		.uleb128 0x1b
 988 03e7 0C000000 		.4byte	.LVL23
 989 03eb CC050000 		.4byte	0x5cc
 990 03ef 1B       		.uleb128 0x1b
 991 03f0 10000000 		.4byte	.LVL24
 992 03f4 D7050000 		.4byte	0x5d7
 993 03f8 00       		.byte	0
 994 03f9 10       		.uleb128 0x10
 995 03fa E4010000 		.4byte	.LASF42
 996 03fe 01       		.byte	0x1
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 33


 997 03ff 3B       		.byte	0x3b
 998 0400 00000000 		.4byte	.LFB116
 999 0404 74000000 		.4byte	.LFE116-.LFB116
 1000 0408 01       		.uleb128 0x1
 1001 0409 9C       		.byte	0x9c
 1002 040a 16050000 		.4byte	0x516
 1003 040e 14       		.uleb128 0x14
 1004 040f AE010000 		.4byte	0x1ae
 1005 0413 16000000 		.4byte	.LBB84
 1006 0417 0A000000 		.4byte	.LBE84-.LBB84
 1007 041b 01       		.byte	0x1
 1008 041c 49       		.byte	0x49
 1009 041d 1B       		.uleb128 0x1b
 1010 041e 06000000 		.4byte	.LVL25
 1011 0422 C8030000 		.4byte	0x3c8
 1012 0426 1F       		.uleb128 0x1f
 1013 0427 0C000000 		.4byte	.LVL26
 1014 042b E2050000 		.4byte	0x5e2
 1015 042f 39040000 		.4byte	0x439
 1016 0433 12       		.uleb128 0x12
 1017 0434 01       		.uleb128 0x1
 1018 0435 50       		.byte	0x50
 1019 0436 01       		.uleb128 0x1
 1020 0437 33       		.byte	0x33
 1021 0438 00       		.byte	0
 1022 0439 1B       		.uleb128 0x1b
 1023 043a 10000000 		.4byte	.LVL27
 1024 043e ED050000 		.4byte	0x5ed
 1025 0442 1F       		.uleb128 0x1f
 1026 0443 16000000 		.4byte	.LVL28
 1027 0447 F9050000 		.4byte	0x5f9
 1028 044b 59040000 		.4byte	0x459
 1029 044f 12       		.uleb128 0x12
 1030 0450 01       		.uleb128 0x1
 1031 0451 50       		.byte	0x50
 1032 0452 05       		.uleb128 0x5
 1033 0453 03       		.byte	0x3
 1034 0454 00000000 		.4byte	.LC0
 1035 0458 00       		.byte	0
 1036 0459 1B       		.uleb128 0x1b
 1037 045a 24000000 		.4byte	.LVL29
 1038 045e 04060000 		.4byte	0x604
 1039 0462 1F       		.uleb128 0x1f
 1040 0463 2C000000 		.4byte	.LVL30
 1041 0467 F9050000 		.4byte	0x5f9
 1042 046b 79040000 		.4byte	0x479
 1043 046f 12       		.uleb128 0x12
 1044 0470 01       		.uleb128 0x1
 1045 0471 50       		.byte	0x50
 1046 0472 05       		.uleb128 0x5
 1047 0473 03       		.byte	0x3
 1048 0474 20000000 		.4byte	.LC1
 1049 0478 00       		.byte	0
 1050 0479 1F       		.uleb128 0x1f
 1051 047a 34000000 		.4byte	.LVL31
 1052 047e F9050000 		.4byte	0x5f9
 1053 0482 90040000 		.4byte	0x490
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 34


 1054 0486 12       		.uleb128 0x12
 1055 0487 01       		.uleb128 0x1
 1056 0488 50       		.byte	0x50
 1057 0489 05       		.uleb128 0x5
 1058 048a 03       		.byte	0x3
 1059 048b 54000000 		.4byte	.LC2
 1060 048f 00       		.byte	0
 1061 0490 1F       		.uleb128 0x1f
 1062 0491 3E000000 		.4byte	.LVL32
 1063 0495 0F060000 		.4byte	0x60f
 1064 0499 AD040000 		.4byte	0x4ad
 1065 049d 12       		.uleb128 0x12
 1066 049e 01       		.uleb128 0x1
 1067 049f 50       		.byte	0x50
 1068 04a0 01       		.uleb128 0x1
 1069 04a1 30       		.byte	0x30
 1070 04a2 12       		.uleb128 0x12
 1071 04a3 01       		.uleb128 0x1
 1072 04a4 51       		.byte	0x51
 1073 04a5 01       		.uleb128 0x1
 1074 04a6 35       		.byte	0x35
 1075 04a7 12       		.uleb128 0x12
 1076 04a8 01       		.uleb128 0x1
 1077 04a9 52       		.byte	0x52
 1078 04aa 01       		.uleb128 0x1
 1079 04ab 35       		.byte	0x35
 1080 04ac 00       		.byte	0
 1081 04ad 1F       		.uleb128 0x1f
 1082 04ae 44000000 		.4byte	.LVL33
 1083 04b2 1B060000 		.4byte	0x61b
 1084 04b6 C0040000 		.4byte	0x4c0
 1085 04ba 12       		.uleb128 0x12
 1086 04bb 01       		.uleb128 0x1
 1087 04bc 50       		.byte	0x50
 1088 04bd 01       		.uleb128 0x1
 1089 04be 32       		.byte	0x32
 1090 04bf 00       		.byte	0
 1091 04c0 1F       		.uleb128 0x1f
 1092 04c1 4A000000 		.4byte	.LVL34
 1093 04c5 1B060000 		.4byte	0x61b
 1094 04c9 D3040000 		.4byte	0x4d3
 1095 04cd 12       		.uleb128 0x12
 1096 04ce 01       		.uleb128 0x1
 1097 04cf 50       		.byte	0x50
 1098 04d0 01       		.uleb128 0x1
 1099 04d1 33       		.byte	0x33
 1100 04d2 00       		.byte	0
 1101 04d3 1F       		.uleb128 0x1f
 1102 04d4 50000000 		.4byte	.LVL35
 1103 04d8 1B060000 		.4byte	0x61b
 1104 04dc E6040000 		.4byte	0x4e6
 1105 04e0 12       		.uleb128 0x12
 1106 04e1 01       		.uleb128 0x1
 1107 04e2 50       		.byte	0x50
 1108 04e3 01       		.uleb128 0x1
 1109 04e4 35       		.byte	0x35
 1110 04e5 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 35


 1111 04e6 1F       		.uleb128 0x1f
 1112 04e7 56000000 		.4byte	.LVL36
 1113 04eb 1B060000 		.4byte	0x61b
 1114 04ef F9040000 		.4byte	0x4f9
 1115 04f3 12       		.uleb128 0x12
 1116 04f4 01       		.uleb128 0x1
 1117 04f5 50       		.byte	0x50
 1118 04f6 01       		.uleb128 0x1
 1119 04f7 34       		.byte	0x34
 1120 04f8 00       		.byte	0
 1121 04f9 1F       		.uleb128 0x1f
 1122 04fa 5C000000 		.4byte	.LVL37
 1123 04fe 1B060000 		.4byte	0x61b
 1124 0502 0C050000 		.4byte	0x50c
 1125 0506 12       		.uleb128 0x12
 1126 0507 01       		.uleb128 0x1
 1127 0508 50       		.byte	0x50
 1128 0509 01       		.uleb128 0x1
 1129 050a 30       		.byte	0x30
 1130 050b 00       		.byte	0
 1131 050c 1B       		.uleb128 0x1b
 1132 050d 60000000 		.4byte	.LVL38
 1133 0511 26060000 		.4byte	0x626
 1134 0515 00       		.byte	0
 1135 0516 20       		.uleb128 0x20
 1136 0517 DA020000 		.4byte	.LASF44
 1137 051b 01       		.byte	0x1
 1138 051c 65       		.byte	0x65
 1139 051d 00000000 		.4byte	.LFB117
 1140 0521 08000000 		.4byte	.LFE117-.LFB117
 1141 0525 01       		.uleb128 0x1
 1142 0526 9C       		.byte	0x9c
 1143 0527 35050000 		.4byte	0x535
 1144 052b 1B       		.uleb128 0x1b
 1145 052c 06000000 		.4byte	.LVL39
 1146 0530 31060000 		.4byte	0x631
 1147 0534 00       		.byte	0
 1148 0535 21       		.uleb128 0x21
 1149 0536 56050000 		.4byte	.LASF45
 1150 053a 09       		.byte	0x9
 1151 053b 40       		.byte	0x40
 1152 053c B3000000 		.4byte	0xb3
 1153 0540 21       		.uleb128 0x21
 1154 0541 B4010000 		.4byte	.LASF46
 1155 0545 09       		.byte	0x9
 1156 0546 47       		.byte	0x47
 1157 0547 BE000000 		.4byte	0xbe
 1158 054b 21       		.uleb128 0x21
 1159 054c CF030000 		.4byte	.LASF47
 1160 0550 09       		.byte	0x9
 1161 0551 4A       		.byte	0x4a
 1162 0552 B3000000 		.4byte	0xb3
 1163 0556 21       		.uleb128 0x21
 1164 0557 FF020000 		.4byte	.LASF48
 1165 055b 0A       		.byte	0xa
 1166 055c 48       		.byte	0x48
 1167 055d DF000000 		.4byte	0xdf
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 36


 1168 0561 21       		.uleb128 0x21
 1169 0562 49010000 		.4byte	.LASF49
 1170 0566 0B       		.byte	0xb
 1171 0567 44       		.byte	0x44
 1172 0568 B3000000 		.4byte	0xb3
 1173 056c 22       		.uleb128 0x22
 1174 056d BB040000 		.4byte	.LASF50
 1175 0571 0C       		.byte	0xc
 1176 0572 1207     		.2byte	0x712
 1177 0574 78050000 		.4byte	0x578
 1178 0578 23       		.uleb128 0x23
 1179 0579 76000000 		.4byte	0x76
 1180 057d 24       		.uleb128 0x24
 1181 057e 43040000 		.4byte	.LASF51
 1182 0582 43040000 		.4byte	.LASF51
 1183 0586 0D       		.byte	0xd
 1184 0587 A801     		.2byte	0x1a8
 1185 0589 25       		.uleb128 0x25
 1186 058a E6000000 		.4byte	.LASF52
 1187 058e E6000000 		.4byte	.LASF52
 1188 0592 0E       		.byte	0xe
 1189 0593 4B       		.byte	0x4b
 1190 0594 25       		.uleb128 0x25
 1191 0595 19000000 		.4byte	.LASF53
 1192 0599 19000000 		.4byte	.LASF53
 1193 059d 04       		.byte	0x4
 1194 059e 40       		.byte	0x40
 1195 059f 25       		.uleb128 0x25
 1196 05a0 8C020000 		.4byte	.LASF54
 1197 05a4 8C020000 		.4byte	.LASF54
 1198 05a8 0F       		.byte	0xf
 1199 05a9 68       		.byte	0x68
 1200 05aa 25       		.uleb128 0x25
 1201 05ab 9A030000 		.4byte	.LASF55
 1202 05af 9A030000 		.4byte	.LASF55
 1203 05b3 0F       		.byte	0xf
 1204 05b4 69       		.byte	0x69
 1205 05b5 24       		.uleb128 0x24
 1206 05b6 F4030000 		.4byte	.LASF56
 1207 05ba F4030000 		.4byte	.LASF56
 1208 05be 0D       		.byte	0xd
 1209 05bf 2C02     		.2byte	0x22c
 1210 05c1 25       		.uleb128 0x25
 1211 05c2 35040000 		.4byte	.LASF57
 1212 05c6 35040000 		.4byte	.LASF57
 1213 05ca 10       		.byte	0x10
 1214 05cb 71       		.byte	0x71
 1215 05cc 25       		.uleb128 0x25
 1216 05cd 72010000 		.4byte	.LASF58
 1217 05d1 72010000 		.4byte	.LASF58
 1218 05d5 11       		.byte	0x11
 1219 05d6 54       		.byte	0x54
 1220 05d7 25       		.uleb128 0x25
 1221 05d8 DB010000 		.4byte	.LASF59
 1222 05dc DB010000 		.4byte	.LASF59
 1223 05e0 12       		.byte	0x12
 1224 05e1 8D       		.byte	0x8d
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 37


 1225 05e2 25       		.uleb128 0x25
 1226 05e3 42000000 		.4byte	.LASF60
 1227 05e7 42000000 		.4byte	.LASF60
 1228 05eb 13       		.byte	0x13
 1229 05ec 73       		.byte	0x73
 1230 05ed 24       		.uleb128 0x24
 1231 05ee 33000000 		.4byte	.LASF61
 1232 05f2 33000000 		.4byte	.LASF61
 1233 05f6 02       		.byte	0x2
 1234 05f7 B101     		.2byte	0x1b1
 1235 05f9 25       		.uleb128 0x25
 1236 05fa 04020000 		.4byte	.LASF62
 1237 05fe 04020000 		.4byte	.LASF62
 1238 0602 11       		.byte	0x11
 1239 0603 8B       		.byte	0x8b
 1240 0604 25       		.uleb128 0x25
 1241 0605 38010000 		.4byte	.LASF63
 1242 0609 38010000 		.4byte	.LASF63
 1243 060d 13       		.byte	0x13
 1244 060e 8F       		.byte	0x8f
 1245 060f 24       		.uleb128 0x24
 1246 0610 D4000000 		.4byte	.LASF64
 1247 0614 D4000000 		.4byte	.LASF64
 1248 0618 0D       		.byte	0xd
 1249 0619 EF01     		.2byte	0x1ef
 1250 061b 25       		.uleb128 0x25
 1251 061c F1010000 		.4byte	.LASF65
 1252 0620 F1010000 		.4byte	.LASF65
 1253 0624 0D       		.byte	0xd
 1254 0625 9A       		.byte	0x9a
 1255 0626 25       		.uleb128 0x25
 1256 0627 5E010000 		.4byte	.LASF66
 1257 062b 5E010000 		.4byte	.LASF66
 1258 062f 0D       		.byte	0xd
 1259 0630 9F       		.byte	0x9f
 1260 0631 25       		.uleb128 0x25
 1261 0632 4B000000 		.4byte	.LASF67
 1262 0636 4B000000 		.4byte	.LASF67
 1263 063a 13       		.byte	0x13
 1264 063b 7B       		.byte	0x7b
 1265 063c 00       		.byte	0
 1266              		.section	.debug_abbrev,"",%progbits
 1267              	.Ldebug_abbrev0:
 1268 0000 01       		.uleb128 0x1
 1269 0001 11       		.uleb128 0x11
 1270 0002 01       		.byte	0x1
 1271 0003 25       		.uleb128 0x25
 1272 0004 0E       		.uleb128 0xe
 1273 0005 13       		.uleb128 0x13
 1274 0006 0B       		.uleb128 0xb
 1275 0007 03       		.uleb128 0x3
 1276 0008 0E       		.uleb128 0xe
 1277 0009 1B       		.uleb128 0x1b
 1278 000a 0E       		.uleb128 0xe
 1279 000b 55       		.uleb128 0x55
 1280 000c 17       		.uleb128 0x17
 1281 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 38


 1282 000e 01       		.uleb128 0x1
 1283 000f 10       		.uleb128 0x10
 1284 0010 17       		.uleb128 0x17
 1285 0011 00       		.byte	0
 1286 0012 00       		.byte	0
 1287 0013 02       		.uleb128 0x2
 1288 0014 24       		.uleb128 0x24
 1289 0015 00       		.byte	0
 1290 0016 0B       		.uleb128 0xb
 1291 0017 0B       		.uleb128 0xb
 1292 0018 3E       		.uleb128 0x3e
 1293 0019 0B       		.uleb128 0xb
 1294 001a 03       		.uleb128 0x3
 1295 001b 0E       		.uleb128 0xe
 1296 001c 00       		.byte	0
 1297 001d 00       		.byte	0
 1298 001e 03       		.uleb128 0x3
 1299 001f 16       		.uleb128 0x16
 1300 0020 00       		.byte	0
 1301 0021 03       		.uleb128 0x3
 1302 0022 0E       		.uleb128 0xe
 1303 0023 3A       		.uleb128 0x3a
 1304 0024 0B       		.uleb128 0xb
 1305 0025 3B       		.uleb128 0x3b
 1306 0026 0B       		.uleb128 0xb
 1307 0027 49       		.uleb128 0x49
 1308 0028 13       		.uleb128 0x13
 1309 0029 00       		.byte	0
 1310 002a 00       		.byte	0
 1311 002b 04       		.uleb128 0x4
 1312 002c 24       		.uleb128 0x24
 1313 002d 00       		.byte	0
 1314 002e 0B       		.uleb128 0xb
 1315 002f 0B       		.uleb128 0xb
 1316 0030 3E       		.uleb128 0x3e
 1317 0031 0B       		.uleb128 0xb
 1318 0032 03       		.uleb128 0x3
 1319 0033 08       		.uleb128 0x8
 1320 0034 00       		.byte	0
 1321 0035 00       		.byte	0
 1322 0036 05       		.uleb128 0x5
 1323 0037 04       		.uleb128 0x4
 1324 0038 01       		.byte	0x1
 1325 0039 0B       		.uleb128 0xb
 1326 003a 0B       		.uleb128 0xb
 1327 003b 49       		.uleb128 0x49
 1328 003c 13       		.uleb128 0x13
 1329 003d 3A       		.uleb128 0x3a
 1330 003e 0B       		.uleb128 0xb
 1331 003f 3B       		.uleb128 0x3b
 1332 0040 0B       		.uleb128 0xb
 1333 0041 01       		.uleb128 0x1
 1334 0042 13       		.uleb128 0x13
 1335 0043 00       		.byte	0
 1336 0044 00       		.byte	0
 1337 0045 06       		.uleb128 0x6
 1338 0046 28       		.uleb128 0x28
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 39


 1339 0047 00       		.byte	0
 1340 0048 03       		.uleb128 0x3
 1341 0049 0E       		.uleb128 0xe
 1342 004a 1C       		.uleb128 0x1c
 1343 004b 0B       		.uleb128 0xb
 1344 004c 00       		.byte	0
 1345 004d 00       		.byte	0
 1346 004e 07       		.uleb128 0x7
 1347 004f 2E       		.uleb128 0x2e
 1348 0050 00       		.byte	0
 1349 0051 03       		.uleb128 0x3
 1350 0052 0E       		.uleb128 0xe
 1351 0053 3A       		.uleb128 0x3a
 1352 0054 0B       		.uleb128 0xb
 1353 0055 3B       		.uleb128 0x3b
 1354 0056 0B       		.uleb128 0xb
 1355 0057 27       		.uleb128 0x27
 1356 0058 19       		.uleb128 0x19
 1357 0059 20       		.uleb128 0x20
 1358 005a 0B       		.uleb128 0xb
 1359 005b 00       		.byte	0
 1360 005c 00       		.byte	0
 1361 005d 08       		.uleb128 0x8
 1362 005e 2E       		.uleb128 0x2e
 1363 005f 01       		.byte	0x1
 1364 0060 03       		.uleb128 0x3
 1365 0061 0E       		.uleb128 0xe
 1366 0062 3A       		.uleb128 0x3a
 1367 0063 0B       		.uleb128 0xb
 1368 0064 3B       		.uleb128 0x3b
 1369 0065 05       		.uleb128 0x5
 1370 0066 27       		.uleb128 0x27
 1371 0067 19       		.uleb128 0x19
 1372 0068 20       		.uleb128 0x20
 1373 0069 0B       		.uleb128 0xb
 1374 006a 01       		.uleb128 0x1
 1375 006b 13       		.uleb128 0x13
 1376 006c 00       		.byte	0
 1377 006d 00       		.byte	0
 1378 006e 09       		.uleb128 0x9
 1379 006f 05       		.uleb128 0x5
 1380 0070 00       		.byte	0
 1381 0071 03       		.uleb128 0x3
 1382 0072 0E       		.uleb128 0xe
 1383 0073 3A       		.uleb128 0x3a
 1384 0074 0B       		.uleb128 0xb
 1385 0075 3B       		.uleb128 0x3b
 1386 0076 05       		.uleb128 0x5
 1387 0077 49       		.uleb128 0x49
 1388 0078 13       		.uleb128 0x13
 1389 0079 00       		.byte	0
 1390 007a 00       		.byte	0
 1391 007b 0A       		.uleb128 0xa
 1392 007c 2E       		.uleb128 0x2e
 1393 007d 01       		.byte	0x1
 1394 007e 03       		.uleb128 0x3
 1395 007f 0E       		.uleb128 0xe
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 40


 1396 0080 3A       		.uleb128 0x3a
 1397 0081 0B       		.uleb128 0xb
 1398 0082 3B       		.uleb128 0x3b
 1399 0083 05       		.uleb128 0x5
 1400 0084 27       		.uleb128 0x27
 1401 0085 19       		.uleb128 0x19
 1402 0086 49       		.uleb128 0x49
 1403 0087 13       		.uleb128 0x13
 1404 0088 20       		.uleb128 0x20
 1405 0089 0B       		.uleb128 0xb
 1406 008a 01       		.uleb128 0x1
 1407 008b 13       		.uleb128 0x13
 1408 008c 00       		.byte	0
 1409 008d 00       		.byte	0
 1410 008e 0B       		.uleb128 0xb
 1411 008f 34       		.uleb128 0x34
 1412 0090 00       		.byte	0
 1413 0091 03       		.uleb128 0x3
 1414 0092 0E       		.uleb128 0xe
 1415 0093 3A       		.uleb128 0x3a
 1416 0094 0B       		.uleb128 0xb
 1417 0095 3B       		.uleb128 0x3b
 1418 0096 05       		.uleb128 0x5
 1419 0097 49       		.uleb128 0x49
 1420 0098 13       		.uleb128 0x13
 1421 0099 00       		.byte	0
 1422 009a 00       		.byte	0
 1423 009b 0C       		.uleb128 0xc
 1424 009c 2E       		.uleb128 0x2e
 1425 009d 00       		.byte	0
 1426 009e 03       		.uleb128 0x3
 1427 009f 0E       		.uleb128 0xe
 1428 00a0 3A       		.uleb128 0x3a
 1429 00a1 0B       		.uleb128 0xb
 1430 00a2 3B       		.uleb128 0x3b
 1431 00a3 0B       		.uleb128 0xb
 1432 00a4 27       		.uleb128 0x27
 1433 00a5 19       		.uleb128 0x19
 1434 00a6 49       		.uleb128 0x49
 1435 00a7 13       		.uleb128 0x13
 1436 00a8 20       		.uleb128 0x20
 1437 00a9 0B       		.uleb128 0xb
 1438 00aa 00       		.byte	0
 1439 00ab 00       		.byte	0
 1440 00ac 0D       		.uleb128 0xd
 1441 00ad 2E       		.uleb128 0x2e
 1442 00ae 00       		.byte	0
 1443 00af 03       		.uleb128 0x3
 1444 00b0 0E       		.uleb128 0xe
 1445 00b1 3A       		.uleb128 0x3a
 1446 00b2 0B       		.uleb128 0xb
 1447 00b3 3B       		.uleb128 0x3b
 1448 00b4 0B       		.uleb128 0xb
 1449 00b5 20       		.uleb128 0x20
 1450 00b6 0B       		.uleb128 0xb
 1451 00b7 00       		.byte	0
 1452 00b8 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 41


 1453 00b9 0E       		.uleb128 0xe
 1454 00ba 2E       		.uleb128 0x2e
 1455 00bb 01       		.byte	0x1
 1456 00bc 03       		.uleb128 0x3
 1457 00bd 0E       		.uleb128 0xe
 1458 00be 3A       		.uleb128 0x3a
 1459 00bf 0B       		.uleb128 0xb
 1460 00c0 3B       		.uleb128 0x3b
 1461 00c1 0B       		.uleb128 0xb
 1462 00c2 27       		.uleb128 0x27
 1463 00c3 19       		.uleb128 0x19
 1464 00c4 49       		.uleb128 0x49
 1465 00c5 13       		.uleb128 0x13
 1466 00c6 20       		.uleb128 0x20
 1467 00c7 0B       		.uleb128 0xb
 1468 00c8 01       		.uleb128 0x1
 1469 00c9 13       		.uleb128 0x13
 1470 00ca 00       		.byte	0
 1471 00cb 00       		.byte	0
 1472 00cc 0F       		.uleb128 0xf
 1473 00cd 05       		.uleb128 0x5
 1474 00ce 00       		.byte	0
 1475 00cf 03       		.uleb128 0x3
 1476 00d0 0E       		.uleb128 0xe
 1477 00d1 3A       		.uleb128 0x3a
 1478 00d2 0B       		.uleb128 0xb
 1479 00d3 3B       		.uleb128 0x3b
 1480 00d4 0B       		.uleb128 0xb
 1481 00d5 49       		.uleb128 0x49
 1482 00d6 13       		.uleb128 0x13
 1483 00d7 00       		.byte	0
 1484 00d8 00       		.byte	0
 1485 00d9 10       		.uleb128 0x10
 1486 00da 2E       		.uleb128 0x2e
 1487 00db 01       		.byte	0x1
 1488 00dc 3F       		.uleb128 0x3f
 1489 00dd 19       		.uleb128 0x19
 1490 00de 03       		.uleb128 0x3
 1491 00df 0E       		.uleb128 0xe
 1492 00e0 3A       		.uleb128 0x3a
 1493 00e1 0B       		.uleb128 0xb
 1494 00e2 3B       		.uleb128 0x3b
 1495 00e3 0B       		.uleb128 0xb
 1496 00e4 27       		.uleb128 0x27
 1497 00e5 19       		.uleb128 0x19
 1498 00e6 11       		.uleb128 0x11
 1499 00e7 01       		.uleb128 0x1
 1500 00e8 12       		.uleb128 0x12
 1501 00e9 06       		.uleb128 0x6
 1502 00ea 40       		.uleb128 0x40
 1503 00eb 18       		.uleb128 0x18
 1504 00ec 9742     		.uleb128 0x2117
 1505 00ee 19       		.uleb128 0x19
 1506 00ef 01       		.uleb128 0x1
 1507 00f0 13       		.uleb128 0x13
 1508 00f1 00       		.byte	0
 1509 00f2 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 42


 1510 00f3 11       		.uleb128 0x11
 1511 00f4 898201   		.uleb128 0x4109
 1512 00f7 01       		.byte	0x1
 1513 00f8 11       		.uleb128 0x11
 1514 00f9 01       		.uleb128 0x1
 1515 00fa 31       		.uleb128 0x31
 1516 00fb 13       		.uleb128 0x13
 1517 00fc 00       		.byte	0
 1518 00fd 00       		.byte	0
 1519 00fe 12       		.uleb128 0x12
 1520 00ff 8A8201   		.uleb128 0x410a
 1521 0102 00       		.byte	0
 1522 0103 02       		.uleb128 0x2
 1523 0104 18       		.uleb128 0x18
 1524 0105 9142     		.uleb128 0x2111
 1525 0107 18       		.uleb128 0x18
 1526 0108 00       		.byte	0
 1527 0109 00       		.byte	0
 1528 010a 13       		.uleb128 0x13
 1529 010b 34       		.uleb128 0x34
 1530 010c 00       		.byte	0
 1531 010d 03       		.uleb128 0x3
 1532 010e 08       		.uleb128 0x8
 1533 010f 3A       		.uleb128 0x3a
 1534 0110 0B       		.uleb128 0xb
 1535 0111 3B       		.uleb128 0x3b
 1536 0112 0B       		.uleb128 0xb
 1537 0113 49       		.uleb128 0x49
 1538 0114 13       		.uleb128 0x13
 1539 0115 02       		.uleb128 0x2
 1540 0116 17       		.uleb128 0x17
 1541 0117 00       		.byte	0
 1542 0118 00       		.byte	0
 1543 0119 14       		.uleb128 0x14
 1544 011a 1D       		.uleb128 0x1d
 1545 011b 00       		.byte	0
 1546 011c 31       		.uleb128 0x31
 1547 011d 13       		.uleb128 0x13
 1548 011e 11       		.uleb128 0x11
 1549 011f 01       		.uleb128 0x1
 1550 0120 12       		.uleb128 0x12
 1551 0121 06       		.uleb128 0x6
 1552 0122 58       		.uleb128 0x58
 1553 0123 0B       		.uleb128 0xb
 1554 0124 59       		.uleb128 0x59
 1555 0125 0B       		.uleb128 0xb
 1556 0126 00       		.byte	0
 1557 0127 00       		.byte	0
 1558 0128 15       		.uleb128 0x15
 1559 0129 1D       		.uleb128 0x1d
 1560 012a 01       		.byte	0x1
 1561 012b 31       		.uleb128 0x31
 1562 012c 13       		.uleb128 0x13
 1563 012d 11       		.uleb128 0x11
 1564 012e 01       		.uleb128 0x1
 1565 012f 12       		.uleb128 0x12
 1566 0130 06       		.uleb128 0x6
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 43


 1567 0131 58       		.uleb128 0x58
 1568 0132 0B       		.uleb128 0xb
 1569 0133 59       		.uleb128 0x59
 1570 0134 0B       		.uleb128 0xb
 1571 0135 01       		.uleb128 0x1
 1572 0136 13       		.uleb128 0x13
 1573 0137 00       		.byte	0
 1574 0138 00       		.byte	0
 1575 0139 16       		.uleb128 0x16
 1576 013a 0B       		.uleb128 0xb
 1577 013b 01       		.byte	0x1
 1578 013c 11       		.uleb128 0x11
 1579 013d 01       		.uleb128 0x1
 1580 013e 12       		.uleb128 0x12
 1581 013f 06       		.uleb128 0x6
 1582 0140 00       		.byte	0
 1583 0141 00       		.byte	0
 1584 0142 17       		.uleb128 0x17
 1585 0143 34       		.uleb128 0x34
 1586 0144 00       		.byte	0
 1587 0145 31       		.uleb128 0x31
 1588 0146 13       		.uleb128 0x13
 1589 0147 00       		.byte	0
 1590 0148 00       		.byte	0
 1591 0149 18       		.uleb128 0x18
 1592 014a 34       		.uleb128 0x34
 1593 014b 00       		.byte	0
 1594 014c 31       		.uleb128 0x31
 1595 014d 13       		.uleb128 0x13
 1596 014e 02       		.uleb128 0x2
 1597 014f 17       		.uleb128 0x17
 1598 0150 00       		.byte	0
 1599 0151 00       		.byte	0
 1600 0152 19       		.uleb128 0x19
 1601 0153 05       		.uleb128 0x5
 1602 0154 00       		.byte	0
 1603 0155 31       		.uleb128 0x31
 1604 0156 13       		.uleb128 0x13
 1605 0157 00       		.byte	0
 1606 0158 00       		.byte	0
 1607 0159 1A       		.uleb128 0x1a
 1608 015a 05       		.uleb128 0x5
 1609 015b 00       		.byte	0
 1610 015c 31       		.uleb128 0x31
 1611 015d 13       		.uleb128 0x13
 1612 015e 02       		.uleb128 0x2
 1613 015f 17       		.uleb128 0x17
 1614 0160 00       		.byte	0
 1615 0161 00       		.byte	0
 1616 0162 1B       		.uleb128 0x1b
 1617 0163 898201   		.uleb128 0x4109
 1618 0166 00       		.byte	0
 1619 0167 11       		.uleb128 0x11
 1620 0168 01       		.uleb128 0x1
 1621 0169 31       		.uleb128 0x31
 1622 016a 13       		.uleb128 0x13
 1623 016b 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 44


 1624 016c 00       		.byte	0
 1625 016d 1C       		.uleb128 0x1c
 1626 016e 2E       		.uleb128 0x2e
 1627 016f 01       		.byte	0x1
 1628 0170 3F       		.uleb128 0x3f
 1629 0171 19       		.uleb128 0x19
 1630 0172 03       		.uleb128 0x3
 1631 0173 0E       		.uleb128 0xe
 1632 0174 3A       		.uleb128 0x3a
 1633 0175 0B       		.uleb128 0xb
 1634 0176 3B       		.uleb128 0x3b
 1635 0177 0B       		.uleb128 0xb
 1636 0178 49       		.uleb128 0x49
 1637 0179 13       		.uleb128 0x13
 1638 017a 8701     		.uleb128 0x87
 1639 017c 19       		.uleb128 0x19
 1640 017d 11       		.uleb128 0x11
 1641 017e 01       		.uleb128 0x1
 1642 017f 12       		.uleb128 0x12
 1643 0180 06       		.uleb128 0x6
 1644 0181 40       		.uleb128 0x40
 1645 0182 18       		.uleb128 0x18
 1646 0183 9742     		.uleb128 0x2117
 1647 0185 19       		.uleb128 0x19
 1648 0186 01       		.uleb128 0x1
 1649 0187 13       		.uleb128 0x13
 1650 0188 00       		.byte	0
 1651 0189 00       		.byte	0
 1652 018a 1D       		.uleb128 0x1d
 1653 018b 2E       		.uleb128 0x2e
 1654 018c 00       		.byte	0
 1655 018d 3F       		.uleb128 0x3f
 1656 018e 19       		.uleb128 0x19
 1657 018f 03       		.uleb128 0x3
 1658 0190 0E       		.uleb128 0xe
 1659 0191 3A       		.uleb128 0x3a
 1660 0192 0B       		.uleb128 0xb
 1661 0193 3B       		.uleb128 0x3b
 1662 0194 0B       		.uleb128 0xb
 1663 0195 11       		.uleb128 0x11
 1664 0196 01       		.uleb128 0x1
 1665 0197 12       		.uleb128 0x12
 1666 0198 06       		.uleb128 0x6
 1667 0199 40       		.uleb128 0x40
 1668 019a 18       		.uleb128 0x18
 1669 019b 9742     		.uleb128 0x2117
 1670 019d 19       		.uleb128 0x19
 1671 019e 00       		.byte	0
 1672 019f 00       		.byte	0
 1673 01a0 1E       		.uleb128 0x1e
 1674 01a1 2E       		.uleb128 0x2e
 1675 01a2 01       		.byte	0x1
 1676 01a3 3F       		.uleb128 0x3f
 1677 01a4 19       		.uleb128 0x19
 1678 01a5 03       		.uleb128 0x3
 1679 01a6 0E       		.uleb128 0xe
 1680 01a7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 45


 1681 01a8 0B       		.uleb128 0xb
 1682 01a9 3B       		.uleb128 0x3b
 1683 01aa 0B       		.uleb128 0xb
 1684 01ab 11       		.uleb128 0x11
 1685 01ac 01       		.uleb128 0x1
 1686 01ad 12       		.uleb128 0x12
 1687 01ae 06       		.uleb128 0x6
 1688 01af 40       		.uleb128 0x40
 1689 01b0 18       		.uleb128 0x18
 1690 01b1 9742     		.uleb128 0x2117
 1691 01b3 19       		.uleb128 0x19
 1692 01b4 01       		.uleb128 0x1
 1693 01b5 13       		.uleb128 0x13
 1694 01b6 00       		.byte	0
 1695 01b7 00       		.byte	0
 1696 01b8 1F       		.uleb128 0x1f
 1697 01b9 898201   		.uleb128 0x4109
 1698 01bc 01       		.byte	0x1
 1699 01bd 11       		.uleb128 0x11
 1700 01be 01       		.uleb128 0x1
 1701 01bf 31       		.uleb128 0x31
 1702 01c0 13       		.uleb128 0x13
 1703 01c1 01       		.uleb128 0x1
 1704 01c2 13       		.uleb128 0x13
 1705 01c3 00       		.byte	0
 1706 01c4 00       		.byte	0
 1707 01c5 20       		.uleb128 0x20
 1708 01c6 2E       		.uleb128 0x2e
 1709 01c7 01       		.byte	0x1
 1710 01c8 3F       		.uleb128 0x3f
 1711 01c9 19       		.uleb128 0x19
 1712 01ca 03       		.uleb128 0x3
 1713 01cb 0E       		.uleb128 0xe
 1714 01cc 3A       		.uleb128 0x3a
 1715 01cd 0B       		.uleb128 0xb
 1716 01ce 3B       		.uleb128 0x3b
 1717 01cf 0B       		.uleb128 0xb
 1718 01d0 27       		.uleb128 0x27
 1719 01d1 19       		.uleb128 0x19
 1720 01d2 8701     		.uleb128 0x87
 1721 01d4 19       		.uleb128 0x19
 1722 01d5 11       		.uleb128 0x11
 1723 01d6 01       		.uleb128 0x1
 1724 01d7 12       		.uleb128 0x12
 1725 01d8 06       		.uleb128 0x6
 1726 01d9 40       		.uleb128 0x40
 1727 01da 18       		.uleb128 0x18
 1728 01db 9742     		.uleb128 0x2117
 1729 01dd 19       		.uleb128 0x19
 1730 01de 01       		.uleb128 0x1
 1731 01df 13       		.uleb128 0x13
 1732 01e0 00       		.byte	0
 1733 01e1 00       		.byte	0
 1734 01e2 21       		.uleb128 0x21
 1735 01e3 34       		.uleb128 0x34
 1736 01e4 00       		.byte	0
 1737 01e5 03       		.uleb128 0x3
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 46


 1738 01e6 0E       		.uleb128 0xe
 1739 01e7 3A       		.uleb128 0x3a
 1740 01e8 0B       		.uleb128 0xb
 1741 01e9 3B       		.uleb128 0x3b
 1742 01ea 0B       		.uleb128 0xb
 1743 01eb 49       		.uleb128 0x49
 1744 01ec 13       		.uleb128 0x13
 1745 01ed 3F       		.uleb128 0x3f
 1746 01ee 19       		.uleb128 0x19
 1747 01ef 3C       		.uleb128 0x3c
 1748 01f0 19       		.uleb128 0x19
 1749 01f1 00       		.byte	0
 1750 01f2 00       		.byte	0
 1751 01f3 22       		.uleb128 0x22
 1752 01f4 34       		.uleb128 0x34
 1753 01f5 00       		.byte	0
 1754 01f6 03       		.uleb128 0x3
 1755 01f7 0E       		.uleb128 0xe
 1756 01f8 3A       		.uleb128 0x3a
 1757 01f9 0B       		.uleb128 0xb
 1758 01fa 3B       		.uleb128 0x3b
 1759 01fb 05       		.uleb128 0x5
 1760 01fc 49       		.uleb128 0x49
 1761 01fd 13       		.uleb128 0x13
 1762 01fe 3F       		.uleb128 0x3f
 1763 01ff 19       		.uleb128 0x19
 1764 0200 3C       		.uleb128 0x3c
 1765 0201 19       		.uleb128 0x19
 1766 0202 00       		.byte	0
 1767 0203 00       		.byte	0
 1768 0204 23       		.uleb128 0x23
 1769 0205 35       		.uleb128 0x35
 1770 0206 00       		.byte	0
 1771 0207 49       		.uleb128 0x49
 1772 0208 13       		.uleb128 0x13
 1773 0209 00       		.byte	0
 1774 020a 00       		.byte	0
 1775 020b 24       		.uleb128 0x24
 1776 020c 2E       		.uleb128 0x2e
 1777 020d 00       		.byte	0
 1778 020e 3F       		.uleb128 0x3f
 1779 020f 19       		.uleb128 0x19
 1780 0210 3C       		.uleb128 0x3c
 1781 0211 19       		.uleb128 0x19
 1782 0212 6E       		.uleb128 0x6e
 1783 0213 0E       		.uleb128 0xe
 1784 0214 03       		.uleb128 0x3
 1785 0215 0E       		.uleb128 0xe
 1786 0216 3A       		.uleb128 0x3a
 1787 0217 0B       		.uleb128 0xb
 1788 0218 3B       		.uleb128 0x3b
 1789 0219 05       		.uleb128 0x5
 1790 021a 00       		.byte	0
 1791 021b 00       		.byte	0
 1792 021c 25       		.uleb128 0x25
 1793 021d 2E       		.uleb128 0x2e
 1794 021e 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 47


 1795 021f 3F       		.uleb128 0x3f
 1796 0220 19       		.uleb128 0x19
 1797 0221 3C       		.uleb128 0x3c
 1798 0222 19       		.uleb128 0x19
 1799 0223 6E       		.uleb128 0x6e
 1800 0224 0E       		.uleb128 0xe
 1801 0225 03       		.uleb128 0x3
 1802 0226 0E       		.uleb128 0xe
 1803 0227 3A       		.uleb128 0x3a
 1804 0228 0B       		.uleb128 0xb
 1805 0229 3B       		.uleb128 0x3b
 1806 022a 0B       		.uleb128 0xb
 1807 022b 00       		.byte	0
 1808 022c 00       		.byte	0
 1809 022d 00       		.byte	0
 1810              		.section	.debug_loc,"",%progbits
 1811              	.Ldebug_loc0:
 1812              	.LLST0:
 1813 0000 0A000000 		.4byte	.LVL1
 1814 0004 10000000 		.4byte	.LVL2
 1815 0008 0200     		.2byte	0x2
 1816 000a 30       		.byte	0x30
 1817 000b 9F       		.byte	0x9f
 1818 000c 00000000 		.4byte	0
 1819 0010 00000000 		.4byte	0
 1820              	.LLST1:
 1821 0014 16000000 		.4byte	.LVL3
 1822 0018 2C000000 		.4byte	.LVL5
 1823 001c 0100     		.2byte	0x1
 1824 001e 53       		.byte	0x53
 1825 001f 3C000000 		.4byte	.LVL7
 1826 0023 42000000 		.4byte	.LVL8
 1827 0027 0100     		.2byte	0x1
 1828 0029 53       		.byte	0x53
 1829 002a 48000000 		.4byte	.LVL10
 1830 002e 4A000000 		.4byte	.LVL11
 1831 0032 0100     		.2byte	0x1
 1832 0034 53       		.byte	0x53
 1833 0035 00000000 		.4byte	0
 1834 0039 00000000 		.4byte	0
 1835              	.LLST2:
 1836 003d 16000000 		.4byte	.LVL3
 1837 0041 3A000000 		.4byte	.LVL6
 1838 0045 0200     		.2byte	0x2
 1839 0047 30       		.byte	0x30
 1840 0048 9F       		.byte	0x9f
 1841 0049 3A000000 		.4byte	.LVL6
 1842 004d 3C000000 		.4byte	.LVL7
 1843 0051 0100     		.2byte	0x1
 1844 0053 53       		.byte	0x53
 1845 0054 3C000000 		.4byte	.LVL7
 1846 0058 46000000 		.4byte	.LVL9
 1847 005c 0200     		.2byte	0x2
 1848 005e 30       		.byte	0x30
 1849 005f 9F       		.byte	0x9f
 1850 0060 46000000 		.4byte	.LVL9
 1851 0064 48000000 		.4byte	.LVL10
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 48


 1852 0068 0100     		.2byte	0x1
 1853 006a 53       		.byte	0x53
 1854 006b 48000000 		.4byte	.LVL10
 1855 006f 4A000000 		.4byte	.LVL11
 1856 0073 0200     		.2byte	0x2
 1857 0075 30       		.byte	0x30
 1858 0076 9F       		.byte	0x9f
 1859 0077 00000000 		.4byte	0
 1860 007b 00000000 		.4byte	0
 1861              	.LLST3:
 1862 007f 66000000 		.4byte	.LVL14
 1863 0083 6A000000 		.4byte	.LVL15
 1864 0087 0100     		.2byte	0x1
 1865 0089 54       		.byte	0x54
 1866 008a 00000000 		.4byte	0
 1867 008e 00000000 		.4byte	0
 1868              	.LLST4:
 1869 0092 04000000 		.4byte	.LVL19
 1870 0096 0C000000 		.4byte	.LVL20
 1871 009a 0400     		.2byte	0x4
 1872 009c 0A       		.byte	0xa
 1873 009d C05D     		.2byte	0x5dc0
 1874 009f 9F       		.byte	0x9f
 1875 00a0 00000000 		.4byte	0
 1876 00a4 00000000 		.4byte	0
 1877              		.section	.debug_aranges,"",%progbits
 1878 0000 4C000000 		.4byte	0x4c
 1879 0004 0200     		.2byte	0x2
 1880 0006 00000000 		.4byte	.Ldebug_info0
 1881 000a 04       		.byte	0x4
 1882 000b 00       		.byte	0
 1883 000c 0000     		.2byte	0
 1884 000e 0000     		.2byte	0
 1885 0010 00000000 		.4byte	.LFB112
 1886 0014 0A000000 		.4byte	.LFE112-.LFB112
 1887 0018 00000000 		.4byte	.LFB111
 1888 001c 98000000 		.4byte	.LFE111-.LFB111
 1889 0020 00000000 		.4byte	.LFB113
 1890 0024 28000000 		.4byte	.LFE113-.LFB113
 1891 0028 00000000 		.4byte	.LFB114
 1892 002c 04000000 		.4byte	.LFE114-.LFB114
 1893 0030 00000000 		.4byte	.LFB115
 1894 0034 14000000 		.4byte	.LFE115-.LFB115
 1895 0038 00000000 		.4byte	.LFB116
 1896 003c 74000000 		.4byte	.LFE116-.LFB116
 1897 0040 00000000 		.4byte	.LFB117
 1898 0044 08000000 		.4byte	.LFE117-.LFB117
 1899 0048 00000000 		.4byte	0
 1900 004c 00000000 		.4byte	0
 1901              		.section	.debug_ranges,"",%progbits
 1902              	.Ldebug_ranges0:
 1903 0000 00000000 		.4byte	.LFB112
 1904 0004 0A000000 		.4byte	.LFE112
 1905 0008 00000000 		.4byte	.LFB111
 1906 000c 98000000 		.4byte	.LFE111
 1907 0010 00000000 		.4byte	.LFB113
 1908 0014 28000000 		.4byte	.LFE113
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 49


 1909 0018 00000000 		.4byte	.LFB114
 1910 001c 04000000 		.4byte	.LFE114
 1911 0020 00000000 		.4byte	.LFB115
 1912 0024 14000000 		.4byte	.LFE115
 1913 0028 00000000 		.4byte	.LFB116
 1914 002c 74000000 		.4byte	.LFE116
 1915 0030 00000000 		.4byte	.LFB117
 1916 0034 08000000 		.4byte	.LFE117
 1917 0038 00000000 		.4byte	0
 1918 003c 00000000 		.4byte	0
 1919              		.section	.debug_line,"",%progbits
 1920              	.Ldebug_line0:
 1921 0000 37040000 		.section	.debug_str,"MS",%progbits,1
 1921      02000203 
 1921      00000201 
 1921      FB0E0D00 
 1921      01010101 
 1922              	.LASF25:
 1923 0000 54494D45 		.ascii	"TIMEOUT_32ms\000"
 1923      4F55545F 
 1923      33326D73 
 1923      00
 1924              	.LASF19:
 1925 000d 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1925      59504542 
 1925      4F4F4C00 
 1926              	.LASF53:
 1927 0019 45455F73 		.ascii	"EE_switch_context\000"
 1927      77697463 
 1927      685F636F 
 1927      6E746578 
 1927      7400
 1928              	.LASF17:
 1929 002b 45455F55 		.ascii	"EE_UREG\000"
 1929      52454700 
 1930              	.LASF61:
 1931 0033 45455F73 		.ascii	"EE_system_init\000"
 1931      79737465 
 1931      6D5F696E 
 1931      697400
 1932              	.LASF60:
 1933 0042 57445F53 		.ascii	"WD_Start\000"
 1933      74617274 
 1933      00
 1934              	.LASF67:
 1935 004b 57445F54 		.ascii	"WD_Trigger\000"
 1935      72696767 
 1935      657200
 1936              	.LASF30:
 1937 0056 45455F73 		.ascii	"EE_std_end_IRQ_post_stub\000"
 1937      74645F65 
 1937      6E645F49 
 1937      52515F70 
 1937      6F73745F 
 1938              	.LASF70:
 1939 006f 433A5C55 		.ascii	"C:\\Users\\vboxuser\\Documents\\GitHub\\EAA_GasPeda"
 1939      73657273 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 50


 1939      5C76626F 
 1939      78757365 
 1939      725C446F 
 1940 009d 6C5C4C61 		.ascii	"l\\Lab 1\\GasPedal.cydsn\000"
 1940      6220315C 
 1940      47617350 
 1940      6564616C 
 1940      2E637964 
 1941              	.LASF2:
 1942 00b4 73686F72 		.ascii	"short int\000"
 1942      7420696E 
 1942      7400
 1943              	.LASF22:
 1944 00be 73697A65 		.ascii	"sizetype\000"
 1944      74797065 
 1944      00
 1945              	.LASF18:
 1946 00c7 45455F46 		.ascii	"EE_FREG\000"
 1946      52454700 
 1947              	.LASF43:
 1948 00cf 6D61696E 		.ascii	"main\000"
 1948      00
 1949              	.LASF64:
 1950 00d4 45455F6F 		.ascii	"EE_oo_SetRelAlarm\000"
 1950      6F5F5365 
 1950      7452656C 
 1950      416C6172 
 1950      6D00
 1951              	.LASF52:
 1952 00e6 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1952      52515F65 
 1952      6E645F70 
 1952      6F73745F 
 1952      73747562 
 1953              	.LASF38:
 1954 00fb 45455F63 		.ascii	"EE_cortex_mx_get_isr_prio\000"
 1954      6F727465 
 1954      785F6D78 
 1954      5F676574 
 1954      5F697372 
 1955              	.LASF21:
 1956 0115 45455F54 		.ascii	"EE_TID\000"
 1956      494400
 1957              	.LASF20:
 1958 011c 45455F54 		.ascii	"EE_TYPEISR2PRIO\000"
 1958      59504549 
 1958      53523250 
 1958      52494F00 
 1959              	.LASF26:
 1960 012c 54494D45 		.ascii	"TIMEOUT_4ms\000"
 1960      4F55545F 
 1960      346D7300 
 1961              	.LASF63:
 1962 0138 57445F43 		.ascii	"WD_CheckResetBit\000"
 1962      6865636B 
 1962      52657365 
 1962      74426974 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 51


 1962      00
 1963              	.LASF49:
 1964 0149 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1964      52515F6E 
 1964      65737469 
 1964      6E675F6C 
 1964      6576656C 
 1965              	.LASF66:
 1966 015e 45455F6F 		.ascii	"EE_oo_TerminateTask\000"
 1966      6F5F5465 
 1966      726D696E 
 1966      61746554 
 1966      61736B00 
 1967              	.LASF58:
 1968 0172 55415254 		.ascii	"UART_LOG_Start\000"
 1968      5F4C4F47 
 1968      5F537461 
 1968      727400
 1969              	.LASF11:
 1970 0181 666C6F61 		.ascii	"float\000"
 1970      7400
 1971              	.LASF6:
 1972 0187 6C6F6E67 		.ascii	"long long int\000"
 1972      206C6F6E 
 1972      6720696E 
 1972      7400
 1973              	.LASF13:
 1974 0195 63686172 		.ascii	"char\000"
 1974      00
 1975              	.LASF4:
 1976 019a 6C6F6E67 		.ascii	"long int\000"
 1976      20696E74 
 1976      00
 1977              	.LASF37:
 1978 01a3 45455F73 		.ascii	"EE_systick_start\000"
 1978      79737469 
 1978      636B5F73 
 1978      74617274 
 1978      00
 1979              	.LASF46:
 1980 01b4 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1980      6F5F4952 
 1980      515F7375 
 1980      7370656E 
 1980      645F7374 
 1981              	.LASF75:
 1982 01cd 68617264 		.ascii	"hardware_init\000"
 1982      77617265 
 1982      5F696E69 
 1982      7400
 1983              	.LASF59:
 1984 01db 4C45445F 		.ascii	"LED_Init\000"
 1984      496E6974 
 1984      00
 1985              	.LASF42:
 1986 01e4 46756E63 		.ascii	"Functsk_init\000"
 1986      74736B5F 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 52


 1986      696E6974 
 1986      00
 1987              	.LASF65:
 1988 01f1 45455F6F 		.ascii	"EE_oo_ActivateTask\000"
 1988      6F5F4163 
 1988      74697661 
 1988      74655461 
 1988      736B00
 1989              	.LASF62:
 1990 0204 55415254 		.ascii	"UART_LOG_PutString\000"
 1990      5F4C4F47 
 1990      5F507574 
 1990      53747269 
 1990      6E6700
 1991              	.LASF33:
 1992 0217 45455F63 		.ascii	"EE_cortex_mx_get_int_prio\000"
 1992      6F727465 
 1992      785F6D78 
 1992      5F676574 
 1992      5F696E74 
 1993              	.LASF14:
 1994 0231 6C6F6E67 		.ascii	"long double\000"
 1994      20646F75 
 1994      626C6500 
 1995              	.LASF27:
 1996 023d 45455F69 		.ascii	"EE_increment_IRQ_nesting_level\000"
 1996      6E637265 
 1996      6D656E74 
 1996      5F495251 
 1996      5F6E6573 
 1997              	.LASF1:
 1998 025c 756E7369 		.ascii	"unsigned char\000"
 1998      676E6564 
 1998      20636861 
 1998      7200
 1999              	.LASF28:
 2000 026a 45455F63 		.ascii	"EE_cortex_mx_disableIRQ\000"
 2000      6F727465 
 2000      785F6D78 
 2000      5F646973 
 2000      61626C65 
 2001              	.LASF16:
 2002 0282 45455F55 		.ascii	"EE_UINT32\000"
 2002      494E5433 
 2002      3200
 2003              	.LASF54:
 2004 028c 45455F63 		.ascii	"EE_cortex_mx_change_IRQ_stack\000"
 2004      6F727465 
 2004      785F6D78 
 2004      5F636861 
 2004      6E67655F 
 2005              	.LASF0:
 2006 02aa 7369676E 		.ascii	"signed char\000"
 2006      65642063 
 2006      68617200 
 2007              	.LASF7:
 2008 02b6 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 53


 2008      206C6F6E 
 2008      6720756E 
 2008      7369676E 
 2008      65642069 
 2009              	.LASF8:
 2010 02cd 756E7369 		.ascii	"unsigned int\000"
 2010      676E6564 
 2010      20696E74 
 2010      00
 2011              	.LASF44:
 2012 02da 46756E63 		.ascii	"Functsk_background\000"
 2012      74736B5F 
 2012      6261636B 
 2012      67726F75 
 2012      6E6400
 2013              	.LASF36:
 2014 02ed 70657269 		.ascii	"period\000"
 2014      6F6400
 2015              	.LASF69:
 2016 02f4 6173775C 		.ascii	"asw\\main.c\000"
 2016      6D61696E 
 2016      2E6300
 2017              	.LASF48:
 2018 02ff 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2018      74645F65 
 2018      6E646379 
 2018      636C655F 
 2018      6E657874 
 2019              	.LASF15:
 2020 0318 45455F49 		.ascii	"EE_INT32\000"
 2020      4E543332 
 2020      00
 2021              	.LASF32:
 2022 0321 45455F63 		.ascii	"EE_cortex_mx_IRQ_active_change_context\000"
 2022      6F727465 
 2022      785F6D78 
 2022      5F495251 
 2022      5F616374 
 2023              	.LASF3:
 2024 0348 73686F72 		.ascii	"short unsigned int\000"
 2024      7420756E 
 2024      7369676E 
 2024      65642069 
 2024      6E7400
 2025              	.LASF73:
 2026 035b 45455F73 		.ascii	"EE_systick_enable_int\000"
 2026      79737469 
 2026      636B5F65 
 2026      6E61626C 
 2026      655F696E 
 2027              	.LASF34:
 2028 0371 45455F73 		.ascii	"EE_systick_set_period\000"
 2028      79737469 
 2028      636B5F73 
 2028      65745F70 
 2028      6572696F 
 2029              	.LASF74:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 54


 2030 0387 756E6861 		.ascii	"unhandledException\000"
 2030      6E646C65 
 2030      64457863 
 2030      65707469 
 2030      6F6E00
 2031              	.LASF55:
 2032 039a 45455F63 		.ascii	"EE_cortex_mx_change_IRQ_stack_back\000"
 2032      6F727465 
 2032      785F6D78 
 2032      5F636861 
 2032      6E67655F 
 2033              	.LASF10:
 2034 03bd 696E7433 		.ascii	"int32_t\000"
 2034      325F7400 
 2035              	.LASF9:
 2036 03c5 5F5F696E 		.ascii	"__int32_t\000"
 2036      7433325F 
 2036      7400
 2037              	.LASF47:
 2038 03cf 45455F41 		.ascii	"EE_ApplicationMode\000"
 2038      70706C69 
 2038      63617469 
 2038      6F6E4D6F 
 2038      646500
 2039              	.LASF5:
 2040 03e2 6C6F6E67 		.ascii	"long unsigned int\000"
 2040      20756E73 
 2040      69676E65 
 2040      6420696E 
 2040      7400
 2041              	.LASF56:
 2042 03f4 45455F6F 		.ascii	"EE_oo_StartOS\000"
 2042      6F5F5374 
 2042      6172744F 
 2042      5300
 2043              	.LASF40:
 2044 0402 49535232 		.ascii	"ISR2_systick_handler\000"
 2044      5F737973 
 2044      7469636B 
 2044      5F68616E 
 2044      646C6572 
 2045              	.LASF72:
 2046 0417 45455F69 		.ascii	"EE_is_inside_ISR_call\000"
 2046      735F696E 
 2046      73696465 
 2046      5F495352 
 2046      5F63616C 
 2047              	.LASF39:
 2048 042d 76656374 		.ascii	"vectact\000"
 2048      61637400 
 2049              	.LASF57:
 2050 0435 4A4F5953 		.ascii	"JOYSTICK_Init\000"
 2050      5449434B 
 2050      5F496E69 
 2050      7400
 2051              	.LASF51:
 2052 0443 45455F6F 		.ascii	"EE_oo_IncrementCounter\000"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 55


 2052      6F5F496E 
 2052      6372656D 
 2052      656E7443 
 2052      6F756E74 
 2053              	.LASF23:
 2054 045a 54494D45 		.ascii	"TIMEOUT_2s\000"
 2054      4F55545F 
 2054      327300
 2055              	.LASF31:
 2056 0465 45455F63 		.ascii	"EE_cortex_mx_enableIRQ\000"
 2056      6F727465 
 2056      785F6D78 
 2056      5F656E61 
 2056      626C6549 
 2057              	.LASF71:
 2058 047c 45455F63 		.ascii	"EE_cortex_mx_set_int_prio\000"
 2058      6F727465 
 2058      785F6D78 
 2058      5F736574 
 2058      5F696E74 
 2059              	.LASF24:
 2060 0496 54494D45 		.ascii	"TIMEOUT_256ms\000"
 2060      4F55545F 
 2060      3235366D 
 2060      7300
 2061              	.LASF12:
 2062 04a4 646F7562 		.ascii	"double\000"
 2062      6C6500
 2063              	.LASF41:
 2064 04ab 73797374 		.ascii	"systick_handler\000"
 2064      69636B5F 
 2064      68616E64 
 2064      6C657200 
 2065              	.LASF50:
 2066 04bb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2066      52784275 
 2066      66666572 
 2066      00
 2067              	.LASF68:
 2068 04c8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2068      43313120 
 2068      352E342E 
 2068      31203230 
 2068      31363036 
 2069 04fb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2069      20726576 
 2069      6973696F 
 2069      6E203233 
 2069      37373135 
 2070 052e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2070      66756E63 
 2070      74696F6E 
 2070      2D736563 
 2070      74696F6E 
 2071              	.LASF45:
 2072 0556 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2072      6F5F4952 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\ccoyrgRj.s 			page 56


 2072      515F6469 
 2072      7361626C 
 2072      655F636F 
 2073              	.LASF35:
 2074 056e 7072696F 		.ascii	"prio\000"
 2074      00
 2075              	.LASF29:
 2076 0573 45455F64 		.ascii	"EE_decrement_IRQ_nesting_level\000"
 2076      65637265 
 2076      6D656E74 
 2076      5F495251 
 2076      5F6E6573 
 2077              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
