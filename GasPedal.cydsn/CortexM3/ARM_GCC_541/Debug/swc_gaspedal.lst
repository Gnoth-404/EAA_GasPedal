ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"swc_gaspedal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.GASPEDAL_readJoystick_run,"ax",%progbits
  20              		.align	2
  21              		.global	GASPEDAL_readJoystick_run
  22              		.thumb
  23              		.thumb_func
  24              		.type	GASPEDAL_readJoystick_run, %function
  25              	GASPEDAL_readJoystick_run:
  26              	.LFB180:
  27              		.file 1 "asw\\swc_gaspedal.c"
   1:asw/swc_gaspedal.c **** /*
   2:asw/swc_gaspedal.c ****  * Filename: swc_gaspedal.c
   3:asw/swc_gaspedal.c ****  *
   4:asw/swc_gaspedal.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   5:asw/swc_gaspedal.c ****  *
   6:asw/swc_gaspedal.c ****  * description: Gas Pedal Software Component
   7:asw/swc_gaspedal.c ****  * name: swc_GasPedal
   8:asw/swc_gaspedal.c ****  * shortname: GasPedal
   9:asw/swc_gaspedal.c ****  *
  10:asw/swc_gaspedal.c ****  */
  11:asw/swc_gaspedal.c **** 
  12:asw/swc_gaspedal.c **** #include "project.h"
  13:asw/swc_gaspedal.c **** #include "global.h"
  14:asw/swc_gaspedal.c **** #include "rte.h"
  15:asw/swc_gaspedal.c **** #include "rte_types.h"
  16:asw/swc_gaspedal.c **** #include "swc_gaspedal.h"
  17:asw/swc_gaspedal.c **** 
  18:asw/swc_gaspedal.c **** 
  19:asw/swc_gaspedal.c **** 
  20:asw/swc_gaspedal.c **** /* USER CODE START SWC_GASPEDAL_INCLUDE */
  21:asw/swc_gaspedal.c **** #include "watchdog.h"
  22:asw/swc_gaspedal.c **** /* USER CODE END SWC_GASPEDAL_INCLUDE */
  23:asw/swc_gaspedal.c **** 
  24:asw/swc_gaspedal.c **** 
  25:asw/swc_gaspedal.c **** #include "sp_common.h"
  26:asw/swc_gaspedal.c **** 
  27:asw/swc_gaspedal.c **** /* USER CODE START SWC_GASPEDAL_USERDEFINITIONS */
  28:asw/swc_gaspedal.c **** 
  29:asw/swc_gaspedal.c **** /* USER CODE END SWC_GASPEDAL_USERDEFINITIONS */
  30:asw/swc_gaspedal.c **** 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 2


  31:asw/swc_gaspedal.c **** 
  32:asw/swc_gaspedal.c **** 
  33:asw/swc_gaspedal.c **** /*
  34:asw/swc_gaspedal.c ****  * component: swc_GasPedal
  35:asw/swc_gaspedal.c ****  * cycletime: 10
  36:asw/swc_gaspedal.c ****  * description: Runnable that reads joystick data value x and y every 10ms and update joystick sign
  37:asw/swc_gaspedal.c ****  * events: 
  38:asw/swc_gaspedal.c ****  * name: GASPEDAL_readJoystick_run
  39:asw/swc_gaspedal.c ****  * shortname: readJoystick
  40:asw/swc_gaspedal.c ****  * signalIN: 
  41:asw/swc_gaspedal.c ****  * signalOUT: so_joystick
  42:asw/swc_gaspedal.c ****  * task: tsk_io
  43:asw/swc_gaspedal.c ****  */
  44:asw/swc_gaspedal.c **** void GASPEDAL_readJoystick_run(RTE_event ev){
  28              		.loc 1 44 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              		.cfi_def_cfa_offset 24
  40              	.LVL1:
  41              	.LBB53:
  42              	.LBB54:
  43              		.file 2 ".\\bsw\\rte/sc_joystick.h"
   1:.\bsw\rte/sc_joystick.h **** 
   2:.\bsw\rte/sc_joystick.h **** 
   3:.\bsw\rte/sc_joystick.h **** /**
   4:.\bsw\rte/sc_joystick.h ****  *  file    SC_JOYSTICK_signal.h
   5:.\bsw\rte/sc_joystick.h ****  *
   6:.\bsw\rte/sc_joystick.h ****  *  brief   signal base class for signal sc_joystick
   7:.\bsw\rte/sc_joystick.h ****  *
   8:.\bsw\rte/sc_joystick.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\bsw\rte/sc_joystick.h ****  *
  10:.\bsw\rte/sc_joystick.h ****  * description: Joystick signal class
  11:.\bsw\rte/sc_joystick.h ****  * name: sc_joystick
  12:.\bsw\rte/sc_joystick.h ****  * shortname: joystick
  13:.\bsw\rte/sc_joystick.h ****  *
  14:.\bsw\rte/sc_joystick.h ****  */
  15:.\bsw\rte/sc_joystick.h **** 
  16:.\bsw\rte/sc_joystick.h **** 
  17:.\bsw\rte/sc_joystick.h **** 
  18:.\bsw\rte/sc_joystick.h **** #ifndef SC_JOYSTICK_SIGNAL_H_INCLUDED
  19:.\bsw\rte/sc_joystick.h **** #define SC_JOYSTICK_SIGNAL_H_INCLUDED
  20:.\bsw\rte/sc_joystick.h **** 
  21:.\bsw\rte/sc_joystick.h **** /*================================================[ public includes  ]=============================
  22:.\bsw\rte/sc_joystick.h **** #include "global.h"
  23:.\bsw\rte/sc_joystick.h **** #include "project.h"
  24:.\bsw\rte/sc_joystick.h **** #include "rte.h"
  25:.\bsw\rte/sc_joystick.h **** #include "rte_types.h"
  26:.\bsw\rte/sc_joystick.h **** 
  27:.\bsw\rte/sc_joystick.h **** #include "sc_joystick_type.h"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 3


  28:.\bsw\rte/sc_joystick.h **** 
  29:.\bsw\rte/sc_joystick.h **** 
  30:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
  31:.\bsw\rte/sc_joystick.h **** /* The driver API block																						*/
  32:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
  33:.\bsw\rte/sc_joystick.h ****                                                                                                    
  34:.\bsw\rte/sc_joystick.h **** /**
  35:.\bsw\rte/sc_joystick.h ****  *  Definition of function types for driver interfaces.
  36:.\bsw\rte/sc_joystick.h ****  *  I-Port
  37:.\bsw\rte/sc_joystick.h ****  */
  38:.\bsw\rte/sc_joystick.h **** typedef RC_t (*SC_JOYSTICK_driverIn_t)(SC_JOYSTICK_data_t * const);
  39:.\bsw\rte/sc_joystick.h **** 
  40:.\bsw\rte/sc_joystick.h **** /**
  41:.\bsw\rte/sc_joystick.h ****  *  Definition of function types for driver interfaces.
  42:.\bsw\rte/sc_joystick.h ****  *  O-Port
  43:.\bsw\rte/sc_joystick.h ****  */
  44:.\bsw\rte/sc_joystick.h **** typedef RC_t (*SC_JOYSTICK_driverOut_t)( const SC_JOYSTICK_data_t * const);
  45:.\bsw\rte/sc_joystick.h **** 
  46:.\bsw\rte/sc_joystick.h **** 
  47:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
  48:.\bsw\rte/sc_joystick.h **** /* The signal configuration API block																				*/
  49:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
  50:.\bsw\rte/sc_joystick.h **** 
  51:.\bsw\rte/sc_joystick.h **** /**
  52:.\bsw\rte/sc_joystick.h ****  * Instances of the struct SC_JOYSTICK_cfg_t represent the signal object configuration.
  53:.\bsw\rte/sc_joystick.h ****  */
  54:.\bsw\rte/sc_joystick.h **** struct SC_JOYSTICK_cfg_s
  55:.\bsw\rte/sc_joystick.h **** {
  56:.\bsw\rte/sc_joystick.h ****     /**
  57:.\bsw\rte/sc_joystick.h ****      * Function pointer to the input driver
  58:.\bsw\rte/sc_joystick.h ****      */
  59:.\bsw\rte/sc_joystick.h ****     SC_JOYSTICK_driverIn_t const inDriver;
  60:.\bsw\rte/sc_joystick.h **** 
  61:.\bsw\rte/sc_joystick.h ****     /**
  62:.\bsw\rte/sc_joystick.h ****      * Function pointer to the output driver table
  63:.\bsw\rte/sc_joystick.h ****      */
  64:.\bsw\rte/sc_joystick.h ****    SC_JOYSTICK_driverOut_t const outDriver;
  65:.\bsw\rte/sc_joystick.h ****    
  66:.\bsw\rte/sc_joystick.h ****     /**
  67:.\bsw\rte/sc_joystick.h ****      * Event onUpdate
  68:.\bsw\rte/sc_joystick.h ****      */
  69:.\bsw\rte/sc_joystick.h ****     EventMaskType const evOnUpdate;
  70:.\bsw\rte/sc_joystick.h ****     
  71:.\bsw\rte/sc_joystick.h ****     
  72:.\bsw\rte/sc_joystick.h ****     /**
  73:.\bsw\rte/sc_joystick.h ****      * Event onError
  74:.\bsw\rte/sc_joystick.h ****      */
  75:.\bsw\rte/sc_joystick.h ****     EventMaskType const evOnError;
  76:.\bsw\rte/sc_joystick.h ****     
  77:.\bsw\rte/sc_joystick.h ****     /**
  78:.\bsw\rte/sc_joystick.h ****      * Task Count onUpdate
  79:.\bsw\rte/sc_joystick.h ****      */
  80:.\bsw\rte/sc_joystick.h ****     size_t const onUpdateTaskCount;
  81:.\bsw\rte/sc_joystick.h **** 
  82:.\bsw\rte/sc_joystick.h ****     /**
  83:.\bsw\rte/sc_joystick.h ****      * Task List onUpdate
  84:.\bsw\rte/sc_joystick.h ****      */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 4


  85:.\bsw\rte/sc_joystick.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\bsw\rte/sc_joystick.h ****     
  87:.\bsw\rte/sc_joystick.h ****     /**
  88:.\bsw\rte/sc_joystick.h ****      * Task Count onError
  89:.\bsw\rte/sc_joystick.h ****      */
  90:.\bsw\rte/sc_joystick.h ****     size_t const onErrorTaskCount;
  91:.\bsw\rte/sc_joystick.h **** 
  92:.\bsw\rte/sc_joystick.h ****     /**
  93:.\bsw\rte/sc_joystick.h ****      * Task List onError
  94:.\bsw\rte/sc_joystick.h ****      */
  95:.\bsw\rte/sc_joystick.h ****     TaskTypeArray* const onErrorTasks;
  96:.\bsw\rte/sc_joystick.h **** 	
  97:.\bsw\rte/sc_joystick.h **** 	
  98:.\bsw\rte/sc_joystick.h **** 	/**
  99:.\bsw\rte/sc_joystick.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\bsw\rte/sc_joystick.h **** 	 */
 101:.\bsw\rte/sc_joystick.h **** 	 boolean_t const resourceActive;
 102:.\bsw\rte/sc_joystick.h **** 	 
 103:.\bsw\rte/sc_joystick.h **** 	/**
 104:.\bsw\rte/sc_joystick.h **** 	 * Ressourse 
 105:.\bsw\rte/sc_joystick.h **** 	 */
 106:.\bsw\rte/sc_joystick.h **** 	 ResourceType const resource;
 107:.\bsw\rte/sc_joystick.h **** 
 108:.\bsw\rte/sc_joystick.h **** };                                                                                                 
 109:.\bsw\rte/sc_joystick.h **** typedef const struct SC_JOYSTICK_cfg_s SC_JOYSTICK_cfg_t;
 110:.\bsw\rte/sc_joystick.h ****                               
 111:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 112:.\bsw\rte/sc_joystick.h **** /* The data interface block																							*/
 113:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 114:.\bsw\rte/sc_joystick.h **** 
 115:.\bsw\rte/sc_joystick.h ****                                                                                                    
 116:.\bsw\rte/sc_joystick.h **** 							  
 117:.\bsw\rte/sc_joystick.h **** /**
 118:.\bsw\rte/sc_joystick.h ****  * Instances of the struct SC_JOYSTICK_t represent the signal objects.
 119:.\bsw\rte/sc_joystick.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\bsw\rte/sc_joystick.h ****  */
 121:.\bsw\rte/sc_joystick.h **** struct SC_JOYSTICK_s
 122:.\bsw\rte/sc_joystick.h **** {                                                                                                  
 123:.\bsw\rte/sc_joystick.h **** 
 124:.\bsw\rte/sc_joystick.h **** 	/**
 125:.\bsw\rte/sc_joystick.h **** 	 * Data buffer for the application value
 126:.\bsw\rte/sc_joystick.h **** 	 */
 127:.\bsw\rte/sc_joystick.h ****     SC_JOYSTICK_data_t value;
 128:.\bsw\rte/sc_joystick.h **** 
 129:.\bsw\rte/sc_joystick.h ****     /**
 130:.\bsw\rte/sc_joystick.h ****      * Current signal status
 131:.\bsw\rte/sc_joystick.h ****      */
 132:.\bsw\rte/sc_joystick.h ****     RTE_signalStatus_t status;
 133:.\bsw\rte/sc_joystick.h **** 
 134:.\bsw\rte/sc_joystick.h ****     /**
 135:.\bsw\rte/sc_joystick.h ****      * Current age of the signal (in calling cycles)
 136:.\bsw\rte/sc_joystick.h ****      */
 137:.\bsw\rte/sc_joystick.h ****     uint32_t age;
 138:.\bsw\rte/sc_joystick.h **** 
 139:.\bsw\rte/sc_joystick.h ****     /**
 140:.\bsw\rte/sc_joystick.h ****      * Pointer to the signal configuration
 141:.\bsw\rte/sc_joystick.h ****      */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 5


 142:.\bsw\rte/sc_joystick.h **** 	const SC_JOYSTICK_cfg_t * const    pSigCfg;
 143:.\bsw\rte/sc_joystick.h **** 
 144:.\bsw\rte/sc_joystick.h **** };                                                                                                 
 145:.\bsw\rte/sc_joystick.h **** typedef struct SC_JOYSTICK_s SC_JOYSTICK_t;
 146:.\bsw\rte/sc_joystick.h **** 
 147:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 148:.\bsw\rte/sc_joystick.h **** /* Signal initialisation   																							*/
 149:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 150:.\bsw\rte/sc_joystick.h **** 
 151:.\bsw\rte/sc_joystick.h **** /**
 152:.\bsw\rte/sc_joystick.h ****  * Initializes a signal instance with a passed init value.
 153:.\bsw\rte/sc_joystick.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\bsw\rte/sc_joystick.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\bsw\rte/sc_joystick.h ****  *
 156:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object which will be initialised
 157:.\bsw\rte/sc_joystick.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\bsw\rte/sc_joystick.h ****  *
 159:.\bsw\rte/sc_joystick.h ****  **/
 160:.\bsw\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_init( SC_JOYSTICK_t * const signal )
 161:.\bsw\rte/sc_joystick.h **** {                                                                                                  
 162:.\bsw\rte/sc_joystick.h **** 
 163:.\bsw\rte/sc_joystick.h ****    RC_t ret = RC_SUCCESS;
 164:.\bsw\rte/sc_joystick.h **** 
 165:.\bsw\rte/sc_joystick.h ****    //Set value and raw value
 166:.\bsw\rte/sc_joystick.h ****    signal->value  = SC_JOYSTICK_INIT_DATA;
 167:.\bsw\rte/sc_joystick.h ****    signal->age    = 0;
 168:.\bsw\rte/sc_joystick.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\bsw\rte/sc_joystick.h **** 
 170:.\bsw\rte/sc_joystick.h ****    return ret;
 171:.\bsw\rte/sc_joystick.h **** }
 172:.\bsw\rte/sc_joystick.h **** 
 173:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 174:.\bsw\rte/sc_joystick.h **** /* Status and timeout control																						*/
 175:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 176:.\bsw\rte/sc_joystick.h **** 
 177:.\bsw\rte/sc_joystick.h **** /**
 178:.\bsw\rte/sc_joystick.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\bsw\rte/sc_joystick.h ****  *
 180:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 181:.\bsw\rte/sc_joystick.h ****  * @return  sig_status_t: The current signal status
 182:.\bsw\rte/sc_joystick.h ****  *
 183:.\bsw\rte/sc_joystick.h ****  **/
 184:.\bsw\rte/sc_joystick.h **** inline RTE_signalStatus_t RTE_SC_JOYSTICK_getStatus( const SC_JOYSTICK_t * const signal )
 185:.\bsw\rte/sc_joystick.h **** {
 186:.\bsw\rte/sc_joystick.h ****    return signal->status;
 187:.\bsw\rte/sc_joystick.h **** }
 188:.\bsw\rte/sc_joystick.h **** 
 189:.\bsw\rte/sc_joystick.h **** 
 190:.\bsw\rte/sc_joystick.h **** /**
 191:.\bsw\rte/sc_joystick.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\bsw\rte/sc_joystick.h ****  *
 193:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 194:.\bsw\rte/sc_joystick.h ****  * @param  const sig_status_t status: New signal status
 195:.\bsw\rte/sc_joystick.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\bsw\rte/sc_joystick.h ****  *
 197:.\bsw\rte/sc_joystick.h ****  */
 198:.\bsw\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_setStatus( SC_JOYSTICK_t * const signal, const RTE_signalStatus_t statu
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 6


 199:.\bsw\rte/sc_joystick.h **** {
 200:.\bsw\rte/sc_joystick.h ****    signal->status = status;
 201:.\bsw\rte/sc_joystick.h ****    size_t taskNum=0;
 202:.\bsw\rte/sc_joystick.h ****    
 203:.\bsw\rte/sc_joystick.h ****    //Fire error events in case of invalid state
 204:.\bsw\rte/sc_joystick.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\bsw\rte/sc_joystick.h ****    {
 206:.\bsw\rte/sc_joystick.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\bsw\rte/sc_joystick.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\bsw\rte/sc_joystick.h **** 
 209:.\bsw\rte/sc_joystick.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\bsw\rte/sc_joystick.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\bsw\rte/sc_joystick.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\bsw\rte/sc_joystick.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\bsw\rte/sc_joystick.h **** 			}
 214:.\bsw\rte/sc_joystick.h **** 		}
 215:.\bsw\rte/sc_joystick.h ****    }
 216:.\bsw\rte/sc_joystick.h ****    
 217:.\bsw\rte/sc_joystick.h ****    return RC_SUCCESS;
 218:.\bsw\rte/sc_joystick.h **** }
 219:.\bsw\rte/sc_joystick.h **** 
 220:.\bsw\rte/sc_joystick.h **** 
 221:.\bsw\rte/sc_joystick.h **** /**
 222:.\bsw\rte/sc_joystick.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\bsw\rte/sc_joystick.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\bsw\rte/sc_joystick.h ****  *
 225:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 226:.\bsw\rte/sc_joystick.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\bsw\rte/sc_joystick.h ****  */
 228:.\bsw\rte/sc_joystick.h **** inline uint32_t RTE_SC_JOYSTICK_getAge( const SC_JOYSTICK_t * const signal )
 229:.\bsw\rte/sc_joystick.h **** {
 230:.\bsw\rte/sc_joystick.h ****    return signal->age;
 231:.\bsw\rte/sc_joystick.h **** }
 232:.\bsw\rte/sc_joystick.h **** 
 233:.\bsw\rte/sc_joystick.h **** /**
 234:.\bsw\rte/sc_joystick.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 236:.\bsw\rte/sc_joystick.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\bsw\rte/sc_joystick.h ****  * @return void
 238:.\bsw\rte/sc_joystick.h ****  */
 239:.\bsw\rte/sc_joystick.h **** inline void RTE_SC_JOYSTICK_incAge(  SC_JOYSTICK_t * const signal , uint32_t increment)
 240:.\bsw\rte/sc_joystick.h **** {
 241:.\bsw\rte/sc_joystick.h **** 	   //Hack....
 242:.\bsw\rte/sc_joystick.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\bsw\rte/sc_joystick.h **** 	   {
 244:.\bsw\rte/sc_joystick.h **** 	      signal->age += increment;
 245:.\bsw\rte/sc_joystick.h **** 	   }
 246:.\bsw\rte/sc_joystick.h **** }
 247:.\bsw\rte/sc_joystick.h **** 
 248:.\bsw\rte/sc_joystick.h **** 
 249:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 250:.\bsw\rte/sc_joystick.h **** /* Application Data read/write Interface																			*/
 251:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 252:.\bsw\rte/sc_joystick.h **** 
 253:.\bsw\rte/sc_joystick.h **** /**
 254:.\bsw\rte/sc_joystick.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\bsw\rte/sc_joystick.h ****  * Careful: This is not threadsafe!!!
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 7


 256:.\bsw\rte/sc_joystick.h ****  *
 257:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 258:.\bsw\rte/sc_joystick.h ****  * @return sc_joystick_data_t*: pointer to the current value of the application data buffer
 259:.\bsw\rte/sc_joystick.h ****  *
 260:.\bsw\rte/sc_joystick.h ****  **/
 261:.\bsw\rte/sc_joystick.h **** inline SC_JOYSTICK_data_t* RTE_SC_JOYSTICK_getPtr( SC_JOYSTICK_t * const signal )
 262:.\bsw\rte/sc_joystick.h **** {               
 263:.\bsw\rte/sc_joystick.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\bsw\rte/sc_joystick.h ****    return &(signal->value);                                                                        
 265:.\bsw\rte/sc_joystick.h **** }
 266:.\bsw\rte/sc_joystick.h **** 
 267:.\bsw\rte/sc_joystick.h **** /**
 268:.\bsw\rte/sc_joystick.h ****  * Returns the current application value of the passed signal instance.
 269:.\bsw\rte/sc_joystick.h ****  *
 270:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 271:.\bsw\rte/sc_joystick.h ****  * @return sc_joystick_data_t: current value of the application data buffer
 272:.\bsw\rte/sc_joystick.h ****  *
 273:.\bsw\rte/sc_joystick.h ****  **/
 274:.\bsw\rte/sc_joystick.h **** inline SC_JOYSTICK_data_t RTE_SC_JOYSTICK_get( const SC_JOYSTICK_t * const signal )
 275:.\bsw\rte/sc_joystick.h **** {               
 276:.\bsw\rte/sc_joystick.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\bsw\rte/sc_joystick.h ****    return signal->value;                                                                           
 278:.\bsw\rte/sc_joystick.h **** }                                                                                                  
 279:.\bsw\rte/sc_joystick.h ****                                                                                                    
 280:.\bsw\rte/sc_joystick.h **** /**
 281:.\bsw\rte/sc_joystick.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\bsw\rte/sc_joystick.h ****  *
 283:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 284:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\bsw\rte/sc_joystick.h ****  * @return RC_SUCCESS
 286:.\bsw\rte/sc_joystick.h ****  *
 287:.\bsw\rte/sc_joystick.h ****  **/
 288:.\bsw\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_getThreadSafe( const SC_JOYSTICK_t * const signal, SC_JOYSTICK_data_t *
 289:.\bsw\rte/sc_joystick.h **** {    
 290:.\bsw\rte/sc_joystick.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\bsw\rte/sc_joystick.h ****    *data = signal->value;
 292:.\bsw\rte/sc_joystick.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\bsw\rte/sc_joystick.h **** 
 294:.\bsw\rte/sc_joystick.h ****    return RC_SUCCESS;                                                                   
 295:.\bsw\rte/sc_joystick.h ****    
 296:.\bsw\rte/sc_joystick.h **** }                                                                                                  
 297:.\bsw\rte/sc_joystick.h ****                                                                                                    
 298:.\bsw\rte/sc_joystick.h **** /**
 299:.\bsw\rte/sc_joystick.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\bsw\rte/sc_joystick.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\bsw\rte/sc_joystick.h ****  * signal specific scaling function.
 302:.\bsw\rte/sc_joystick.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\bsw\rte/sc_joystick.h ****  *
 304:.\bsw\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 305:.\bsw\rte/sc_joystick.h ****  * @param  sc_joystick_data_t const value: value for the application data buffer
 306:.\bsw\rte/sc_joystick.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\bsw\rte/sc_joystick.h ****  *
 308:.\bsw\rte/sc_joystick.h ****  **/
 309:.\bsw\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_set(SC_JOYSTICK_t * const signal, const SC_JOYSTICK_data_t value  )
 310:.\bsw\rte/sc_joystick.h **** {
 311:.\bsw\rte/sc_joystick.h **** 
 312:.\bsw\rte/sc_joystick.h ****    RC_t ret = RC_SUCCESS;
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 8


 313:.\bsw\rte/sc_joystick.h ****    size_t taskNum=0;
 314:.\bsw\rte/sc_joystick.h **** 
 315:.\bsw\rte/sc_joystick.h **** 
 316:.\bsw\rte/sc_joystick.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 317:.\bsw\rte/sc_joystick.h ****    signal->value  = value;
 318:.\bsw\rte/sc_joystick.h ****    signal->age    = 0;
 319:.\bsw\rte/sc_joystick.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 320:.\bsw\rte/sc_joystick.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\bsw\rte/sc_joystick.h **** 
 322:.\bsw\rte/sc_joystick.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\bsw\rte/sc_joystick.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 324:.\bsw\rte/sc_joystick.h **** 
 325:.\bsw\rte/sc_joystick.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 326:.\bsw\rte/sc_joystick.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\bsw\rte/sc_joystick.h **** 		  
 328:.\bsw\rte/sc_joystick.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\bsw\rte/sc_joystick.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 330:.\bsw\rte/sc_joystick.h ****       }
 331:.\bsw\rte/sc_joystick.h ****    }
 332:.\bsw\rte/sc_joystick.h **** 
 333:.\bsw\rte/sc_joystick.h ****    return ret;
 334:.\bsw\rte/sc_joystick.h **** }                                                                                                  
 335:.\bsw\rte/sc_joystick.h ****                                                                                                    
 336:.\bsw\rte/sc_joystick.h ****                                                                                                    
 337:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 338:.\bsw\rte/sc_joystick.h **** /* Call functions to the connected drivers																			*/
 339:.\bsw\rte/sc_joystick.h **** /**************************************************************************************************
 340:.\bsw\rte/sc_joystick.h **** 
 341:.\bsw\rte/sc_joystick.h ****                                                                                                    
 342:.\bsw\rte/sc_joystick.h **** /**
 343:.\bsw\rte/sc_joystick.h ****  *  Calls the connected driver interface to get a new value.
 344:.\bsw\rte/sc_joystick.h ****  *
 345:.\bsw\rte/sc_joystick.h ****  * @param SC_JOYSTICK_t * const signal: Pointer to the signal object
 346:.\bsw\rte/sc_joystick.h ****  * @return  RC_t: Return value of the driver call
 347:.\bsw\rte/sc_joystick.h ****  *
 348:.\bsw\rte/sc_joystick.h ****  */
 349:.\bsw\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_pullPort( SC_JOYSTICK_t * const signal )
 350:.\bsw\rte/sc_joystick.h **** {                                                                                                  
 351:.\bsw\rte/sc_joystick.h ****    RC_t ret = RC_SUCCESS;
 352:.\bsw\rte/sc_joystick.h **** 
 353:.\bsw\rte/sc_joystick.h ****                                                                                                    
 354:.\bsw\rte/sc_joystick.h ****    if ( NULL != signal->pSigCfg->inDriver )
  44              		.loc 2 354 0
  45 0004 224B     		ldr	r3, .L12
  46 0006 9B68     		ldr	r3, [r3, #8]
  47 0008 1A68     		ldr	r2, [r3]
  48 000a 002A     		cmp	r2, #0
  49 000c 3BD0     		beq	.L2
  50              	.LBB55:
 355:.\bsw\rte/sc_joystick.h ****    {
 356:.\bsw\rte/sc_joystick.h **** 	  SC_JOYSTICK_data_t value = signal->value;
  51              		.loc 2 356 0
  52 000e 204A     		ldr	r2, .L12
  53 0010 1288     		ldrh	r2, [r2]
  54 0012 02A8     		add	r0, sp, #8
  55 0014 20F8082D 		strh	r2, [r0, #-8]!	@ movhi
 357:.\bsw\rte/sc_joystick.h ****       ret = signal->pSigCfg->inDriver(&value);
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 9


  56              		.loc 2 357 0
  57 0018 1B68     		ldr	r3, [r3]
  58 001a 9847     		blx	r3
  59              	.LVL2:
 358:.\bsw\rte/sc_joystick.h ****                                                                                                    
 359:.\bsw\rte/sc_joystick.h ****       if ( ret == RC_SUCCESS )                                                                     
  60              		.loc 2 359 0
  61 001c E8B9     		cbnz	r0, .L3
  62              	.LVL3:
  63 001e BDF80010 		ldrh	r1, [sp]
  64 0022 ADF80410 		strh	r1, [sp, #4]	@ movhi
  65              	.LVL4:
  66              	.LBB56:
  67              	.LBB57:
 316:.\bsw\rte/sc_joystick.h ****    signal->value  = value;
  68              		.loc 2 316 0
  69 0026 1A4B     		ldr	r3, .L12
  70 0028 9A68     		ldr	r2, [r3, #8]
 317:.\bsw\rte/sc_joystick.h ****    signal->age    = 0;
  71              		.loc 2 317 0
  72 002a 1980     		strh	r1, [r3]	@ movhi
 318:.\bsw\rte/sc_joystick.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
  73              		.loc 2 318 0
  74 002c 0021     		movs	r1, #0
  75 002e 5960     		str	r1, [r3, #4]
 319:.\bsw\rte/sc_joystick.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
  76              		.loc 2 319 0
  77 0030 0221     		movs	r1, #2
  78 0032 9970     		strb	r1, [r3, #2]
 323:.\bsw\rte/sc_joystick.h **** 
  79              		.loc 2 323 0
  80 0034 5569     		ldr	r5, [r2, #20]
  81              	.LVL5:
 325:.\bsw\rte/sc_joystick.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
  82              		.loc 2 325 0
  83 0036 9368     		ldr	r3, [r2, #8]
  84 0038 2BB3     		cbz	r3, .L2
  85 003a 3DB9     		cbnz	r5, .L9
  86 003c 23E0     		b	.L2
  87              	.LVL6:
  88              	.L6:
  89              	.LBB58:
 329:.\bsw\rte/sc_joystick.h ****       }
  90              		.loc 2 329 0
  91 003e 9968     		ldr	r1, [r3, #8]
  92 0040 55F82400 		ldr	r0, [r5, r4, lsl #2]
  93 0044 FFF7FEFF 		bl	EE_oo_SetEvent
  94              	.LVL7:
  95              	.LBE58:
 326:.\bsw\rte/sc_joystick.h **** 		  
  96              		.loc 2 326 0
  97 0048 0134     		adds	r4, r4, #1
  98              	.LVL8:
  99 004a 00E0     		b	.L5
 100              	.LVL9:
 101              	.L9:
 325:.\bsw\rte/sc_joystick.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 10


 102              		.loc 2 325 0
 103 004c 0024     		movs	r4, #0
 104              	.LVL10:
 105              	.L5:
 326:.\bsw\rte/sc_joystick.h **** 		  
 106              		.loc 2 326 0
 107 004e 104B     		ldr	r3, .L12
 108 0050 9B68     		ldr	r3, [r3, #8]
 109 0052 1A69     		ldr	r2, [r3, #16]
 110 0054 9442     		cmp	r4, r2
 111 0056 F2D3     		bcc	.L6
 112 0058 15E0     		b	.L2
 113              	.LVL11:
 114              	.L3:
 115              	.LBE57:
 116              	.LBE56:
 117              	.LBB59:
 118              	.LBB60:
 200:.\bsw\rte/sc_joystick.h ****    size_t taskNum=0;
 119              		.loc 2 200 0
 120 005a 0D4B     		ldr	r3, .L12
 121 005c 0322     		movs	r2, #3
 122 005e 9A70     		strb	r2, [r3, #2]
 123              	.LVL12:
 124              	.LBB61:
 207:.\bsw\rte/sc_joystick.h **** 
 125              		.loc 2 207 0
 126 0060 9B68     		ldr	r3, [r3, #8]
 127 0062 DD69     		ldr	r5, [r3, #28]
 128              	.LVL13:
 209:.\bsw\rte/sc_joystick.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 129              		.loc 2 209 0
 130 0064 DB68     		ldr	r3, [r3, #12]
 131 0066 73B1     		cbz	r3, .L2
 132 0068 3DB9     		cbnz	r5, .L10
 133 006a 0CE0     		b	.L2
 134              	.LVL14:
 135              	.L8:
 136              	.LBB62:
 212:.\bsw\rte/sc_joystick.h **** 			}
 137              		.loc 2 212 0
 138 006c D968     		ldr	r1, [r3, #12]
 139 006e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 140 0072 FFF7FEFF 		bl	EE_oo_SetEvent
 141              	.LVL15:
 142              	.LBE62:
 210:.\bsw\rte/sc_joystick.h **** 				TaskType task = (*pTaskArray)[taskNum];
 143              		.loc 2 210 0
 144 0076 0134     		adds	r4, r4, #1
 145              	.LVL16:
 146 0078 00E0     		b	.L7
 147              	.LVL17:
 148              	.L10:
 209:.\bsw\rte/sc_joystick.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 149              		.loc 2 209 0
 150 007a 0024     		movs	r4, #0
 151              	.LVL18:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 11


 152              	.L7:
 210:.\bsw\rte/sc_joystick.h **** 				TaskType task = (*pTaskArray)[taskNum];
 153              		.loc 2 210 0
 154 007c 044B     		ldr	r3, .L12
 155 007e 9B68     		ldr	r3, [r3, #8]
 156 0080 9A69     		ldr	r2, [r3, #24]
 157 0082 9442     		cmp	r4, r2
 158 0084 F2D3     		bcc	.L8
 159              	.LVL19:
 160              	.L2:
 161              	.LBE61:
 162              	.LBE60:
 163              	.LBE59:
 164              	.LBE55:
 165              	.LBE54:
 166              	.LBE53:
  45:asw/swc_gaspedal.c **** 	
  46:asw/swc_gaspedal.c **** 	/* USER CODE START GASPEDAL_readJoystick_run */
  47:asw/swc_gaspedal.c ****     ev =0;
  48:asw/swc_gaspedal.c ****     RTE_SC_JOYSTICK_pullPort(&SO_JOYSTICK_signal);
  49:asw/swc_gaspedal.c ****     
  50:asw/swc_gaspedal.c ****     WD_Alive(WD_RUN_READJOYSTICK);
 167              		.loc 1 50 0
 168 0086 0020     		movs	r0, #0
 169 0088 FFF7FEFF 		bl	WD_Alive
 170              	.LVL20:
  51:asw/swc_gaspedal.c ****     /* USER CODE END GASPEDAL_readJoystick_run */
  52:asw/swc_gaspedal.c **** }
 171              		.loc 1 52 0
 172 008c 03B0     		add	sp, sp, #12
 173              		.cfi_def_cfa_offset 12
 174              		@ sp needed
 175 008e 30BD     		pop	{r4, r5, pc}
 176              	.L13:
 177              		.align	2
 178              	.L12:
 179 0090 00000000 		.word	SO_JOYSTICK_signal
 180              		.cfi_endproc
 181              	.LFE180:
 182              		.size	GASPEDAL_readJoystick_run, .-GASPEDAL_readJoystick_run
 183              		.section	.text.GASPEDAL_calcControl_run,"ax",%progbits
 184              		.align	2
 185              		.global	GASPEDAL_calcControl_run
 186              		.thumb
 187              		.thumb_func
 188              		.type	GASPEDAL_calcControl_run, %function
 189              	GASPEDAL_calcControl_run:
 190              	.LFB181:
  53:asw/swc_gaspedal.c **** 
  54:asw/swc_gaspedal.c **** /*
  55:asw/swc_gaspedal.c ****  * component: swc_GasPedal
  56:asw/swc_gaspedal.c ****  * cycletime: 0
  57:asw/swc_gaspedal.c ****  * description: Runnable that check the joystick signal and update speed signal value
  58:asw/swc_gaspedal.c ****  * events: ev_joystick_onData|ev_breakpedal_onData|ev_screen_onData
  59:asw/swc_gaspedal.c ****  * name: GASPEDAL_calcControl_run
  60:asw/swc_gaspedal.c ****  * shortname: calcControl
  61:asw/swc_gaspedal.c ****  * signalIN: so_joystick|so_breakPedal
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 12


  62:asw/swc_gaspedal.c ****  * signalOUT: so_speed
  63:asw/swc_gaspedal.c ****  * task: tsk_control
  64:asw/swc_gaspedal.c ****  */
  65:asw/swc_gaspedal.c **** void GASPEDAL_calcControl_run(RTE_event ev){
 191              		.loc 1 65 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 16
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              	.LVL21:
 196 0000 30B5     		push	{r4, r5, lr}
 197              		.cfi_def_cfa_offset 12
 198              		.cfi_offset 4, -12
 199              		.cfi_offset 5, -8
 200              		.cfi_offset 14, -4
 201 0002 85B0     		sub	sp, sp, #20
 202              		.cfi_def_cfa_offset 32
  66:asw/swc_gaspedal.c **** 	
  67:asw/swc_gaspedal.c **** 	/* USER CODE START GASPEDAL_calcControl_run */
  68:asw/swc_gaspedal.c ****     if ((ev & ev_joystick_onData)){
 203              		.loc 1 68 0
 204 0004 10F0020F 		tst	r0, #2
 205 0008 31D0     		beq	.L15
 206              	.LBB63:
  69:asw/swc_gaspedal.c ****         
  70:asw/swc_gaspedal.c ****         SC_SPEED_data_t speedSignal = SC_SPEED_INIT_DATA;
 207              		.loc 1 70 0
 208 000a 0023     		movs	r3, #0
 209 000c 1946     		mov	r1, r3
 210              	.LVL22:
  71:asw/swc_gaspedal.c ****         SC_JOYSTICK_data_t joystickSignal = SC_JOYSTICK_INIT_DATA;
 211              		.loc 1 71 0
 212 000e 8DF80430 		strb	r3, [sp, #4]
 213              	.LVL23:
 214              	.LBB64:
 215              	.LBB65:
 186:.\bsw\rte/sc_joystick.h **** }
 216              		.loc 2 186 0
 217 0012 274B     		ldr	r3, .L28
 218 0014 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 219              	.LVL24:
 220              	.LBE65:
 221              	.LBE64:
  72:asw/swc_gaspedal.c ****         
  73:asw/swc_gaspedal.c **** 
  74:asw/swc_gaspedal.c ****         if (RTE_SC_JOYSTICK_getStatus(&SO_JOYSTICK_signal) ==RTE_SIGNALSTATUS_VALID){
 222              		.loc 1 74 0
 223 0016 022B     		cmp	r3, #2
 224 0018 07D1     		bne	.L16
 225              	.LVL25:
 226              	.LBB66:
 227              	.LBB67:
 277:.\bsw\rte/sc_joystick.h **** }                                                                                                  
 228              		.loc 2 277 0
 229 001a 254B     		ldr	r3, .L28
 230 001c 1B88     		ldrh	r3, [r3]
 231 001e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 232 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 13


 233              	.LVL26:
 234              	.LBE67:
 235              	.LBE66:
  75:asw/swc_gaspedal.c ****             joystickSignal.xPos = RTE_SC_JOYSTICK_get(&SO_JOYSTICK_signal).xPos;
 236              		.loc 1 75 0
 237 0026 8DF80430 		strb	r3, [sp, #4]
 238              	.L16:
  76:asw/swc_gaspedal.c ****         }
  77:asw/swc_gaspedal.c ****         
  78:asw/swc_gaspedal.c ****             //Set the X value of the joystick to the speed data based on the condition given.
  79:asw/swc_gaspedal.c ****         if(joystickSignal.xPos > JOYSTICK_DRIFTX)
 239              		.loc 1 79 0
 240 002a 9DF90430 		ldrsb	r3, [sp, #4]
 241 002e 072B     		cmp	r3, #7
 242 0030 00DD     		ble	.L17
  80:asw/swc_gaspedal.c ****         {
  81:asw/swc_gaspedal.c ****             speedSignal.speedValue = 2 * (joystickSignal.xPos);
 243              		.loc 1 81 0
 244 0032 5900     		lsls	r1, r3, #1
 245              	.L17:
 246              	.LVL27:
 247              	.LBB68:
 248              	.LBB69:
 249              		.file 3 ".\\bsw\\rte/sc_speed.h"
   1:.\bsw\rte/sc_speed.h **** 
   2:.\bsw\rte/sc_speed.h **** 
   3:.\bsw\rte/sc_speed.h **** /**
   4:.\bsw\rte/sc_speed.h ****  *  file    SC_SPEED_signal.h
   5:.\bsw\rte/sc_speed.h ****  *
   6:.\bsw\rte/sc_speed.h ****  *  brief   signal base class for signal sc_speed
   7:.\bsw\rte/sc_speed.h ****  *
   8:.\bsw\rte/sc_speed.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\bsw\rte/sc_speed.h ****  *
  10:.\bsw\rte/sc_speed.h ****  * description: Speed signal class
  11:.\bsw\rte/sc_speed.h ****  * name: sc_speed
  12:.\bsw\rte/sc_speed.h ****  * shortname: speed
  13:.\bsw\rte/sc_speed.h ****  *
  14:.\bsw\rte/sc_speed.h ****  */
  15:.\bsw\rte/sc_speed.h **** 
  16:.\bsw\rte/sc_speed.h **** 
  17:.\bsw\rte/sc_speed.h **** 
  18:.\bsw\rte/sc_speed.h **** #ifndef SC_SPEED_SIGNAL_H_INCLUDED
  19:.\bsw\rte/sc_speed.h **** #define SC_SPEED_SIGNAL_H_INCLUDED
  20:.\bsw\rte/sc_speed.h **** 
  21:.\bsw\rte/sc_speed.h **** /*================================================[ public includes  ]=============================
  22:.\bsw\rte/sc_speed.h **** #include "global.h"
  23:.\bsw\rte/sc_speed.h **** #include "project.h"
  24:.\bsw\rte/sc_speed.h **** #include "rte.h"
  25:.\bsw\rte/sc_speed.h **** #include "rte_types.h"
  26:.\bsw\rte/sc_speed.h **** 
  27:.\bsw\rte/sc_speed.h **** #include "sc_speed_type.h"
  28:.\bsw\rte/sc_speed.h **** 
  29:.\bsw\rte/sc_speed.h **** 
  30:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
  31:.\bsw\rte/sc_speed.h **** /* The driver API block																						*/
  32:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
  33:.\bsw\rte/sc_speed.h ****                                                                                                    
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 14


  34:.\bsw\rte/sc_speed.h **** /**
  35:.\bsw\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  36:.\bsw\rte/sc_speed.h ****  *  I-Port
  37:.\bsw\rte/sc_speed.h ****  */
  38:.\bsw\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverIn_t)(SC_SPEED_data_t * const);
  39:.\bsw\rte/sc_speed.h **** 
  40:.\bsw\rte/sc_speed.h **** /**
  41:.\bsw\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  42:.\bsw\rte/sc_speed.h ****  *  O-Port
  43:.\bsw\rte/sc_speed.h ****  */
  44:.\bsw\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverOut_t)( const SC_SPEED_data_t * const);
  45:.\bsw\rte/sc_speed.h **** 
  46:.\bsw\rte/sc_speed.h **** 
  47:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
  48:.\bsw\rte/sc_speed.h **** /* The signal configuration API block																				*/
  49:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
  50:.\bsw\rte/sc_speed.h **** 
  51:.\bsw\rte/sc_speed.h **** /**
  52:.\bsw\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_cfg_t represent the signal object configuration.
  53:.\bsw\rte/sc_speed.h ****  */
  54:.\bsw\rte/sc_speed.h **** struct SC_SPEED_cfg_s
  55:.\bsw\rte/sc_speed.h **** {
  56:.\bsw\rte/sc_speed.h ****     /**
  57:.\bsw\rte/sc_speed.h ****      * Function pointer to the input driver
  58:.\bsw\rte/sc_speed.h ****      */
  59:.\bsw\rte/sc_speed.h ****     SC_SPEED_driverIn_t const inDriver;
  60:.\bsw\rte/sc_speed.h **** 
  61:.\bsw\rte/sc_speed.h ****     /**
  62:.\bsw\rte/sc_speed.h ****      * Function pointer to the output driver table
  63:.\bsw\rte/sc_speed.h ****      */
  64:.\bsw\rte/sc_speed.h ****    SC_SPEED_driverOut_t const outDriver;
  65:.\bsw\rte/sc_speed.h ****    
  66:.\bsw\rte/sc_speed.h ****     /**
  67:.\bsw\rte/sc_speed.h ****      * Event onUpdate
  68:.\bsw\rte/sc_speed.h ****      */
  69:.\bsw\rte/sc_speed.h ****     EventMaskType const evOnUpdate;
  70:.\bsw\rte/sc_speed.h ****     
  71:.\bsw\rte/sc_speed.h ****     
  72:.\bsw\rte/sc_speed.h ****     /**
  73:.\bsw\rte/sc_speed.h ****      * Event onError
  74:.\bsw\rte/sc_speed.h ****      */
  75:.\bsw\rte/sc_speed.h ****     EventMaskType const evOnError;
  76:.\bsw\rte/sc_speed.h ****     
  77:.\bsw\rte/sc_speed.h ****     /**
  78:.\bsw\rte/sc_speed.h ****      * Task Count onUpdate
  79:.\bsw\rte/sc_speed.h ****      */
  80:.\bsw\rte/sc_speed.h ****     size_t const onUpdateTaskCount;
  81:.\bsw\rte/sc_speed.h **** 
  82:.\bsw\rte/sc_speed.h ****     /**
  83:.\bsw\rte/sc_speed.h ****      * Task List onUpdate
  84:.\bsw\rte/sc_speed.h ****      */
  85:.\bsw\rte/sc_speed.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\bsw\rte/sc_speed.h ****     
  87:.\bsw\rte/sc_speed.h ****     /**
  88:.\bsw\rte/sc_speed.h ****      * Task Count onError
  89:.\bsw\rte/sc_speed.h ****      */
  90:.\bsw\rte/sc_speed.h ****     size_t const onErrorTaskCount;
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 15


  91:.\bsw\rte/sc_speed.h **** 
  92:.\bsw\rte/sc_speed.h ****     /**
  93:.\bsw\rte/sc_speed.h ****      * Task List onError
  94:.\bsw\rte/sc_speed.h ****      */
  95:.\bsw\rte/sc_speed.h ****     TaskTypeArray* const onErrorTasks;
  96:.\bsw\rte/sc_speed.h **** 	
  97:.\bsw\rte/sc_speed.h **** 	
  98:.\bsw\rte/sc_speed.h **** 	/**
  99:.\bsw\rte/sc_speed.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\bsw\rte/sc_speed.h **** 	 */
 101:.\bsw\rte/sc_speed.h **** 	 boolean_t const resourceActive;
 102:.\bsw\rte/sc_speed.h **** 	 
 103:.\bsw\rte/sc_speed.h **** 	/**
 104:.\bsw\rte/sc_speed.h **** 	 * Ressourse 
 105:.\bsw\rte/sc_speed.h **** 	 */
 106:.\bsw\rte/sc_speed.h **** 	 ResourceType const resource;
 107:.\bsw\rte/sc_speed.h **** 
 108:.\bsw\rte/sc_speed.h **** };                                                                                                 
 109:.\bsw\rte/sc_speed.h **** typedef const struct SC_SPEED_cfg_s SC_SPEED_cfg_t;
 110:.\bsw\rte/sc_speed.h ****                               
 111:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
 112:.\bsw\rte/sc_speed.h **** /* The data interface block																							*/
 113:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
 114:.\bsw\rte/sc_speed.h **** 
 115:.\bsw\rte/sc_speed.h ****                                                                                                    
 116:.\bsw\rte/sc_speed.h **** 							  
 117:.\bsw\rte/sc_speed.h **** /**
 118:.\bsw\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_t represent the signal objects.
 119:.\bsw\rte/sc_speed.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\bsw\rte/sc_speed.h ****  */
 121:.\bsw\rte/sc_speed.h **** struct SC_SPEED_s
 122:.\bsw\rte/sc_speed.h **** {                                                                                                  
 123:.\bsw\rte/sc_speed.h **** 
 124:.\bsw\rte/sc_speed.h **** 	/**
 125:.\bsw\rte/sc_speed.h **** 	 * Data buffer for the application value
 126:.\bsw\rte/sc_speed.h **** 	 */
 127:.\bsw\rte/sc_speed.h ****     SC_SPEED_data_t value;
 128:.\bsw\rte/sc_speed.h **** 
 129:.\bsw\rte/sc_speed.h ****     /**
 130:.\bsw\rte/sc_speed.h ****      * Current signal status
 131:.\bsw\rte/sc_speed.h ****      */
 132:.\bsw\rte/sc_speed.h ****     RTE_signalStatus_t status;
 133:.\bsw\rte/sc_speed.h **** 
 134:.\bsw\rte/sc_speed.h ****     /**
 135:.\bsw\rte/sc_speed.h ****      * Current age of the signal (in calling cycles)
 136:.\bsw\rte/sc_speed.h ****      */
 137:.\bsw\rte/sc_speed.h ****     uint32_t age;
 138:.\bsw\rte/sc_speed.h **** 
 139:.\bsw\rte/sc_speed.h ****     /**
 140:.\bsw\rte/sc_speed.h ****      * Pointer to the signal configuration
 141:.\bsw\rte/sc_speed.h ****      */
 142:.\bsw\rte/sc_speed.h **** 	const SC_SPEED_cfg_t * const    pSigCfg;
 143:.\bsw\rte/sc_speed.h **** 
 144:.\bsw\rte/sc_speed.h **** };                                                                                                 
 145:.\bsw\rte/sc_speed.h **** typedef struct SC_SPEED_s SC_SPEED_t;
 146:.\bsw\rte/sc_speed.h **** 
 147:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 16


 148:.\bsw\rte/sc_speed.h **** /* Signal initialisation   																							*/
 149:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
 150:.\bsw\rte/sc_speed.h **** 
 151:.\bsw\rte/sc_speed.h **** /**
 152:.\bsw\rte/sc_speed.h ****  * Initializes a signal instance with a passed init value.
 153:.\bsw\rte/sc_speed.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\bsw\rte/sc_speed.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\bsw\rte/sc_speed.h ****  *
 156:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object which will be initialised
 157:.\bsw\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\bsw\rte/sc_speed.h ****  *
 159:.\bsw\rte/sc_speed.h ****  **/
 160:.\bsw\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_init( SC_SPEED_t * const signal )
 161:.\bsw\rte/sc_speed.h **** {                                                                                                  
 162:.\bsw\rte/sc_speed.h **** 
 163:.\bsw\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 164:.\bsw\rte/sc_speed.h **** 
 165:.\bsw\rte/sc_speed.h ****    //Set value and raw value
 166:.\bsw\rte/sc_speed.h ****    signal->value  = SC_SPEED_INIT_DATA;
 167:.\bsw\rte/sc_speed.h ****    signal->age    = 0;
 168:.\bsw\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\bsw\rte/sc_speed.h **** 
 170:.\bsw\rte/sc_speed.h ****    return ret;
 171:.\bsw\rte/sc_speed.h **** }
 172:.\bsw\rte/sc_speed.h **** 
 173:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
 174:.\bsw\rte/sc_speed.h **** /* Status and timeout control																						*/
 175:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
 176:.\bsw\rte/sc_speed.h **** 
 177:.\bsw\rte/sc_speed.h **** /**
 178:.\bsw\rte/sc_speed.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\bsw\rte/sc_speed.h ****  *
 180:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 181:.\bsw\rte/sc_speed.h ****  * @return  sig_status_t: The current signal status
 182:.\bsw\rte/sc_speed.h ****  *
 183:.\bsw\rte/sc_speed.h ****  **/
 184:.\bsw\rte/sc_speed.h **** inline RTE_signalStatus_t RTE_SC_SPEED_getStatus( const SC_SPEED_t * const signal )
 185:.\bsw\rte/sc_speed.h **** {
 186:.\bsw\rte/sc_speed.h ****    return signal->status;
 187:.\bsw\rte/sc_speed.h **** }
 188:.\bsw\rte/sc_speed.h **** 
 189:.\bsw\rte/sc_speed.h **** 
 190:.\bsw\rte/sc_speed.h **** /**
 191:.\bsw\rte/sc_speed.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\bsw\rte/sc_speed.h ****  *
 193:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 194:.\bsw\rte/sc_speed.h ****  * @param  const sig_status_t status: New signal status
 195:.\bsw\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\bsw\rte/sc_speed.h ****  *
 197:.\bsw\rte/sc_speed.h ****  */
 198:.\bsw\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_setStatus( SC_SPEED_t * const signal, const RTE_signalStatus_t status )
 199:.\bsw\rte/sc_speed.h **** {
 200:.\bsw\rte/sc_speed.h ****    signal->status = status;
 201:.\bsw\rte/sc_speed.h ****    size_t taskNum=0;
 202:.\bsw\rte/sc_speed.h ****    
 203:.\bsw\rte/sc_speed.h ****    //Fire error events in case of invalid state
 204:.\bsw\rte/sc_speed.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 17


 205:.\bsw\rte/sc_speed.h ****    {
 206:.\bsw\rte/sc_speed.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\bsw\rte/sc_speed.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\bsw\rte/sc_speed.h **** 
 209:.\bsw\rte/sc_speed.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\bsw\rte/sc_speed.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\bsw\rte/sc_speed.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\bsw\rte/sc_speed.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\bsw\rte/sc_speed.h **** 			}
 214:.\bsw\rte/sc_speed.h **** 		}
 215:.\bsw\rte/sc_speed.h ****    }
 216:.\bsw\rte/sc_speed.h ****    
 217:.\bsw\rte/sc_speed.h ****    return RC_SUCCESS;
 218:.\bsw\rte/sc_speed.h **** }
 219:.\bsw\rte/sc_speed.h **** 
 220:.\bsw\rte/sc_speed.h **** 
 221:.\bsw\rte/sc_speed.h **** /**
 222:.\bsw\rte/sc_speed.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\bsw\rte/sc_speed.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\bsw\rte/sc_speed.h ****  *
 225:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 226:.\bsw\rte/sc_speed.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\bsw\rte/sc_speed.h ****  */
 228:.\bsw\rte/sc_speed.h **** inline uint32_t RTE_SC_SPEED_getAge( const SC_SPEED_t * const signal )
 229:.\bsw\rte/sc_speed.h **** {
 230:.\bsw\rte/sc_speed.h ****    return signal->age;
 231:.\bsw\rte/sc_speed.h **** }
 232:.\bsw\rte/sc_speed.h **** 
 233:.\bsw\rte/sc_speed.h **** /**
 234:.\bsw\rte/sc_speed.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 236:.\bsw\rte/sc_speed.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\bsw\rte/sc_speed.h ****  * @return void
 238:.\bsw\rte/sc_speed.h ****  */
 239:.\bsw\rte/sc_speed.h **** inline void RTE_SC_SPEED_incAge(  SC_SPEED_t * const signal , uint32_t increment)
 240:.\bsw\rte/sc_speed.h **** {
 241:.\bsw\rte/sc_speed.h **** 	   //Hack....
 242:.\bsw\rte/sc_speed.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\bsw\rte/sc_speed.h **** 	   {
 244:.\bsw\rte/sc_speed.h **** 	      signal->age += increment;
 245:.\bsw\rte/sc_speed.h **** 	   }
 246:.\bsw\rte/sc_speed.h **** }
 247:.\bsw\rte/sc_speed.h **** 
 248:.\bsw\rte/sc_speed.h **** 
 249:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
 250:.\bsw\rte/sc_speed.h **** /* Application Data read/write Interface																			*/
 251:.\bsw\rte/sc_speed.h **** /**************************************************************************************************
 252:.\bsw\rte/sc_speed.h **** 
 253:.\bsw\rte/sc_speed.h **** /**
 254:.\bsw\rte/sc_speed.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\bsw\rte/sc_speed.h ****  * Careful: This is not threadsafe!!!
 256:.\bsw\rte/sc_speed.h ****  *
 257:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 258:.\bsw\rte/sc_speed.h ****  * @return sc_speed_data_t*: pointer to the current value of the application data buffer
 259:.\bsw\rte/sc_speed.h ****  *
 260:.\bsw\rte/sc_speed.h ****  **/
 261:.\bsw\rte/sc_speed.h **** inline SC_SPEED_data_t* RTE_SC_SPEED_getPtr( SC_SPEED_t * const signal )
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 18


 262:.\bsw\rte/sc_speed.h **** {               
 263:.\bsw\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\bsw\rte/sc_speed.h ****    return &(signal->value);                                                                        
 265:.\bsw\rte/sc_speed.h **** }
 266:.\bsw\rte/sc_speed.h **** 
 267:.\bsw\rte/sc_speed.h **** /**
 268:.\bsw\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance.
 269:.\bsw\rte/sc_speed.h ****  *
 270:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 271:.\bsw\rte/sc_speed.h ****  * @return sc_speed_data_t: current value of the application data buffer
 272:.\bsw\rte/sc_speed.h ****  *
 273:.\bsw\rte/sc_speed.h ****  **/
 274:.\bsw\rte/sc_speed.h **** inline SC_SPEED_data_t RTE_SC_SPEED_get( const SC_SPEED_t * const signal )
 275:.\bsw\rte/sc_speed.h **** {               
 276:.\bsw\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\bsw\rte/sc_speed.h ****    return signal->value;                                                                           
 278:.\bsw\rte/sc_speed.h **** }                                                                                                  
 279:.\bsw\rte/sc_speed.h ****                                                                                                    
 280:.\bsw\rte/sc_speed.h **** /**
 281:.\bsw\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\bsw\rte/sc_speed.h ****  *
 283:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 284:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\bsw\rte/sc_speed.h ****  * @return RC_SUCCESS
 286:.\bsw\rte/sc_speed.h ****  *
 287:.\bsw\rte/sc_speed.h ****  **/
 288:.\bsw\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_getThreadSafe( const SC_SPEED_t * const signal, SC_SPEED_data_t * const da
 289:.\bsw\rte/sc_speed.h **** {    
 290:.\bsw\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\bsw\rte/sc_speed.h ****    *data = signal->value;
 292:.\bsw\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\bsw\rte/sc_speed.h **** 
 294:.\bsw\rte/sc_speed.h ****    return RC_SUCCESS;                                                                   
 295:.\bsw\rte/sc_speed.h ****    
 296:.\bsw\rte/sc_speed.h **** }                                                                                                  
 297:.\bsw\rte/sc_speed.h ****                                                                                                    
 298:.\bsw\rte/sc_speed.h **** /**
 299:.\bsw\rte/sc_speed.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\bsw\rte/sc_speed.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\bsw\rte/sc_speed.h ****  * signal specific scaling function.
 302:.\bsw\rte/sc_speed.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\bsw\rte/sc_speed.h ****  *
 304:.\bsw\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 305:.\bsw\rte/sc_speed.h ****  * @param  sc_speed_data_t const value: value for the application data buffer
 306:.\bsw\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\bsw\rte/sc_speed.h ****  *
 308:.\bsw\rte/sc_speed.h ****  **/
 309:.\bsw\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_set(SC_SPEED_t * const signal, const SC_SPEED_data_t value  )
 310:.\bsw\rte/sc_speed.h **** {
 311:.\bsw\rte/sc_speed.h **** 
 312:.\bsw\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 313:.\bsw\rte/sc_speed.h ****    size_t taskNum=0;
 314:.\bsw\rte/sc_speed.h **** 
 315:.\bsw\rte/sc_speed.h **** 
 316:.\bsw\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 250              		.loc 3 316 0
 251 0034 1F4B     		ldr	r3, .L28+4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 19


 252 0036 9A68     		ldr	r2, [r3, #8]
 253              	.LVL28:
 317:.\bsw\rte/sc_speed.h ****    signal->value  = value;
 254              		.loc 3 317 0
 255 0038 1970     		strb	r1, [r3]
 318:.\bsw\rte/sc_speed.h ****    signal->age    = 0;
 256              		.loc 3 318 0
 257 003a 0021     		movs	r1, #0
 258              	.LVL29:
 259 003c 5960     		str	r1, [r3, #4]
 319:.\bsw\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 260              		.loc 3 319 0
 261 003e 0221     		movs	r1, #2
 262 0040 5970     		strb	r1, [r3, #1]
 320:.\bsw\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\bsw\rte/sc_speed.h **** 
 322:.\bsw\rte/sc_speed.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\bsw\rte/sc_speed.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 263              		.loc 3 323 0
 264 0042 5569     		ldr	r5, [r2, #20]
 265              	.LVL30:
 324:.\bsw\rte/sc_speed.h **** 
 325:.\bsw\rte/sc_speed.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 266              		.loc 3 325 0
 267 0044 9368     		ldr	r3, [r2, #8]
 268 0046 73B1     		cbz	r3, .L18
 269 0048 3DB9     		cbnz	r5, .L25
 270 004a 0CE0     		b	.L18
 271              	.LVL31:
 272              	.L20:
 273              	.LBB70:
 326:.\bsw\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\bsw\rte/sc_speed.h **** 		  
 328:.\bsw\rte/sc_speed.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\bsw\rte/sc_speed.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 274              		.loc 3 329 0
 275 004c 9968     		ldr	r1, [r3, #8]
 276 004e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 277 0052 FFF7FEFF 		bl	EE_oo_SetEvent
 278              	.LVL32:
 279              	.LBE70:
 326:.\bsw\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 280              		.loc 3 326 0
 281 0056 0134     		adds	r4, r4, #1
 282              	.LVL33:
 283 0058 00E0     		b	.L19
 284              	.LVL34:
 285              	.L25:
 325:.\bsw\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 286              		.loc 3 325 0
 287 005a 0024     		movs	r4, #0
 288              	.LVL35:
 289              	.L19:
 326:.\bsw\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 290              		.loc 3 326 0
 291 005c 154B     		ldr	r3, .L28+4
 292 005e 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 20


 293 0060 1A69     		ldr	r2, [r3, #16]
 294 0062 9442     		cmp	r4, r2
 295 0064 F2D3     		bcc	.L20
 296              	.LVL36:
 297              	.L18:
 298              	.LBE69:
 299              	.LBE68:
  82:asw/swc_gaspedal.c ****         }
  83:asw/swc_gaspedal.c ****         else if(joystickSignal.xPos <= JOYSTICK_DRIFTX)
  84:asw/swc_gaspedal.c ****         {
  85:asw/swc_gaspedal.c ****             speedSignal.speedValue = 0;
  86:asw/swc_gaspedal.c ****         }
  87:asw/swc_gaspedal.c ****         
  88:asw/swc_gaspedal.c **** 
  89:asw/swc_gaspedal.c ****         // Set the value to output speed signal
  90:asw/swc_gaspedal.c ****         RTE_SC_SPEED_set(&SO_SPEED_signal, speedSignal);
  91:asw/swc_gaspedal.c ****         WD_Alive(WD_RUN_CALCCONTROL); 
 300              		.loc 1 91 0
 301 0066 0120     		movs	r0, #1
 302 0068 FFF7FEFF 		bl	WD_Alive
 303              	.LVL37:
 304              	.LBE63:
 305 006c 1EE0     		b	.L14
 306              	.LVL38:
 307              	.L15:
  92:asw/swc_gaspedal.c ****         
  93:asw/swc_gaspedal.c ****     }
  94:asw/swc_gaspedal.c ****     else if(ev & ev_breakpedal_onData)
 308              		.loc 1 94 0
 309 006e 10F0040F 		tst	r0, #4
 310 0072 1BD0     		beq	.L14
 311              	.LBB71:
  95:asw/swc_gaspedal.c ****     {
  96:asw/swc_gaspedal.c ****         SC_SPEED_data_t speedSignal = SC_SPEED_INIT_DATA;
 312              		.loc 1 96 0
 313 0074 0021     		movs	r1, #0
 314              	.LVL39:
 315              	.LBB72:
 316              	.LBB73:
 316:.\bsw\rte/sc_speed.h ****    signal->value  = value;
 317              		.loc 3 316 0
 318 0076 0F4B     		ldr	r3, .L28+4
 319 0078 9A68     		ldr	r2, [r3, #8]
 317:.\bsw\rte/sc_speed.h ****    signal->age    = 0;
 320              		.loc 3 317 0
 321 007a 1970     		strb	r1, [r3]
 318:.\bsw\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 322              		.loc 3 318 0
 323 007c 5960     		str	r1, [r3, #4]
 319:.\bsw\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 324              		.loc 3 319 0
 325 007e 0221     		movs	r1, #2
 326 0080 5970     		strb	r1, [r3, #1]
 323:.\bsw\rte/sc_speed.h **** 
 327              		.loc 3 323 0
 328 0082 5569     		ldr	r5, [r2, #20]
 329              	.LVL40:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 21


 325:.\bsw\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 330              		.loc 3 325 0
 331 0084 9368     		ldr	r3, [r2, #8]
 332 0086 73B1     		cbz	r3, .L22
 333 0088 3DB9     		cbnz	r5, .L26
 334 008a 0CE0     		b	.L22
 335              	.LVL41:
 336              	.L24:
 337              	.LBB74:
 338              		.loc 3 329 0
 339 008c 9968     		ldr	r1, [r3, #8]
 340 008e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 341 0092 FFF7FEFF 		bl	EE_oo_SetEvent
 342              	.LVL42:
 343              	.LBE74:
 326:.\bsw\rte/sc_speed.h **** 		  
 344              		.loc 3 326 0
 345 0096 0134     		adds	r4, r4, #1
 346              	.LVL43:
 347 0098 00E0     		b	.L23
 348              	.LVL44:
 349              	.L26:
 325:.\bsw\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 350              		.loc 3 325 0
 351 009a 0024     		movs	r4, #0
 352              	.LVL45:
 353              	.L23:
 326:.\bsw\rte/sc_speed.h **** 		  
 354              		.loc 3 326 0
 355 009c 054B     		ldr	r3, .L28+4
 356 009e 9B68     		ldr	r3, [r3, #8]
 357 00a0 1A69     		ldr	r2, [r3, #16]
 358 00a2 9442     		cmp	r4, r2
 359 00a4 F2D3     		bcc	.L24
 360              	.LVL46:
 361              	.L22:
 362              	.LBE73:
 363              	.LBE72:
  97:asw/swc_gaspedal.c ****         speedSignal.speedValue = 0;
  98:asw/swc_gaspedal.c ****         RTE_SC_SPEED_set(&SO_SPEED_signal, speedSignal);
  99:asw/swc_gaspedal.c ****         WD_Alive(WD_RUN_CALCCONTROL); 
 364              		.loc 1 99 0
 365 00a6 0120     		movs	r0, #1
 366 00a8 FFF7FEFF 		bl	WD_Alive
 367              	.LVL47:
 368              	.L14:
 369              	.LBE71:
 100:asw/swc_gaspedal.c ****     }
 101:asw/swc_gaspedal.c ****     
 102:asw/swc_gaspedal.c ****     /* USER CODE END GASPEDAL_calcControl_run */
 103:asw/swc_gaspedal.c **** }
 370              		.loc 1 103 0
 371 00ac 05B0     		add	sp, sp, #20
 372              		.cfi_def_cfa_offset 12
 373              		@ sp needed
 374 00ae 30BD     		pop	{r4, r5, pc}
 375              	.L29:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 22


 376              		.align	2
 377              	.L28:
 378 00b0 00000000 		.word	SO_JOYSTICK_signal
 379 00b4 00000000 		.word	SO_SPEED_signal
 380              		.cfi_endproc
 381              	.LFE181:
 382              		.size	GASPEDAL_calcControl_run, .-GASPEDAL_calcControl_run
 383              		.section	.text.GASPEDAL_setEngine_run,"ax",%progbits
 384              		.align	2
 385              		.global	GASPEDAL_setEngine_run
 386              		.thumb
 387              		.thumb_func
 388              		.type	GASPEDAL_setEngine_run, %function
 389              	GASPEDAL_setEngine_run:
 390              	.LFB182:
 104:asw/swc_gaspedal.c **** 
 105:asw/swc_gaspedal.c **** /*
 106:asw/swc_gaspedal.c ****  * component: swc_GasPedal
 107:asw/swc_gaspedal.c ****  * cycletime: 100
 108:asw/swc_gaspedal.c ****  * description: Runnable that take the input speed signal value and write it to engine(Green LED)
 109:asw/swc_gaspedal.c ****  * events: 
 110:asw/swc_gaspedal.c ****  * name: GASPEDAL_setEngine_run
 111:asw/swc_gaspedal.c ****  * shortname: setEngine
 112:asw/swc_gaspedal.c ****  * signalIN: so_speed
 113:asw/swc_gaspedal.c ****  * signalOUT: 
 114:asw/swc_gaspedal.c ****  * task: tsk_io
 115:asw/swc_gaspedal.c ****  */
 116:asw/swc_gaspedal.c **** void GASPEDAL_setEngine_run(RTE_event ev){
 391              		.loc 1 116 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              	.LVL48:
 396 0000 38B5     		push	{r3, r4, r5, lr}
 397              		.cfi_def_cfa_offset 16
 398              		.cfi_offset 3, -16
 399              		.cfi_offset 4, -12
 400              		.cfi_offset 5, -8
 401              		.cfi_offset 14, -4
 402              	.LVL49:
 117:asw/swc_gaspedal.c **** 	
 118:asw/swc_gaspedal.c **** 	/* USER CODE START GASPEDAL_setEngine_run */
 119:asw/swc_gaspedal.c ****     ev =0;
 120:asw/swc_gaspedal.c ****     
 121:asw/swc_gaspedal.c ****     SC_SPEED_data_t speedSignal = SC_SPEED_INIT_DATA;
 403              		.loc 1 121 0
 404 0002 0023     		movs	r3, #0
 405 0004 1946     		mov	r1, r3
 406              	.LVL50:
 407              	.LBB75:
 408              	.LBB76:
 186:.\bsw\rte/sc_speed.h **** }
 409              		.loc 3 186 0
 410 0006 184A     		ldr	r2, .L39
 411 0008 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 412              	.LVL51:
 413              	.LBE76:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 23


 414              	.LBE75:
 122:asw/swc_gaspedal.c ****     static uint32_t speedSignalAge = 0;
 123:asw/swc_gaspedal.c ****     
 124:asw/swc_gaspedal.c ****     SC_ENGINE_data_t engineSignal = SC_ENGINE_INIT_DATA;
 125:asw/swc_gaspedal.c ****     
 126:asw/swc_gaspedal.c ****     
 127:asw/swc_gaspedal.c ****     // Get speed signal and check valid
 128:asw/swc_gaspedal.c ****     if(RTE_SC_SPEED_getStatus(&SO_SPEED_signal) == RTE_SIGNALSTATUS_VALID) {
 415              		.loc 1 128 0
 416 000a 022A     		cmp	r2, #2
 417 000c 01D1     		bne	.L31
 418              	.LVL52:
 129:asw/swc_gaspedal.c ****         speedSignal.speedValue = RTE_SC_SPEED_get(&SO_SPEED_signal).speedValue;
 419              		.loc 1 129 0
 420 000e 164A     		ldr	r2, .L39
 421 0010 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 422              	.L31:
 423              	.LVL53:
 424              	.LBB77:
 425              	.LBB78:
 230:.\bsw\rte/sc_speed.h **** }
 426              		.loc 3 230 0
 427 0012 154A     		ldr	r2, .L39
 428 0014 5268     		ldr	r2, [r2, #4]
 429              	.LVL54:
 430              	.LBE78:
 431              	.LBE77:
 130:asw/swc_gaspedal.c ****     }
 131:asw/swc_gaspedal.c ****     
 132:asw/swc_gaspedal.c ****     // Check speed signal Age
 133:asw/swc_gaspedal.c ****     // If age > 500ms , turn off engine 
 134:asw/swc_gaspedal.c ****     // Advanced error handling required later on !!!!
 135:asw/swc_gaspedal.c ****     speedSignalAge = RTE_SC_SPEED_getAge(&SO_SPEED_signal);
 136:asw/swc_gaspedal.c ****     
 137:asw/swc_gaspedal.c ****     if(speedSignalAge < 500) {
 432              		.loc 1 137 0
 433 0016 B2F5FA7F 		cmp	r2, #500
 434 001a 00D2     		bcs	.L32
 435              	.LVL55:
 138:asw/swc_gaspedal.c ****         engineSignal.engineValue = speedSignal.speedValue;
 436              		.loc 1 138 0
 437 001c 0B46     		mov	r3, r1
 438              	.LVL56:
 439              	.L32:
 440              	.LBB79:
 441              	.LBB80:
 442              		.file 4 ".\\bsw\\rte/sc_engine.h"
   1:.\bsw\rte/sc_engine.h **** 
   2:.\bsw\rte/sc_engine.h **** 
   3:.\bsw\rte/sc_engine.h **** /**
   4:.\bsw\rte/sc_engine.h ****  *  file    SC_ENGINE_signal.h
   5:.\bsw\rte/sc_engine.h ****  *
   6:.\bsw\rte/sc_engine.h ****  *  brief   signal base class for signal sc_engine
   7:.\bsw\rte/sc_engine.h ****  *
   8:.\bsw\rte/sc_engine.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\bsw\rte/sc_engine.h ****  *
  10:.\bsw\rte/sc_engine.h ****  * description: Engine signal class
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 24


  11:.\bsw\rte/sc_engine.h ****  * name: sc_engine
  12:.\bsw\rte/sc_engine.h ****  * shortname: engine
  13:.\bsw\rte/sc_engine.h ****  *
  14:.\bsw\rte/sc_engine.h ****  */
  15:.\bsw\rte/sc_engine.h **** 
  16:.\bsw\rte/sc_engine.h **** 
  17:.\bsw\rte/sc_engine.h **** 
  18:.\bsw\rte/sc_engine.h **** #ifndef SC_ENGINE_SIGNAL_H_INCLUDED
  19:.\bsw\rte/sc_engine.h **** #define SC_ENGINE_SIGNAL_H_INCLUDED
  20:.\bsw\rte/sc_engine.h **** 
  21:.\bsw\rte/sc_engine.h **** /*================================================[ public includes  ]=============================
  22:.\bsw\rte/sc_engine.h **** #include "global.h"
  23:.\bsw\rte/sc_engine.h **** #include "project.h"
  24:.\bsw\rte/sc_engine.h **** #include "rte.h"
  25:.\bsw\rte/sc_engine.h **** #include "rte_types.h"
  26:.\bsw\rte/sc_engine.h **** 
  27:.\bsw\rte/sc_engine.h **** #include "sc_engine_type.h"
  28:.\bsw\rte/sc_engine.h **** 
  29:.\bsw\rte/sc_engine.h **** 
  30:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
  31:.\bsw\rte/sc_engine.h **** /* The driver API block																						*/
  32:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
  33:.\bsw\rte/sc_engine.h ****                                                                                                    
  34:.\bsw\rte/sc_engine.h **** /**
  35:.\bsw\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  36:.\bsw\rte/sc_engine.h ****  *  I-Port
  37:.\bsw\rte/sc_engine.h ****  */
  38:.\bsw\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverIn_t)(SC_ENGINE_data_t * const);
  39:.\bsw\rte/sc_engine.h **** 
  40:.\bsw\rte/sc_engine.h **** /**
  41:.\bsw\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  42:.\bsw\rte/sc_engine.h ****  *  O-Port
  43:.\bsw\rte/sc_engine.h ****  */
  44:.\bsw\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverOut_t)( const SC_ENGINE_data_t * const);
  45:.\bsw\rte/sc_engine.h **** 
  46:.\bsw\rte/sc_engine.h **** 
  47:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
  48:.\bsw\rte/sc_engine.h **** /* The signal configuration API block																				*/
  49:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
  50:.\bsw\rte/sc_engine.h **** 
  51:.\bsw\rte/sc_engine.h **** /**
  52:.\bsw\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_cfg_t represent the signal object configuration.
  53:.\bsw\rte/sc_engine.h ****  */
  54:.\bsw\rte/sc_engine.h **** struct SC_ENGINE_cfg_s
  55:.\bsw\rte/sc_engine.h **** {
  56:.\bsw\rte/sc_engine.h ****     /**
  57:.\bsw\rte/sc_engine.h ****      * Function pointer to the input driver
  58:.\bsw\rte/sc_engine.h ****      */
  59:.\bsw\rte/sc_engine.h ****     SC_ENGINE_driverIn_t const inDriver;
  60:.\bsw\rte/sc_engine.h **** 
  61:.\bsw\rte/sc_engine.h ****     /**
  62:.\bsw\rte/sc_engine.h ****      * Function pointer to the output driver table
  63:.\bsw\rte/sc_engine.h ****      */
  64:.\bsw\rte/sc_engine.h ****    SC_ENGINE_driverOut_t const outDriver;
  65:.\bsw\rte/sc_engine.h ****    
  66:.\bsw\rte/sc_engine.h ****     /**
  67:.\bsw\rte/sc_engine.h ****      * Event onUpdate
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 25


  68:.\bsw\rte/sc_engine.h ****      */
  69:.\bsw\rte/sc_engine.h ****     EventMaskType const evOnUpdate;
  70:.\bsw\rte/sc_engine.h ****     
  71:.\bsw\rte/sc_engine.h ****     
  72:.\bsw\rte/sc_engine.h ****     /**
  73:.\bsw\rte/sc_engine.h ****      * Event onError
  74:.\bsw\rte/sc_engine.h ****      */
  75:.\bsw\rte/sc_engine.h ****     EventMaskType const evOnError;
  76:.\bsw\rte/sc_engine.h ****     
  77:.\bsw\rte/sc_engine.h ****     /**
  78:.\bsw\rte/sc_engine.h ****      * Task Count onUpdate
  79:.\bsw\rte/sc_engine.h ****      */
  80:.\bsw\rte/sc_engine.h ****     size_t const onUpdateTaskCount;
  81:.\bsw\rte/sc_engine.h **** 
  82:.\bsw\rte/sc_engine.h ****     /**
  83:.\bsw\rte/sc_engine.h ****      * Task List onUpdate
  84:.\bsw\rte/sc_engine.h ****      */
  85:.\bsw\rte/sc_engine.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\bsw\rte/sc_engine.h ****     
  87:.\bsw\rte/sc_engine.h ****     /**
  88:.\bsw\rte/sc_engine.h ****      * Task Count onError
  89:.\bsw\rte/sc_engine.h ****      */
  90:.\bsw\rte/sc_engine.h ****     size_t const onErrorTaskCount;
  91:.\bsw\rte/sc_engine.h **** 
  92:.\bsw\rte/sc_engine.h ****     /**
  93:.\bsw\rte/sc_engine.h ****      * Task List onError
  94:.\bsw\rte/sc_engine.h ****      */
  95:.\bsw\rte/sc_engine.h ****     TaskTypeArray* const onErrorTasks;
  96:.\bsw\rte/sc_engine.h **** 	
  97:.\bsw\rte/sc_engine.h **** 	
  98:.\bsw\rte/sc_engine.h **** 	/**
  99:.\bsw\rte/sc_engine.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\bsw\rte/sc_engine.h **** 	 */
 101:.\bsw\rte/sc_engine.h **** 	 boolean_t const resourceActive;
 102:.\bsw\rte/sc_engine.h **** 	 
 103:.\bsw\rte/sc_engine.h **** 	/**
 104:.\bsw\rte/sc_engine.h **** 	 * Ressourse 
 105:.\bsw\rte/sc_engine.h **** 	 */
 106:.\bsw\rte/sc_engine.h **** 	 ResourceType const resource;
 107:.\bsw\rte/sc_engine.h **** 
 108:.\bsw\rte/sc_engine.h **** };                                                                                                 
 109:.\bsw\rte/sc_engine.h **** typedef const struct SC_ENGINE_cfg_s SC_ENGINE_cfg_t;
 110:.\bsw\rte/sc_engine.h ****                               
 111:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 112:.\bsw\rte/sc_engine.h **** /* The data interface block																							*/
 113:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 114:.\bsw\rte/sc_engine.h **** 
 115:.\bsw\rte/sc_engine.h ****                                                                                                    
 116:.\bsw\rte/sc_engine.h **** 							  
 117:.\bsw\rte/sc_engine.h **** /**
 118:.\bsw\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_t represent the signal objects.
 119:.\bsw\rte/sc_engine.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\bsw\rte/sc_engine.h ****  */
 121:.\bsw\rte/sc_engine.h **** struct SC_ENGINE_s
 122:.\bsw\rte/sc_engine.h **** {                                                                                                  
 123:.\bsw\rte/sc_engine.h **** 
 124:.\bsw\rte/sc_engine.h **** 	/**
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 26


 125:.\bsw\rte/sc_engine.h **** 	 * Data buffer for the application value
 126:.\bsw\rte/sc_engine.h **** 	 */
 127:.\bsw\rte/sc_engine.h ****     SC_ENGINE_data_t value;
 128:.\bsw\rte/sc_engine.h **** 
 129:.\bsw\rte/sc_engine.h ****     /**
 130:.\bsw\rte/sc_engine.h ****      * Current signal status
 131:.\bsw\rte/sc_engine.h ****      */
 132:.\bsw\rte/sc_engine.h ****     RTE_signalStatus_t status;
 133:.\bsw\rte/sc_engine.h **** 
 134:.\bsw\rte/sc_engine.h ****     /**
 135:.\bsw\rte/sc_engine.h ****      * Current age of the signal (in calling cycles)
 136:.\bsw\rte/sc_engine.h ****      */
 137:.\bsw\rte/sc_engine.h ****     uint32_t age;
 138:.\bsw\rte/sc_engine.h **** 
 139:.\bsw\rte/sc_engine.h ****     /**
 140:.\bsw\rte/sc_engine.h ****      * Pointer to the signal configuration
 141:.\bsw\rte/sc_engine.h ****      */
 142:.\bsw\rte/sc_engine.h **** 	const SC_ENGINE_cfg_t * const    pSigCfg;
 143:.\bsw\rte/sc_engine.h **** 
 144:.\bsw\rte/sc_engine.h **** };                                                                                                 
 145:.\bsw\rte/sc_engine.h **** typedef struct SC_ENGINE_s SC_ENGINE_t;
 146:.\bsw\rte/sc_engine.h **** 
 147:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 148:.\bsw\rte/sc_engine.h **** /* Signal initialisation   																							*/
 149:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 150:.\bsw\rte/sc_engine.h **** 
 151:.\bsw\rte/sc_engine.h **** /**
 152:.\bsw\rte/sc_engine.h ****  * Initializes a signal instance with a passed init value.
 153:.\bsw\rte/sc_engine.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\bsw\rte/sc_engine.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\bsw\rte/sc_engine.h ****  *
 156:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object which will be initialised
 157:.\bsw\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\bsw\rte/sc_engine.h ****  *
 159:.\bsw\rte/sc_engine.h ****  **/
 160:.\bsw\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_init( SC_ENGINE_t * const signal )
 161:.\bsw\rte/sc_engine.h **** {                                                                                                  
 162:.\bsw\rte/sc_engine.h **** 
 163:.\bsw\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 164:.\bsw\rte/sc_engine.h **** 
 165:.\bsw\rte/sc_engine.h ****    //Set value and raw value
 166:.\bsw\rte/sc_engine.h ****    signal->value  = SC_ENGINE_INIT_DATA;
 167:.\bsw\rte/sc_engine.h ****    signal->age    = 0;
 168:.\bsw\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\bsw\rte/sc_engine.h **** 
 170:.\bsw\rte/sc_engine.h ****    return ret;
 171:.\bsw\rte/sc_engine.h **** }
 172:.\bsw\rte/sc_engine.h **** 
 173:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 174:.\bsw\rte/sc_engine.h **** /* Status and timeout control																						*/
 175:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 176:.\bsw\rte/sc_engine.h **** 
 177:.\bsw\rte/sc_engine.h **** /**
 178:.\bsw\rte/sc_engine.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\bsw\rte/sc_engine.h ****  *
 180:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 181:.\bsw\rte/sc_engine.h ****  * @return  sig_status_t: The current signal status
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 27


 182:.\bsw\rte/sc_engine.h ****  *
 183:.\bsw\rte/sc_engine.h ****  **/
 184:.\bsw\rte/sc_engine.h **** inline RTE_signalStatus_t RTE_SC_ENGINE_getStatus( const SC_ENGINE_t * const signal )
 185:.\bsw\rte/sc_engine.h **** {
 186:.\bsw\rte/sc_engine.h ****    return signal->status;
 187:.\bsw\rte/sc_engine.h **** }
 188:.\bsw\rte/sc_engine.h **** 
 189:.\bsw\rte/sc_engine.h **** 
 190:.\bsw\rte/sc_engine.h **** /**
 191:.\bsw\rte/sc_engine.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\bsw\rte/sc_engine.h ****  *
 193:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 194:.\bsw\rte/sc_engine.h ****  * @param  const sig_status_t status: New signal status
 195:.\bsw\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\bsw\rte/sc_engine.h ****  *
 197:.\bsw\rte/sc_engine.h ****  */
 198:.\bsw\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_setStatus( SC_ENGINE_t * const signal, const RTE_signalStatus_t status )
 199:.\bsw\rte/sc_engine.h **** {
 200:.\bsw\rte/sc_engine.h ****    signal->status = status;
 201:.\bsw\rte/sc_engine.h ****    size_t taskNum=0;
 202:.\bsw\rte/sc_engine.h ****    
 203:.\bsw\rte/sc_engine.h ****    //Fire error events in case of invalid state
 204:.\bsw\rte/sc_engine.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\bsw\rte/sc_engine.h ****    {
 206:.\bsw\rte/sc_engine.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\bsw\rte/sc_engine.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\bsw\rte/sc_engine.h **** 
 209:.\bsw\rte/sc_engine.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\bsw\rte/sc_engine.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\bsw\rte/sc_engine.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\bsw\rte/sc_engine.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\bsw\rte/sc_engine.h **** 			}
 214:.\bsw\rte/sc_engine.h **** 		}
 215:.\bsw\rte/sc_engine.h ****    }
 216:.\bsw\rte/sc_engine.h ****    
 217:.\bsw\rte/sc_engine.h ****    return RC_SUCCESS;
 218:.\bsw\rte/sc_engine.h **** }
 219:.\bsw\rte/sc_engine.h **** 
 220:.\bsw\rte/sc_engine.h **** 
 221:.\bsw\rte/sc_engine.h **** /**
 222:.\bsw\rte/sc_engine.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\bsw\rte/sc_engine.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\bsw\rte/sc_engine.h ****  *
 225:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 226:.\bsw\rte/sc_engine.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\bsw\rte/sc_engine.h ****  */
 228:.\bsw\rte/sc_engine.h **** inline uint32_t RTE_SC_ENGINE_getAge( const SC_ENGINE_t * const signal )
 229:.\bsw\rte/sc_engine.h **** {
 230:.\bsw\rte/sc_engine.h ****    return signal->age;
 231:.\bsw\rte/sc_engine.h **** }
 232:.\bsw\rte/sc_engine.h **** 
 233:.\bsw\rte/sc_engine.h **** /**
 234:.\bsw\rte/sc_engine.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 236:.\bsw\rte/sc_engine.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\bsw\rte/sc_engine.h ****  * @return void
 238:.\bsw\rte/sc_engine.h ****  */
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 28


 239:.\bsw\rte/sc_engine.h **** inline void RTE_SC_ENGINE_incAge(  SC_ENGINE_t * const signal , uint32_t increment)
 240:.\bsw\rte/sc_engine.h **** {
 241:.\bsw\rte/sc_engine.h **** 	   //Hack....
 242:.\bsw\rte/sc_engine.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\bsw\rte/sc_engine.h **** 	   {
 244:.\bsw\rte/sc_engine.h **** 	      signal->age += increment;
 245:.\bsw\rte/sc_engine.h **** 	   }
 246:.\bsw\rte/sc_engine.h **** }
 247:.\bsw\rte/sc_engine.h **** 
 248:.\bsw\rte/sc_engine.h **** 
 249:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 250:.\bsw\rte/sc_engine.h **** /* Application Data read/write Interface																			*/
 251:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 252:.\bsw\rte/sc_engine.h **** 
 253:.\bsw\rte/sc_engine.h **** /**
 254:.\bsw\rte/sc_engine.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\bsw\rte/sc_engine.h ****  * Careful: This is not threadsafe!!!
 256:.\bsw\rte/sc_engine.h ****  *
 257:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 258:.\bsw\rte/sc_engine.h ****  * @return sc_engine_data_t*: pointer to the current value of the application data buffer
 259:.\bsw\rte/sc_engine.h ****  *
 260:.\bsw\rte/sc_engine.h ****  **/
 261:.\bsw\rte/sc_engine.h **** inline SC_ENGINE_data_t* RTE_SC_ENGINE_getPtr( SC_ENGINE_t * const signal )
 262:.\bsw\rte/sc_engine.h **** {               
 263:.\bsw\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\bsw\rte/sc_engine.h ****    return &(signal->value);                                                                        
 265:.\bsw\rte/sc_engine.h **** }
 266:.\bsw\rte/sc_engine.h **** 
 267:.\bsw\rte/sc_engine.h **** /**
 268:.\bsw\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance.
 269:.\bsw\rte/sc_engine.h ****  *
 270:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 271:.\bsw\rte/sc_engine.h ****  * @return sc_engine_data_t: current value of the application data buffer
 272:.\bsw\rte/sc_engine.h ****  *
 273:.\bsw\rte/sc_engine.h ****  **/
 274:.\bsw\rte/sc_engine.h **** inline SC_ENGINE_data_t RTE_SC_ENGINE_get( const SC_ENGINE_t * const signal )
 275:.\bsw\rte/sc_engine.h **** {               
 276:.\bsw\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\bsw\rte/sc_engine.h ****    return signal->value;                                                                           
 278:.\bsw\rte/sc_engine.h **** }                                                                                                  
 279:.\bsw\rte/sc_engine.h ****                                                                                                    
 280:.\bsw\rte/sc_engine.h **** /**
 281:.\bsw\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\bsw\rte/sc_engine.h ****  *
 283:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 284:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\bsw\rte/sc_engine.h ****  * @return RC_SUCCESS
 286:.\bsw\rte/sc_engine.h ****  *
 287:.\bsw\rte/sc_engine.h ****  **/
 288:.\bsw\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_getThreadSafe( const SC_ENGINE_t * const signal, SC_ENGINE_data_t * const
 289:.\bsw\rte/sc_engine.h **** {    
 290:.\bsw\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\bsw\rte/sc_engine.h ****    *data = signal->value;
 292:.\bsw\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\bsw\rte/sc_engine.h **** 
 294:.\bsw\rte/sc_engine.h ****    return RC_SUCCESS;                                                                   
 295:.\bsw\rte/sc_engine.h ****    
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 29


 296:.\bsw\rte/sc_engine.h **** }                                                                                                  
 297:.\bsw\rte/sc_engine.h ****                                                                                                    
 298:.\bsw\rte/sc_engine.h **** /**
 299:.\bsw\rte/sc_engine.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\bsw\rte/sc_engine.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\bsw\rte/sc_engine.h ****  * signal specific scaling function.
 302:.\bsw\rte/sc_engine.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\bsw\rte/sc_engine.h ****  *
 304:.\bsw\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 305:.\bsw\rte/sc_engine.h ****  * @param  sc_engine_data_t const value: value for the application data buffer
 306:.\bsw\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\bsw\rte/sc_engine.h ****  *
 308:.\bsw\rte/sc_engine.h ****  **/
 309:.\bsw\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_set(SC_ENGINE_t * const signal, const SC_ENGINE_data_t value  )
 310:.\bsw\rte/sc_engine.h **** {
 311:.\bsw\rte/sc_engine.h **** 
 312:.\bsw\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 313:.\bsw\rte/sc_engine.h ****    size_t taskNum=0;
 314:.\bsw\rte/sc_engine.h **** 
 315:.\bsw\rte/sc_engine.h **** 
 316:.\bsw\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 443              		.loc 4 316 0
 444 001e 134A     		ldr	r2, .L39+4
 445 0020 9168     		ldr	r1, [r2, #8]
 446              	.LVL57:
 317:.\bsw\rte/sc_engine.h ****    signal->value  = value;
 447              		.loc 4 317 0
 448 0022 1370     		strb	r3, [r2]
 318:.\bsw\rte/sc_engine.h ****    signal->age    = 0;
 449              		.loc 4 318 0
 450 0024 0023     		movs	r3, #0
 451              	.LVL58:
 452 0026 5360     		str	r3, [r2, #4]
 319:.\bsw\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 453              		.loc 4 319 0
 454 0028 0223     		movs	r3, #2
 455 002a 5370     		strb	r3, [r2, #1]
 320:.\bsw\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\bsw\rte/sc_engine.h **** 
 322:.\bsw\rte/sc_engine.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\bsw\rte/sc_engine.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 456              		.loc 4 323 0
 457 002c 4D69     		ldr	r5, [r1, #20]
 458              	.LVL59:
 324:.\bsw\rte/sc_engine.h **** 
 325:.\bsw\rte/sc_engine.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 459              		.loc 4 325 0
 460 002e 8B68     		ldr	r3, [r1, #8]
 461 0030 73B1     		cbz	r3, .L33
 462 0032 3DB9     		cbnz	r5, .L37
 463 0034 0CE0     		b	.L33
 464              	.LVL60:
 465              	.L35:
 466              	.LBB81:
 326:.\bsw\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\bsw\rte/sc_engine.h **** 		  
 328:.\bsw\rte/sc_engine.h ****           TaskType task = (*pTaskArray)[taskNum];
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 30


 329:.\bsw\rte/sc_engine.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 467              		.loc 4 329 0
 468 0036 9968     		ldr	r1, [r3, #8]
 469 0038 55F82400 		ldr	r0, [r5, r4, lsl #2]
 470 003c FFF7FEFF 		bl	EE_oo_SetEvent
 471              	.LVL61:
 472              	.LBE81:
 326:.\bsw\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 473              		.loc 4 326 0
 474 0040 0134     		adds	r4, r4, #1
 475              	.LVL62:
 476 0042 00E0     		b	.L34
 477              	.LVL63:
 478              	.L37:
 325:.\bsw\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 479              		.loc 4 325 0
 480 0044 0024     		movs	r4, #0
 481              	.LVL64:
 482              	.L34:
 326:.\bsw\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 483              		.loc 4 326 0
 484 0046 094B     		ldr	r3, .L39+4
 485 0048 9B68     		ldr	r3, [r3, #8]
 486 004a 1A69     		ldr	r2, [r3, #16]
 487 004c 9442     		cmp	r4, r2
 488 004e F2D3     		bcc	.L35
 489              	.LVL65:
 490              	.L33:
 491              	.LBE80:
 492              	.LBE79:
 139:asw/swc_gaspedal.c ****     }
 140:asw/swc_gaspedal.c ****     else{
 141:asw/swc_gaspedal.c ****         engineSignal.engineValue = 0;
 142:asw/swc_gaspedal.c ****         //UART_LOG_PutString("Too old speed signal data");  
 143:asw/swc_gaspedal.c ****     }
 144:asw/swc_gaspedal.c ****     
 145:asw/swc_gaspedal.c ****     RTE_SC_ENGINE_set(&SO_ENGINE_signal, engineSignal);
 146:asw/swc_gaspedal.c ****     WD_Alive(WD_RUN_SETENGINE); 
 493              		.loc 1 146 0
 494 0050 0220     		movs	r0, #2
 495 0052 FFF7FEFF 		bl	WD_Alive
 496              	.LVL66:
 497              	.LBB82:
 498              	.LBB83:
 330:.\bsw\rte/sc_engine.h ****       }
 331:.\bsw\rte/sc_engine.h ****    }
 332:.\bsw\rte/sc_engine.h **** 
 333:.\bsw\rte/sc_engine.h ****    return ret;
 334:.\bsw\rte/sc_engine.h **** }                                                                                                  
 335:.\bsw\rte/sc_engine.h ****                                                                                                    
 336:.\bsw\rte/sc_engine.h ****                                                                                                    
 337:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 338:.\bsw\rte/sc_engine.h **** /* Call functions to the connected drivers																			*/
 339:.\bsw\rte/sc_engine.h **** /**************************************************************************************************
 340:.\bsw\rte/sc_engine.h **** 
 341:.\bsw\rte/sc_engine.h ****                                                                                                    
 342:.\bsw\rte/sc_engine.h **** /**
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 31


 343:.\bsw\rte/sc_engine.h ****  *  Calls the connected driver interface to get a new value.
 344:.\bsw\rte/sc_engine.h ****  *
 345:.\bsw\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 346:.\bsw\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 347:.\bsw\rte/sc_engine.h ****  *
 348:.\bsw\rte/sc_engine.h ****  */
 349:.\bsw\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pullPort( SC_ENGINE_t * const signal )
 350:.\bsw\rte/sc_engine.h **** {                                                                                                  
 351:.\bsw\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 352:.\bsw\rte/sc_engine.h **** 
 353:.\bsw\rte/sc_engine.h ****                                                                                                    
 354:.\bsw\rte/sc_engine.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\bsw\rte/sc_engine.h ****    {
 356:.\bsw\rte/sc_engine.h **** 	  SC_ENGINE_data_t value = signal->value;
 357:.\bsw\rte/sc_engine.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\bsw\rte/sc_engine.h ****                                                                                                    
 359:.\bsw\rte/sc_engine.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\bsw\rte/sc_engine.h ****       {
 361:.\bsw\rte/sc_engine.h ****     	  //Critical Section
 362:.\bsw\rte/sc_engine.h ****     	  RTE_SC_ENGINE_set(signal, value);
 363:.\bsw\rte/sc_engine.h ****       }
 364:.\bsw\rte/sc_engine.h ****       else
 365:.\bsw\rte/sc_engine.h ****       {
 366:.\bsw\rte/sc_engine.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\bsw\rte/sc_engine.h **** 		  RTE_SC_ENGINE_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\bsw\rte/sc_engine.h ****       }
 369:.\bsw\rte/sc_engine.h **** 
 370:.\bsw\rte/sc_engine.h ****    }                                                                                               
 371:.\bsw\rte/sc_engine.h ****                                                                                                    
 372:.\bsw\rte/sc_engine.h ****    return ret;                                                                                     
 373:.\bsw\rte/sc_engine.h **** }                                                                                                  
 374:.\bsw\rte/sc_engine.h ****                                                                                                    
 375:.\bsw\rte/sc_engine.h **** /**
 376:.\bsw\rte/sc_engine.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\bsw\rte/sc_engine.h ****  *
 378:.\bsw\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 379:.\bsw\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 380:.\bsw\rte/sc_engine.h ****  *
 381:.\bsw\rte/sc_engine.h ****  **/
 382:.\bsw\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pushPort( const SC_ENGINE_t * const signal )
 383:.\bsw\rte/sc_engine.h **** {                                                                                                  
 384:.\bsw\rte/sc_engine.h ****    RC_t ret = RC_ERROR;
 385:.\bsw\rte/sc_engine.h **** 
 386:.\bsw\rte/sc_engine.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 499              		.loc 4 386 0
 500 0056 054B     		ldr	r3, .L39+4
 501 0058 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 502 005a 022B     		cmp	r3, #2
 503 005c 03D1     		bne	.L30
 387:.\bsw\rte/sc_engine.h ****    {
 388:.\bsw\rte/sc_engine.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 504              		.loc 4 388 0
 505 005e 0348     		ldr	r0, .L39+4
 506 0060 8368     		ldr	r3, [r0, #8]
 507 0062 5B68     		ldr	r3, [r3, #4]
 508 0064 9847     		blx	r3
 509              	.LVL67:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 32


 510              	.L30:
 511 0066 38BD     		pop	{r3, r4, r5, pc}
 512              	.L40:
 513              		.align	2
 514              	.L39:
 515 0068 00000000 		.word	SO_SPEED_signal
 516 006c 00000000 		.word	SO_ENGINE_signal
 517              	.LBE83:
 518              	.LBE82:
 519              		.cfi_endproc
 520              	.LFE182:
 521              		.size	GASPEDAL_setEngine_run, .-GASPEDAL_setEngine_run
 522              		.section	.text.GASPEDAL_setBrakeLight_run,"ax",%progbits
 523              		.align	2
 524              		.global	GASPEDAL_setBrakeLight_run
 525              		.thumb
 526              		.thumb_func
 527              		.type	GASPEDAL_setBrakeLight_run, %function
 528              	GASPEDAL_setBrakeLight_run:
 529              	.LFB183:
 147:asw/swc_gaspedal.c ****     // Driver out of signal is LED Driver -> push out data to peripheral
 148:asw/swc_gaspedal.c ****     if (RTE_SC_ENGINE_pushPort(&SO_ENGINE_signal) != RC_SUCCESS){
 149:asw/swc_gaspedal.c ****         // Further error handling 
 150:asw/swc_gaspedal.c ****     }
 151:asw/swc_gaspedal.c ****     
 152:asw/swc_gaspedal.c ****     /* USER CODE END GASPEDAL_setEngine_run */
 153:asw/swc_gaspedal.c **** }
 154:asw/swc_gaspedal.c **** 
 155:asw/swc_gaspedal.c **** /*
 156:asw/swc_gaspedal.c ****  * component: swc_GasPedal
 157:asw/swc_gaspedal.c ****  * cycletime: 0
 158:asw/swc_gaspedal.c ****  * description: Runnable
 159:asw/swc_gaspedal.c ****  * events: ev_speed_onData
 160:asw/swc_gaspedal.c ****  * name: GASPEDAL_setBrakeLight_run
 161:asw/swc_gaspedal.c ****  * shortname: setBrakeLight
 162:asw/swc_gaspedal.c ****  * signalIN: so_speed
 163:asw/swc_gaspedal.c ****  * signalOUT: so_breakLight
 164:asw/swc_gaspedal.c ****  * task: tsk_io
 165:asw/swc_gaspedal.c ****  */
 166:asw/swc_gaspedal.c **** void GASPEDAL_setBrakeLight_run(RTE_event ev){
 530              		.loc 1 166 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              	.LVL68:
 167:asw/swc_gaspedal.c **** 	
 168:asw/swc_gaspedal.c **** 	/* USER CODE START GASPEDAL_setBrakeLight_run */
 169:asw/swc_gaspedal.c ****     
 170:asw/swc_gaspedal.c ****     if (ev & ev_speed_onData){
 535              		.loc 1 170 0
 536 0000 10F0100F 		tst	r0, #16
 537 0004 33D0     		beq	.L51
 166:asw/swc_gaspedal.c **** 	
 538              		.loc 1 166 0
 539 0006 38B5     		push	{r3, r4, r5, lr}
 540              		.cfi_def_cfa_offset 16
 541              		.cfi_offset 3, -16
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 33


 542              		.cfi_offset 4, -12
 543              		.cfi_offset 5, -8
 544              		.cfi_offset 14, -4
 545              	.LBB84:
 171:asw/swc_gaspedal.c ****         
 172:asw/swc_gaspedal.c ****         
 173:asw/swc_gaspedal.c ****         SC_SPEED_data_t speedSignal = SC_SPEED_INIT_DATA;
 546              		.loc 1 173 0
 547 0008 4FF00003 		mov	r3, #0
 548              	.LVL69:
 549              	.LBB85:
 550              	.LBB86:
 186:.\bsw\rte/sc_speed.h **** }
 551              		.loc 3 186 0
 552 000c 184A     		ldr	r2, .L52
 553 000e 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 554              	.LVL70:
 555              	.LBE86:
 556              	.LBE85:
 174:asw/swc_gaspedal.c ****     
 175:asw/swc_gaspedal.c ****         // Get a valid speed signal
 176:asw/swc_gaspedal.c ****         if(RTE_SC_SPEED_getStatus(&SO_SPEED_signal) == RTE_SIGNALSTATUS_VALID){
 557              		.loc 1 176 0
 558 0010 022A     		cmp	r2, #2
 559 0012 01D1     		bne	.L43
 560              	.LVL71:
 561 0014 164B     		ldr	r3, .L52
 562 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 563              	.LVL72:
 564              	.L43:
 177:asw/swc_gaspedal.c ****             speedSignal = RTE_SC_SPEED_get(&SO_SPEED_signal);
 178:asw/swc_gaspedal.c ****         }
 179:asw/swc_gaspedal.c ****         SC_BREAKLIGHT_data_t brakeLight = SC_BREAKLIGHT_INIT_DATA;
 565              		.loc 1 179 0
 566 0018 4FF00001 		mov	r1, #0
 567              	.LVL73:
 180:asw/swc_gaspedal.c ****         
 181:asw/swc_gaspedal.c ****         if(speedSignal.speedValue == 0){
 568              		.loc 1 181 0
 569 001c DBB2     		uxtb	r3, r3
 570              	.LVL74:
 571 001e 0BB9     		cbnz	r3, .L44
 182:asw/swc_gaspedal.c ****             brakeLight.breakLightStatus = TRUE;
 572              		.loc 1 182 0
 573 0020 4FF00101 		mov	r1, #1
 574              	.L44:
 575              	.LVL75:
 576              	.LBB87:
 577              	.LBB88:
 578              		.file 5 ".\\bsw\\rte/sc_breaklight.h"
   1:.\bsw\rte/sc_breaklight.h **** 
   2:.\bsw\rte/sc_breaklight.h **** 
   3:.\bsw\rte/sc_breaklight.h **** /**
   4:.\bsw\rte/sc_breaklight.h ****  *  file    SC_BREAKLIGHT_signal.h
   5:.\bsw\rte/sc_breaklight.h ****  *
   6:.\bsw\rte/sc_breaklight.h ****  *  brief   signal base class for signal sc_breaklight
   7:.\bsw\rte/sc_breaklight.h ****  *
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 34


   8:.\bsw\rte/sc_breaklight.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\bsw\rte/sc_breaklight.h ****  *
  10:.\bsw\rte/sc_breaklight.h ****  * description: Break Light signal class
  11:.\bsw\rte/sc_breaklight.h ****  * name: sc_breakLight
  12:.\bsw\rte/sc_breaklight.h ****  * shortname: breakLight
  13:.\bsw\rte/sc_breaklight.h ****  *
  14:.\bsw\rte/sc_breaklight.h ****  */
  15:.\bsw\rte/sc_breaklight.h **** 
  16:.\bsw\rte/sc_breaklight.h **** 
  17:.\bsw\rte/sc_breaklight.h **** 
  18:.\bsw\rte/sc_breaklight.h **** #ifndef SC_BREAKLIGHT_SIGNAL_H_INCLUDED
  19:.\bsw\rte/sc_breaklight.h **** #define SC_BREAKLIGHT_SIGNAL_H_INCLUDED
  20:.\bsw\rte/sc_breaklight.h **** 
  21:.\bsw\rte/sc_breaklight.h **** /*================================================[ public includes  ]=============================
  22:.\bsw\rte/sc_breaklight.h **** #include "global.h"
  23:.\bsw\rte/sc_breaklight.h **** #include "project.h"
  24:.\bsw\rte/sc_breaklight.h **** #include "rte.h"
  25:.\bsw\rte/sc_breaklight.h **** #include "rte_types.h"
  26:.\bsw\rte/sc_breaklight.h **** 
  27:.\bsw\rte/sc_breaklight.h **** #include "sc_breaklight_type.h"
  28:.\bsw\rte/sc_breaklight.h **** 
  29:.\bsw\rte/sc_breaklight.h **** 
  30:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
  31:.\bsw\rte/sc_breaklight.h **** /* The driver API block																						*/
  32:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
  33:.\bsw\rte/sc_breaklight.h ****                                                                                                    
  34:.\bsw\rte/sc_breaklight.h **** /**
  35:.\bsw\rte/sc_breaklight.h ****  *  Definition of function types for driver interfaces.
  36:.\bsw\rte/sc_breaklight.h ****  *  I-Port
  37:.\bsw\rte/sc_breaklight.h ****  */
  38:.\bsw\rte/sc_breaklight.h **** typedef RC_t (*SC_BREAKLIGHT_driverIn_t)(SC_BREAKLIGHT_data_t * const);
  39:.\bsw\rte/sc_breaklight.h **** 
  40:.\bsw\rte/sc_breaklight.h **** /**
  41:.\bsw\rte/sc_breaklight.h ****  *  Definition of function types for driver interfaces.
  42:.\bsw\rte/sc_breaklight.h ****  *  O-Port
  43:.\bsw\rte/sc_breaklight.h ****  */
  44:.\bsw\rte/sc_breaklight.h **** typedef RC_t (*SC_BREAKLIGHT_driverOut_t)( const SC_BREAKLIGHT_data_t * const);
  45:.\bsw\rte/sc_breaklight.h **** 
  46:.\bsw\rte/sc_breaklight.h **** 
  47:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
  48:.\bsw\rte/sc_breaklight.h **** /* The signal configuration API block																				*/
  49:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
  50:.\bsw\rte/sc_breaklight.h **** 
  51:.\bsw\rte/sc_breaklight.h **** /**
  52:.\bsw\rte/sc_breaklight.h ****  * Instances of the struct SC_BREAKLIGHT_cfg_t represent the signal object configuration.
  53:.\bsw\rte/sc_breaklight.h ****  */
  54:.\bsw\rte/sc_breaklight.h **** struct SC_BREAKLIGHT_cfg_s
  55:.\bsw\rte/sc_breaklight.h **** {
  56:.\bsw\rte/sc_breaklight.h ****     /**
  57:.\bsw\rte/sc_breaklight.h ****      * Function pointer to the input driver
  58:.\bsw\rte/sc_breaklight.h ****      */
  59:.\bsw\rte/sc_breaklight.h ****     SC_BREAKLIGHT_driverIn_t const inDriver;
  60:.\bsw\rte/sc_breaklight.h **** 
  61:.\bsw\rte/sc_breaklight.h ****     /**
  62:.\bsw\rte/sc_breaklight.h ****      * Function pointer to the output driver table
  63:.\bsw\rte/sc_breaklight.h ****      */
  64:.\bsw\rte/sc_breaklight.h ****    SC_BREAKLIGHT_driverOut_t const outDriver;
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 35


  65:.\bsw\rte/sc_breaklight.h ****    
  66:.\bsw\rte/sc_breaklight.h ****     /**
  67:.\bsw\rte/sc_breaklight.h ****      * Event onUpdate
  68:.\bsw\rte/sc_breaklight.h ****      */
  69:.\bsw\rte/sc_breaklight.h ****     EventMaskType const evOnUpdate;
  70:.\bsw\rte/sc_breaklight.h ****     
  71:.\bsw\rte/sc_breaklight.h ****     
  72:.\bsw\rte/sc_breaklight.h ****     /**
  73:.\bsw\rte/sc_breaklight.h ****      * Event onError
  74:.\bsw\rte/sc_breaklight.h ****      */
  75:.\bsw\rte/sc_breaklight.h ****     EventMaskType const evOnError;
  76:.\bsw\rte/sc_breaklight.h ****     
  77:.\bsw\rte/sc_breaklight.h ****     /**
  78:.\bsw\rte/sc_breaklight.h ****      * Task Count onUpdate
  79:.\bsw\rte/sc_breaklight.h ****      */
  80:.\bsw\rte/sc_breaklight.h ****     size_t const onUpdateTaskCount;
  81:.\bsw\rte/sc_breaklight.h **** 
  82:.\bsw\rte/sc_breaklight.h ****     /**
  83:.\bsw\rte/sc_breaklight.h ****      * Task List onUpdate
  84:.\bsw\rte/sc_breaklight.h ****      */
  85:.\bsw\rte/sc_breaklight.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\bsw\rte/sc_breaklight.h ****     
  87:.\bsw\rte/sc_breaklight.h ****     /**
  88:.\bsw\rte/sc_breaklight.h ****      * Task Count onError
  89:.\bsw\rte/sc_breaklight.h ****      */
  90:.\bsw\rte/sc_breaklight.h ****     size_t const onErrorTaskCount;
  91:.\bsw\rte/sc_breaklight.h **** 
  92:.\bsw\rte/sc_breaklight.h ****     /**
  93:.\bsw\rte/sc_breaklight.h ****      * Task List onError
  94:.\bsw\rte/sc_breaklight.h ****      */
  95:.\bsw\rte/sc_breaklight.h ****     TaskTypeArray* const onErrorTasks;
  96:.\bsw\rte/sc_breaklight.h **** 	
  97:.\bsw\rte/sc_breaklight.h **** 	
  98:.\bsw\rte/sc_breaklight.h **** 	/**
  99:.\bsw\rte/sc_breaklight.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\bsw\rte/sc_breaklight.h **** 	 */
 101:.\bsw\rte/sc_breaklight.h **** 	 boolean_t const resourceActive;
 102:.\bsw\rte/sc_breaklight.h **** 	 
 103:.\bsw\rte/sc_breaklight.h **** 	/**
 104:.\bsw\rte/sc_breaklight.h **** 	 * Ressourse 
 105:.\bsw\rte/sc_breaklight.h **** 	 */
 106:.\bsw\rte/sc_breaklight.h **** 	 ResourceType const resource;
 107:.\bsw\rte/sc_breaklight.h **** 
 108:.\bsw\rte/sc_breaklight.h **** };                                                                                                 
 109:.\bsw\rte/sc_breaklight.h **** typedef const struct SC_BREAKLIGHT_cfg_s SC_BREAKLIGHT_cfg_t;
 110:.\bsw\rte/sc_breaklight.h ****                               
 111:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 112:.\bsw\rte/sc_breaklight.h **** /* The data interface block																							*/
 113:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 114:.\bsw\rte/sc_breaklight.h **** 
 115:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 116:.\bsw\rte/sc_breaklight.h **** 							  
 117:.\bsw\rte/sc_breaklight.h **** /**
 118:.\bsw\rte/sc_breaklight.h ****  * Instances of the struct SC_BREAKLIGHT_t represent the signal objects.
 119:.\bsw\rte/sc_breaklight.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\bsw\rte/sc_breaklight.h ****  */
 121:.\bsw\rte/sc_breaklight.h **** struct SC_BREAKLIGHT_s
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 36


 122:.\bsw\rte/sc_breaklight.h **** {                                                                                                  
 123:.\bsw\rte/sc_breaklight.h **** 
 124:.\bsw\rte/sc_breaklight.h **** 	/**
 125:.\bsw\rte/sc_breaklight.h **** 	 * Data buffer for the application value
 126:.\bsw\rte/sc_breaklight.h **** 	 */
 127:.\bsw\rte/sc_breaklight.h ****     SC_BREAKLIGHT_data_t value;
 128:.\bsw\rte/sc_breaklight.h **** 
 129:.\bsw\rte/sc_breaklight.h ****     /**
 130:.\bsw\rte/sc_breaklight.h ****      * Current signal status
 131:.\bsw\rte/sc_breaklight.h ****      */
 132:.\bsw\rte/sc_breaklight.h ****     RTE_signalStatus_t status;
 133:.\bsw\rte/sc_breaklight.h **** 
 134:.\bsw\rte/sc_breaklight.h ****     /**
 135:.\bsw\rte/sc_breaklight.h ****      * Current age of the signal (in calling cycles)
 136:.\bsw\rte/sc_breaklight.h ****      */
 137:.\bsw\rte/sc_breaklight.h ****     uint32_t age;
 138:.\bsw\rte/sc_breaklight.h **** 
 139:.\bsw\rte/sc_breaklight.h ****     /**
 140:.\bsw\rte/sc_breaklight.h ****      * Pointer to the signal configuration
 141:.\bsw\rte/sc_breaklight.h ****      */
 142:.\bsw\rte/sc_breaklight.h **** 	const SC_BREAKLIGHT_cfg_t * const    pSigCfg;
 143:.\bsw\rte/sc_breaklight.h **** 
 144:.\bsw\rte/sc_breaklight.h **** };                                                                                                 
 145:.\bsw\rte/sc_breaklight.h **** typedef struct SC_BREAKLIGHT_s SC_BREAKLIGHT_t;
 146:.\bsw\rte/sc_breaklight.h **** 
 147:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 148:.\bsw\rte/sc_breaklight.h **** /* Signal initialisation   																							*/
 149:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 150:.\bsw\rte/sc_breaklight.h **** 
 151:.\bsw\rte/sc_breaklight.h **** /**
 152:.\bsw\rte/sc_breaklight.h ****  * Initializes a signal instance with a passed init value.
 153:.\bsw\rte/sc_breaklight.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\bsw\rte/sc_breaklight.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\bsw\rte/sc_breaklight.h ****  *
 156:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object which will be initialised
 157:.\bsw\rte/sc_breaklight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\bsw\rte/sc_breaklight.h ****  *
 159:.\bsw\rte/sc_breaklight.h ****  **/
 160:.\bsw\rte/sc_breaklight.h **** inline RC_t RTE_SC_BREAKLIGHT_init( SC_BREAKLIGHT_t * const signal )
 161:.\bsw\rte/sc_breaklight.h **** {                                                                                                  
 162:.\bsw\rte/sc_breaklight.h **** 
 163:.\bsw\rte/sc_breaklight.h ****    RC_t ret = RC_SUCCESS;
 164:.\bsw\rte/sc_breaklight.h **** 
 165:.\bsw\rte/sc_breaklight.h ****    //Set value and raw value
 166:.\bsw\rte/sc_breaklight.h ****    signal->value  = SC_BREAKLIGHT_INIT_DATA;
 167:.\bsw\rte/sc_breaklight.h ****    signal->age    = 0;
 168:.\bsw\rte/sc_breaklight.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\bsw\rte/sc_breaklight.h **** 
 170:.\bsw\rte/sc_breaklight.h ****    return ret;
 171:.\bsw\rte/sc_breaklight.h **** }
 172:.\bsw\rte/sc_breaklight.h **** 
 173:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 174:.\bsw\rte/sc_breaklight.h **** /* Status and timeout control																						*/
 175:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 176:.\bsw\rte/sc_breaklight.h **** 
 177:.\bsw\rte/sc_breaklight.h **** /**
 178:.\bsw\rte/sc_breaklight.h ****  *  Returns the current signal status of the passed signal instance.
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 37


 179:.\bsw\rte/sc_breaklight.h ****  *
 180:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 181:.\bsw\rte/sc_breaklight.h ****  * @return  sig_status_t: The current signal status
 182:.\bsw\rte/sc_breaklight.h ****  *
 183:.\bsw\rte/sc_breaklight.h ****  **/
 184:.\bsw\rte/sc_breaklight.h **** inline RTE_signalStatus_t RTE_SC_BREAKLIGHT_getStatus( const SC_BREAKLIGHT_t * const signal )
 185:.\bsw\rte/sc_breaklight.h **** {
 186:.\bsw\rte/sc_breaklight.h ****    return signal->status;
 187:.\bsw\rte/sc_breaklight.h **** }
 188:.\bsw\rte/sc_breaklight.h **** 
 189:.\bsw\rte/sc_breaklight.h **** 
 190:.\bsw\rte/sc_breaklight.h **** /**
 191:.\bsw\rte/sc_breaklight.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\bsw\rte/sc_breaklight.h ****  *
 193:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 194:.\bsw\rte/sc_breaklight.h ****  * @param  const sig_status_t status: New signal status
 195:.\bsw\rte/sc_breaklight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\bsw\rte/sc_breaklight.h ****  *
 197:.\bsw\rte/sc_breaklight.h ****  */
 198:.\bsw\rte/sc_breaklight.h **** inline RC_t RTE_SC_BREAKLIGHT_setStatus( SC_BREAKLIGHT_t * const signal, const RTE_signalStatus_t s
 199:.\bsw\rte/sc_breaklight.h **** {
 200:.\bsw\rte/sc_breaklight.h ****    signal->status = status;
 201:.\bsw\rte/sc_breaklight.h ****    size_t taskNum=0;
 202:.\bsw\rte/sc_breaklight.h ****    
 203:.\bsw\rte/sc_breaklight.h ****    //Fire error events in case of invalid state
 204:.\bsw\rte/sc_breaklight.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\bsw\rte/sc_breaklight.h ****    {
 206:.\bsw\rte/sc_breaklight.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\bsw\rte/sc_breaklight.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\bsw\rte/sc_breaklight.h **** 
 209:.\bsw\rte/sc_breaklight.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\bsw\rte/sc_breaklight.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\bsw\rte/sc_breaklight.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\bsw\rte/sc_breaklight.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\bsw\rte/sc_breaklight.h **** 			}
 214:.\bsw\rte/sc_breaklight.h **** 		}
 215:.\bsw\rte/sc_breaklight.h ****    }
 216:.\bsw\rte/sc_breaklight.h ****    
 217:.\bsw\rte/sc_breaklight.h ****    return RC_SUCCESS;
 218:.\bsw\rte/sc_breaklight.h **** }
 219:.\bsw\rte/sc_breaklight.h **** 
 220:.\bsw\rte/sc_breaklight.h **** 
 221:.\bsw\rte/sc_breaklight.h **** /**
 222:.\bsw\rte/sc_breaklight.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\bsw\rte/sc_breaklight.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\bsw\rte/sc_breaklight.h ****  *
 225:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 226:.\bsw\rte/sc_breaklight.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\bsw\rte/sc_breaklight.h ****  */
 228:.\bsw\rte/sc_breaklight.h **** inline uint32_t RTE_SC_BREAKLIGHT_getAge( const SC_BREAKLIGHT_t * const signal )
 229:.\bsw\rte/sc_breaklight.h **** {
 230:.\bsw\rte/sc_breaklight.h ****    return signal->age;
 231:.\bsw\rte/sc_breaklight.h **** }
 232:.\bsw\rte/sc_breaklight.h **** 
 233:.\bsw\rte/sc_breaklight.h **** /**
 234:.\bsw\rte/sc_breaklight.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 38


 236:.\bsw\rte/sc_breaklight.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\bsw\rte/sc_breaklight.h ****  * @return void
 238:.\bsw\rte/sc_breaklight.h ****  */
 239:.\bsw\rte/sc_breaklight.h **** inline void RTE_SC_BREAKLIGHT_incAge(  SC_BREAKLIGHT_t * const signal , uint32_t increment)
 240:.\bsw\rte/sc_breaklight.h **** {
 241:.\bsw\rte/sc_breaklight.h **** 	   //Hack....
 242:.\bsw\rte/sc_breaklight.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\bsw\rte/sc_breaklight.h **** 	   {
 244:.\bsw\rte/sc_breaklight.h **** 	      signal->age += increment;
 245:.\bsw\rte/sc_breaklight.h **** 	   }
 246:.\bsw\rte/sc_breaklight.h **** }
 247:.\bsw\rte/sc_breaklight.h **** 
 248:.\bsw\rte/sc_breaklight.h **** 
 249:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 250:.\bsw\rte/sc_breaklight.h **** /* Application Data read/write Interface																			*/
 251:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 252:.\bsw\rte/sc_breaklight.h **** 
 253:.\bsw\rte/sc_breaklight.h **** /**
 254:.\bsw\rte/sc_breaklight.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\bsw\rte/sc_breaklight.h ****  * Careful: This is not threadsafe!!!
 256:.\bsw\rte/sc_breaklight.h ****  *
 257:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 258:.\bsw\rte/sc_breaklight.h ****  * @return sc_breaklight_data_t*: pointer to the current value of the application data buffer
 259:.\bsw\rte/sc_breaklight.h ****  *
 260:.\bsw\rte/sc_breaklight.h ****  **/
 261:.\bsw\rte/sc_breaklight.h **** inline SC_BREAKLIGHT_data_t* RTE_SC_BREAKLIGHT_getPtr( SC_BREAKLIGHT_t * const signal )
 262:.\bsw\rte/sc_breaklight.h **** {               
 263:.\bsw\rte/sc_breaklight.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\bsw\rte/sc_breaklight.h ****    return &(signal->value);                                                                        
 265:.\bsw\rte/sc_breaklight.h **** }
 266:.\bsw\rte/sc_breaklight.h **** 
 267:.\bsw\rte/sc_breaklight.h **** /**
 268:.\bsw\rte/sc_breaklight.h ****  * Returns the current application value of the passed signal instance.
 269:.\bsw\rte/sc_breaklight.h ****  *
 270:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 271:.\bsw\rte/sc_breaklight.h ****  * @return sc_breaklight_data_t: current value of the application data buffer
 272:.\bsw\rte/sc_breaklight.h ****  *
 273:.\bsw\rte/sc_breaklight.h ****  **/
 274:.\bsw\rte/sc_breaklight.h **** inline SC_BREAKLIGHT_data_t RTE_SC_BREAKLIGHT_get( const SC_BREAKLIGHT_t * const signal )
 275:.\bsw\rte/sc_breaklight.h **** {               
 276:.\bsw\rte/sc_breaklight.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\bsw\rte/sc_breaklight.h ****    return signal->value;                                                                           
 278:.\bsw\rte/sc_breaklight.h **** }                                                                                                  
 279:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 280:.\bsw\rte/sc_breaklight.h **** /**
 281:.\bsw\rte/sc_breaklight.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\bsw\rte/sc_breaklight.h ****  *
 283:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 284:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\bsw\rte/sc_breaklight.h ****  * @return RC_SUCCESS
 286:.\bsw\rte/sc_breaklight.h ****  *
 287:.\bsw\rte/sc_breaklight.h ****  **/
 288:.\bsw\rte/sc_breaklight.h **** inline RC_t RTE_SC_BREAKLIGHT_getThreadSafe( const SC_BREAKLIGHT_t * const signal, SC_BREAKLIGHT_da
 289:.\bsw\rte/sc_breaklight.h **** {    
 290:.\bsw\rte/sc_breaklight.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\bsw\rte/sc_breaklight.h ****    *data = signal->value;
 292:.\bsw\rte/sc_breaklight.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 39


 293:.\bsw\rte/sc_breaklight.h **** 
 294:.\bsw\rte/sc_breaklight.h ****    return RC_SUCCESS;                                                                   
 295:.\bsw\rte/sc_breaklight.h ****    
 296:.\bsw\rte/sc_breaklight.h **** }                                                                                                  
 297:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 298:.\bsw\rte/sc_breaklight.h **** /**
 299:.\bsw\rte/sc_breaklight.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\bsw\rte/sc_breaklight.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\bsw\rte/sc_breaklight.h ****  * signal specific scaling function.
 302:.\bsw\rte/sc_breaklight.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\bsw\rte/sc_breaklight.h ****  *
 304:.\bsw\rte/sc_breaklight.h ****  * @param  SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 305:.\bsw\rte/sc_breaklight.h ****  * @param  sc_breaklight_data_t const value: value for the application data buffer
 306:.\bsw\rte/sc_breaklight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\bsw\rte/sc_breaklight.h ****  *
 308:.\bsw\rte/sc_breaklight.h ****  **/
 309:.\bsw\rte/sc_breaklight.h **** inline RC_t RTE_SC_BREAKLIGHT_set(SC_BREAKLIGHT_t * const signal, const SC_BREAKLIGHT_data_t value 
 310:.\bsw\rte/sc_breaklight.h **** {
 311:.\bsw\rte/sc_breaklight.h **** 
 312:.\bsw\rte/sc_breaklight.h ****    RC_t ret = RC_SUCCESS;
 313:.\bsw\rte/sc_breaklight.h ****    size_t taskNum=0;
 314:.\bsw\rte/sc_breaklight.h **** 
 315:.\bsw\rte/sc_breaklight.h **** 
 316:.\bsw\rte/sc_breaklight.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 579              		.loc 5 316 0
 580 0024 134B     		ldr	r3, .L52+4
 581 0026 9A68     		ldr	r2, [r3, #8]
 582              	.LVL76:
 317:.\bsw\rte/sc_breaklight.h ****    signal->value  = value;
 583              		.loc 5 317 0
 584 0028 1970     		strb	r1, [r3]
 318:.\bsw\rte/sc_breaklight.h ****    signal->age    = 0;
 585              		.loc 5 318 0
 586 002a 0021     		movs	r1, #0
 587              	.LVL77:
 588 002c 5960     		str	r1, [r3, #4]
 319:.\bsw\rte/sc_breaklight.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 589              		.loc 5 319 0
 590 002e 0221     		movs	r1, #2
 591 0030 5970     		strb	r1, [r3, #1]
 320:.\bsw\rte/sc_breaklight.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\bsw\rte/sc_breaklight.h **** 
 322:.\bsw\rte/sc_breaklight.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\bsw\rte/sc_breaklight.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 592              		.loc 5 323 0
 593 0032 5569     		ldr	r5, [r2, #20]
 594              	.LVL78:
 324:.\bsw\rte/sc_breaklight.h **** 
 325:.\bsw\rte/sc_breaklight.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 595              		.loc 5 325 0
 596 0034 9368     		ldr	r3, [r2, #8]
 597 0036 73B1     		cbz	r3, .L45
 598 0038 3DB9     		cbnz	r5, .L49
 599 003a 0CE0     		b	.L45
 600              	.LVL79:
 601              	.L47:
 602              	.LBB89:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 40


 326:.\bsw\rte/sc_breaklight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\bsw\rte/sc_breaklight.h **** 		  
 328:.\bsw\rte/sc_breaklight.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\bsw\rte/sc_breaklight.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 603              		.loc 5 329 0
 604 003c 9968     		ldr	r1, [r3, #8]
 605 003e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 606 0042 FFF7FEFF 		bl	EE_oo_SetEvent
 607              	.LVL80:
 608              	.LBE89:
 326:.\bsw\rte/sc_breaklight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 609              		.loc 5 326 0
 610 0046 0134     		adds	r4, r4, #1
 611              	.LVL81:
 612 0048 00E0     		b	.L46
 613              	.LVL82:
 614              	.L49:
 325:.\bsw\rte/sc_breaklight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 615              		.loc 5 325 0
 616 004a 0024     		movs	r4, #0
 617              	.LVL83:
 618              	.L46:
 326:.\bsw\rte/sc_breaklight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 619              		.loc 5 326 0
 620 004c 094B     		ldr	r3, .L52+4
 621 004e 9B68     		ldr	r3, [r3, #8]
 622 0050 1A69     		ldr	r2, [r3, #16]
 623 0052 9442     		cmp	r4, r2
 624 0054 F2D3     		bcc	.L47
 625              	.LVL84:
 626              	.L45:
 627              	.LBE88:
 628              	.LBE87:
 183:asw/swc_gaspedal.c ****         }
 184:asw/swc_gaspedal.c ****         else{
 185:asw/swc_gaspedal.c ****             brakeLight.breakLightStatus = FALSE;
 186:asw/swc_gaspedal.c ****         }
 187:asw/swc_gaspedal.c ****         
 188:asw/swc_gaspedal.c ****         RTE_SC_BREAKLIGHT_set(&SO_BREAKLIGHT_signal, brakeLight);
 189:asw/swc_gaspedal.c ****         
 190:asw/swc_gaspedal.c ****         WD_Alive(WD_RUN_SETBRAKELIGHT); 
 629              		.loc 1 190 0
 630 0056 0320     		movs	r0, #3
 631 0058 FFF7FEFF 		bl	WD_Alive
 632              	.LVL85:
 633              	.LBB90:
 634              	.LBB91:
 330:.\bsw\rte/sc_breaklight.h ****       }
 331:.\bsw\rte/sc_breaklight.h ****    }
 332:.\bsw\rte/sc_breaklight.h **** 
 333:.\bsw\rte/sc_breaklight.h ****    return ret;
 334:.\bsw\rte/sc_breaklight.h **** }                                                                                                  
 335:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 336:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 337:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
 338:.\bsw\rte/sc_breaklight.h **** /* Call functions to the connected drivers																			*/
 339:.\bsw\rte/sc_breaklight.h **** /**************************************************************************************************
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 41


 340:.\bsw\rte/sc_breaklight.h **** 
 341:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 342:.\bsw\rte/sc_breaklight.h **** /**
 343:.\bsw\rte/sc_breaklight.h ****  *  Calls the connected driver interface to get a new value.
 344:.\bsw\rte/sc_breaklight.h ****  *
 345:.\bsw\rte/sc_breaklight.h ****  * @param SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 346:.\bsw\rte/sc_breaklight.h ****  * @return  RC_t: Return value of the driver call
 347:.\bsw\rte/sc_breaklight.h ****  *
 348:.\bsw\rte/sc_breaklight.h ****  */
 349:.\bsw\rte/sc_breaklight.h **** inline RC_t RTE_SC_BREAKLIGHT_pullPort( SC_BREAKLIGHT_t * const signal )
 350:.\bsw\rte/sc_breaklight.h **** {                                                                                                  
 351:.\bsw\rte/sc_breaklight.h ****    RC_t ret = RC_SUCCESS;
 352:.\bsw\rte/sc_breaklight.h **** 
 353:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 354:.\bsw\rte/sc_breaklight.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\bsw\rte/sc_breaklight.h ****    {
 356:.\bsw\rte/sc_breaklight.h **** 	  SC_BREAKLIGHT_data_t value = signal->value;
 357:.\bsw\rte/sc_breaklight.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 359:.\bsw\rte/sc_breaklight.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\bsw\rte/sc_breaklight.h ****       {
 361:.\bsw\rte/sc_breaklight.h ****     	  //Critical Section
 362:.\bsw\rte/sc_breaklight.h ****     	  RTE_SC_BREAKLIGHT_set(signal, value);
 363:.\bsw\rte/sc_breaklight.h ****       }
 364:.\bsw\rte/sc_breaklight.h ****       else
 365:.\bsw\rte/sc_breaklight.h ****       {
 366:.\bsw\rte/sc_breaklight.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\bsw\rte/sc_breaklight.h **** 		  RTE_SC_BREAKLIGHT_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\bsw\rte/sc_breaklight.h ****       }
 369:.\bsw\rte/sc_breaklight.h **** 
 370:.\bsw\rte/sc_breaklight.h ****    }                                                                                               
 371:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 372:.\bsw\rte/sc_breaklight.h ****    return ret;                                                                                     
 373:.\bsw\rte/sc_breaklight.h **** }                                                                                                  
 374:.\bsw\rte/sc_breaklight.h ****                                                                                                    
 375:.\bsw\rte/sc_breaklight.h **** /**
 376:.\bsw\rte/sc_breaklight.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\bsw\rte/sc_breaklight.h ****  *
 378:.\bsw\rte/sc_breaklight.h ****  * @param SC_BREAKLIGHT_t * const signal: Pointer to the signal object
 379:.\bsw\rte/sc_breaklight.h ****  * @return  RC_t: Return value of the driver call
 380:.\bsw\rte/sc_breaklight.h ****  *
 381:.\bsw\rte/sc_breaklight.h ****  **/
 382:.\bsw\rte/sc_breaklight.h **** inline RC_t RTE_SC_BREAKLIGHT_pushPort( const SC_BREAKLIGHT_t * const signal )
 383:.\bsw\rte/sc_breaklight.h **** {                                                                                                  
 384:.\bsw\rte/sc_breaklight.h ****    RC_t ret = RC_ERROR;
 385:.\bsw\rte/sc_breaklight.h **** 
 386:.\bsw\rte/sc_breaklight.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 635              		.loc 5 386 0
 636 005c 054B     		ldr	r3, .L52+4
 637 005e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 638 0060 022B     		cmp	r3, #2
 639 0062 03D1     		bne	.L41
 387:.\bsw\rte/sc_breaklight.h ****    {
 388:.\bsw\rte/sc_breaklight.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 640              		.loc 5 388 0
 641 0064 0348     		ldr	r0, .L52+4
 642 0066 8368     		ldr	r3, [r0, #8]
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 42


 643 0068 5B68     		ldr	r3, [r3, #4]
 644 006a 9847     		blx	r3
 645              	.LVL86:
 646              	.L41:
 647 006c 38BD     		pop	{r3, r4, r5, pc}
 648              	.LVL87:
 649              	.L51:
 650              		.cfi_def_cfa_offset 0
 651              		.cfi_restore 3
 652              		.cfi_restore 4
 653              		.cfi_restore 5
 654              		.cfi_restore 14
 655 006e 7047     		bx	lr
 656              	.L53:
 657              		.align	2
 658              	.L52:
 659 0070 00000000 		.word	SO_SPEED_signal
 660 0074 00000000 		.word	SO_BREAKLIGHT_signal
 661              	.LBE91:
 662              	.LBE90:
 663              	.LBE84:
 664              		.cfi_endproc
 665              	.LFE183:
 666              		.size	GASPEDAL_setBrakeLight_run, .-GASPEDAL_setBrakeLight_run
 667              		.section	.text.GASPEDAL_HMI_run,"ax",%progbits
 668              		.align	2
 669              		.global	GASPEDAL_HMI_run
 670              		.thumb
 671              		.thumb_func
 672              		.type	GASPEDAL_HMI_run, %function
 673              	GASPEDAL_HMI_run:
 674              	.LFB184:
 191:asw/swc_gaspedal.c ****         if (RTE_SC_BREAKLIGHT_pushPort(&SO_BREAKLIGHT_signal) != RC_SUCCESS){
 192:asw/swc_gaspedal.c ****             // Further error handling
 193:asw/swc_gaspedal.c ****         }
 194:asw/swc_gaspedal.c ****     }
 195:asw/swc_gaspedal.c ****     
 196:asw/swc_gaspedal.c ****     /* USER CODE END GASPEDAL_setBrakeLight_run */
 197:asw/swc_gaspedal.c **** }
 198:asw/swc_gaspedal.c **** 
 199:asw/swc_gaspedal.c **** /*
 200:asw/swc_gaspedal.c ****  * component: swc_GasPedal
 201:asw/swc_gaspedal.c ****  * cycletime: 0
 202:asw/swc_gaspedal.c ****  * description: Output touch screen runnable
 203:asw/swc_gaspedal.c ****  * events: ev_screen_onData
 204:asw/swc_gaspedal.c ****  * name: GASPEDAL_HMI_run
 205:asw/swc_gaspedal.c ****  * shortname: HMI
 206:asw/swc_gaspedal.c ****  * signalIN: so_screen
 207:asw/swc_gaspedal.c ****  * signalOUT: 
 208:asw/swc_gaspedal.c ****  * task: tsk_tft
 209:asw/swc_gaspedal.c ****  */
 210:asw/swc_gaspedal.c **** void GASPEDAL_HMI_run(RTE_event ev){
 675              		.loc 1 210 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              	.LVL88:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 43


 680 0000 08B5     		push	{r3, lr}
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 3, -8
 683              		.cfi_offset 14, -4
 211:asw/swc_gaspedal.c **** 	
 212:asw/swc_gaspedal.c **** 	/* USER CODE START GASPEDAL_HMI_run */
 213:asw/swc_gaspedal.c ****     if (ev_screen_onData & ev)
 214:asw/swc_gaspedal.c ****     {
 215:asw/swc_gaspedal.c ****         // To do list
 216:asw/swc_gaspedal.c ****     }
 217:asw/swc_gaspedal.c ****     WD_Alive(WD_RUN_HMI); 
 684              		.loc 1 217 0
 685 0002 0420     		movs	r0, #4
 686              	.LVL89:
 687 0004 FFF7FEFF 		bl	WD_Alive
 688              	.LVL90:
 689 0008 08BD     		pop	{r3, pc}
 690              		.cfi_endproc
 691              	.LFE184:
 692              		.size	GASPEDAL_HMI_run, .-GASPEDAL_HMI_run
 693 000a 00BF     		.text
 694              	.Letext0:
 695              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 696              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 697              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 698              		.file 9 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_types.inc"
 699              		.file 10 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc"
 700              		.file 11 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_common.inc"
 701              		.file 12 ".\\bsw/global.h"
 702              		.file 13 ".\\bsw\\rte/rte_types.h"
 703              		.file 14 ".\\bsw\\rte/rte.h"
 704              		.file 15 ".\\bsw\\rte/sc_joystick_type.h"
 705              		.file 16 ".\\bsw\\rte/sc_speed_type.h"
 706              		.file 17 ".\\bsw\\rte/sc_engine_type.h"
 707              		.file 18 ".\\bsw\\rte/sc_breaklight_type.h"
 708              		.file 19 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_intfunc.inc"
 709              		.file 20 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc"
 710              		.file 21 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_primitives.inc"
 711              		.file 22 "Generated_Source\\PSoC5/core_cm3.h"
 712              		.file 23 ".\\bsw\\rte/sp_common.h"
 713              		.file 24 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_kernel.inc"
 714              		.file 25 ".\\bsw\\LabBoard/watchdog.h"
 715              		.section	.debug_info,"",%progbits
 716              	.Ldebug_info0:
 717 0000 FF100000 		.4byte	0x10ff
 718 0004 0400     		.2byte	0x4
 719 0006 00000000 		.4byte	.Ldebug_abbrev0
 720 000a 04       		.byte	0x4
 721 000b 01       		.uleb128 0x1
 722 000c 22070000 		.4byte	.LASF150
 723 0010 0C       		.byte	0xc
 724 0011 D4060000 		.4byte	.LASF151
 725 0015 AE050000 		.4byte	.LASF152
 726 0019 00000000 		.4byte	.Ldebug_ranges0+0
 727 001d 00000000 		.4byte	0
 728 0021 00000000 		.4byte	.Ldebug_line0
 729 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 44


 730 0026 01       		.byte	0x1
 731 0027 06       		.byte	0x6
 732 0028 9A010000 		.4byte	.LASF0
 733 002c 03       		.uleb128 0x3
 734 002d BC000000 		.4byte	.LASF4
 735 0031 06       		.byte	0x6
 736 0032 1D       		.byte	0x1d
 737 0033 37000000 		.4byte	0x37
 738 0037 02       		.uleb128 0x2
 739 0038 01       		.byte	0x1
 740 0039 08       		.byte	0x8
 741 003a 81060000 		.4byte	.LASF1
 742 003e 02       		.uleb128 0x2
 743 003f 02       		.byte	0x2
 744 0040 05       		.byte	0x5
 745 0041 3E020000 		.4byte	.LASF2
 746 0045 02       		.uleb128 0x2
 747 0046 02       		.byte	0x2
 748 0047 07       		.byte	0x7
 749 0048 90020000 		.4byte	.LASF3
 750 004c 03       		.uleb128 0x3
 751 004d 93080000 		.4byte	.LASF5
 752 0051 06       		.byte	0x6
 753 0052 3F       		.byte	0x3f
 754 0053 57000000 		.4byte	0x57
 755 0057 02       		.uleb128 0x2
 756 0058 04       		.byte	0x4
 757 0059 05       		.byte	0x5
 758 005a 07020000 		.4byte	.LASF6
 759 005e 03       		.uleb128 0x3
 760 005f C4020000 		.4byte	.LASF7
 761 0063 06       		.byte	0x6
 762 0064 41       		.byte	0x41
 763 0065 69000000 		.4byte	0x69
 764 0069 02       		.uleb128 0x2
 765 006a 04       		.byte	0x4
 766 006b 07       		.byte	0x7
 767 006c 78030000 		.4byte	.LASF8
 768 0070 02       		.uleb128 0x2
 769 0071 08       		.byte	0x8
 770 0072 05       		.byte	0x5
 771 0073 8C010000 		.4byte	.LASF9
 772 0077 02       		.uleb128 0x2
 773 0078 08       		.byte	0x8
 774 0079 07       		.byte	0x7
 775 007a C4030000 		.4byte	.LASF10
 776 007e 04       		.uleb128 0x4
 777 007f 04       		.byte	0x4
 778 0080 05       		.byte	0x5
 779 0081 696E7400 		.ascii	"int\000"
 780 0085 02       		.uleb128 0x2
 781 0086 04       		.byte	0x4
 782 0087 07       		.byte	0x7
 783 0088 08030000 		.4byte	.LASF11
 784 008c 03       		.uleb128 0x3
 785 008d 7A090000 		.4byte	.LASF12
 786 0091 07       		.byte	0x7
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 45


 787 0092 18       		.byte	0x18
 788 0093 2C000000 		.4byte	0x2c
 789 0097 03       		.uleb128 0x3
 790 0098 79060000 		.4byte	.LASF13
 791 009c 07       		.byte	0x7
 792 009d 2C       		.byte	0x2c
 793 009e 4C000000 		.4byte	0x4c
 794 00a2 03       		.uleb128 0x3
 795 00a3 F7070000 		.4byte	.LASF14
 796 00a7 07       		.byte	0x7
 797 00a8 30       		.byte	0x30
 798 00a9 5E000000 		.4byte	0x5e
 799 00ad 02       		.uleb128 0x2
 800 00ae 04       		.byte	0x4
 801 00af 04       		.byte	0x4
 802 00b0 19060000 		.4byte	.LASF15
 803 00b4 02       		.uleb128 0x2
 804 00b5 08       		.byte	0x8
 805 00b6 04       		.byte	0x4
 806 00b7 61020000 		.4byte	.LASF16
 807 00bb 02       		.uleb128 0x2
 808 00bc 01       		.byte	0x1
 809 00bd 08       		.byte	0x8
 810 00be 4D080000 		.4byte	.LASF17
 811 00c2 03       		.uleb128 0x3
 812 00c3 63000000 		.4byte	.LASF18
 813 00c7 08       		.byte	0x8
 814 00c8 D8       		.byte	0xd8
 815 00c9 85000000 		.4byte	0x85
 816 00cd 02       		.uleb128 0x2
 817 00ce 08       		.byte	0x8
 818 00cf 04       		.byte	0x4
 819 00d0 41080000 		.4byte	.LASF19
 820 00d4 03       		.uleb128 0x3
 821 00d5 71090000 		.4byte	.LASF20
 822 00d9 09       		.byte	0x9
 823 00da 53       		.byte	0x53
 824 00db 7E000000 		.4byte	0x7e
 825 00df 03       		.uleb128 0x3
 826 00e0 4B090000 		.4byte	.LASF21
 827 00e4 09       		.byte	0x9
 828 00e5 54       		.byte	0x54
 829 00e6 85000000 		.4byte	0x85
 830 00ea 03       		.uleb128 0x3
 831 00eb 54030000 		.4byte	.LASF22
 832 00ef 0A       		.byte	0xa
 833 00f0 4D       		.byte	0x4d
 834 00f1 DF000000 		.4byte	0xdf
 835 00f5 03       		.uleb128 0x3
 836 00f6 FA090000 		.4byte	.LASF23
 837 00fa 0A       		.byte	0xa
 838 00fb 4F       		.byte	0x4f
 839 00fc DF000000 		.4byte	0xdf
 840 0100 03       		.uleb128 0x3
 841 0101 CF020000 		.4byte	.LASF24
 842 0105 0A       		.byte	0xa
 843 0106 78       		.byte	0x78
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 46


 844 0107 D4000000 		.4byte	0xd4
 845 010b 05       		.uleb128 0x5
 846 010c DB030000 		.4byte	.LASF25
 847 0110 0B       		.byte	0xb
 848 0111 F701     		.2byte	0x1f7
 849 0113 00010000 		.4byte	0x100
 850 0117 05       		.uleb128 0x5
 851 0118 A6010000 		.4byte	.LASF26
 852 011c 0B       		.byte	0xb
 853 011d 2C02     		.2byte	0x22c
 854 011f EA000000 		.4byte	0xea
 855 0123 02       		.uleb128 0x2
 856 0124 04       		.byte	0x4
 857 0125 07       		.byte	0x7
 858 0126 E7040000 		.4byte	.LASF27
 859 012a 03       		.uleb128 0x3
 860 012b 27090000 		.4byte	.LASF28
 861 012f 0C       		.byte	0xc
 862 0130 90       		.byte	0x90
 863 0131 25000000 		.4byte	0x25
 864 0135 03       		.uleb128 0x3
 865 0136 09050000 		.4byte	.LASF29
 866 013a 0C       		.byte	0xc
 867 013b 9C       		.byte	0x9c
 868 013c 37000000 		.4byte	0x37
 869 0140 06       		.uleb128 0x6
 870 0141 01       		.byte	0x1
 871 0142 25000000 		.4byte	0x25
 872 0146 0C       		.byte	0xc
 873 0147 CF       		.byte	0xcf
 874 0148 E9010000 		.4byte	0x1e9
 875 014c 07       		.uleb128 0x7
 876 014d A2030000 		.4byte	.LASF30
 877 0151 00       		.byte	0
 878 0152 08       		.uleb128 0x8
 879 0153 10060000 		.4byte	.LASF31
 880 0157 7F       		.sleb128 -1
 881 0158 08       		.uleb128 0x8
 882 0159 8A030000 		.4byte	.LASF32
 883 015d 7E       		.sleb128 -2
 884 015e 08       		.uleb128 0x8
 885 015f 04070000 		.4byte	.LASF33
 886 0163 7D       		.sleb128 -3
 887 0164 08       		.uleb128 0x8
 888 0165 FC080000 		.4byte	.LASF34
 889 0169 7C       		.sleb128 -4
 890 016a 08       		.uleb128 0x8
 891 016b 62090000 		.4byte	.LASF35
 892 016f 7B       		.sleb128 -5
 893 0170 08       		.uleb128 0x8
 894 0171 C1080000 		.4byte	.LASF36
 895 0175 7A       		.sleb128 -6
 896 0176 08       		.uleb128 0x8
 897 0177 6E050000 		.4byte	.LASF37
 898 017b 79       		.sleb128 -7
 899 017c 08       		.uleb128 0x8
 900 017d FC030000 		.4byte	.LASF38
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 47


 901 0181 78       		.sleb128 -8
 902 0182 08       		.uleb128 0x8
 903 0183 F2020000 		.4byte	.LASF39
 904 0187 77       		.sleb128 -9
 905 0188 08       		.uleb128 0x8
 906 0189 30060000 		.4byte	.LASF40
 907 018d 76       		.sleb128 -10
 908 018e 08       		.uleb128 0x8
 909 018f 00000000 		.4byte	.LASF41
 910 0193 75       		.sleb128 -11
 911 0194 08       		.uleb128 0x8
 912 0195 48020000 		.4byte	.LASF42
 913 0199 74       		.sleb128 -12
 914 019a 08       		.uleb128 0x8
 915 019b 66030000 		.4byte	.LASF43
 916 019f 73       		.sleb128 -13
 917 01a0 08       		.uleb128 0x8
 918 01a1 2E080000 		.4byte	.LASF44
 919 01a5 72       		.sleb128 -14
 920 01a6 08       		.uleb128 0x8
 921 01a7 65060000 		.4byte	.LASF45
 922 01ab 71       		.sleb128 -15
 923 01ac 08       		.uleb128 0x8
 924 01ad 2C050000 		.4byte	.LASF46
 925 01b1 70       		.sleb128 -16
 926 01b2 08       		.uleb128 0x8
 927 01b3 80050000 		.4byte	.LASF47
 928 01b7 6F       		.sleb128 -17
 929 01b8 08       		.uleb128 0x8
 930 01b9 11040000 		.4byte	.LASF48
 931 01bd 6E       		.sleb128 -18
 932 01be 08       		.uleb128 0x8
 933 01bf 52040000 		.4byte	.LASF49
 934 01c3 6D       		.sleb128 -19
 935 01c4 08       		.uleb128 0x8
 936 01c5 3F040000 		.4byte	.LASF50
 937 01c9 6C       		.sleb128 -20
 938 01ca 08       		.uleb128 0x8
 939 01cb F8000000 		.4byte	.LASF51
 940 01cf 6B       		.sleb128 -21
 941 01d0 08       		.uleb128 0x8
 942 01d1 50050000 		.4byte	.LASF52
 943 01d5 6A       		.sleb128 -22
 944 01d6 08       		.uleb128 0x8
 945 01d7 07080000 		.4byte	.LASF53
 946 01db 69       		.sleb128 -23
 947 01dc 08       		.uleb128 0x8
 948 01dd 43030000 		.4byte	.LASF54
 949 01e1 68       		.sleb128 -24
 950 01e2 08       		.uleb128 0x8
 951 01e3 9D080000 		.4byte	.LASF55
 952 01e7 67       		.sleb128 -25
 953 01e8 00       		.byte	0
 954 01e9 03       		.uleb128 0x3
 955 01ea C6000000 		.4byte	.LASF56
 956 01ee 0C       		.byte	0xc
 957 01ef EA       		.byte	0xea
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 48


 958 01f0 40010000 		.4byte	0x140
 959 01f4 03       		.uleb128 0x3
 960 01f5 11090000 		.4byte	.LASF57
 961 01f9 0D       		.byte	0xd
 962 01fa 19       		.byte	0x19
 963 01fb FF010000 		.4byte	0x1ff
 964 01ff 09       		.uleb128 0x9
 965 0200 0B010000 		.4byte	0x10b
 966 0204 0A020000 		.4byte	0x20a
 967 0208 0A       		.uleb128 0xa
 968 0209 00       		.byte	0
 969 020a 03       		.uleb128 0x3
 970 020b 98030000 		.4byte	.LASF58
 971 020f 0D       		.byte	0xd
 972 0210 21       		.byte	0x21
 973 0211 17010000 		.4byte	0x117
 974 0215 03       		.uleb128 0x3
 975 0216 95000000 		.4byte	.LASF59
 976 021a 0D       		.byte	0xd
 977 021b 2D       		.byte	0x2d
 978 021c A2000000 		.4byte	0xa2
 979 0220 06       		.uleb128 0x6
 980 0221 01       		.byte	0x1
 981 0222 37000000 		.4byte	0x37
 982 0226 0E       		.byte	0xe
 983 0227 59       		.byte	0x59
 984 0228 45020000 		.4byte	0x245
 985 022c 07       		.uleb128 0x7
 986 022d 26040000 		.4byte	.LASF60
 987 0231 00       		.byte	0
 988 0232 07       		.uleb128 0x7
 989 0233 52080000 		.4byte	.LASF61
 990 0237 01       		.byte	0x1
 991 0238 07       		.uleb128 0x7
 992 0239 79020000 		.4byte	.LASF62
 993 023d 02       		.byte	0x2
 994 023e 07       		.uleb128 0x7
 995 023f F0040000 		.4byte	.LASF63
 996 0243 03       		.byte	0x3
 997 0244 00       		.byte	0
 998 0245 03       		.uleb128 0x3
 999 0246 E9080000 		.4byte	.LASF64
 1000 024a 0E       		.byte	0xe
 1001 024b 5E       		.byte	0x5e
 1002 024c 20020000 		.4byte	0x220
 1003 0250 0B       		.uleb128 0xb
 1004 0251 02       		.byte	0x2
 1005 0252 0F       		.byte	0xf
 1006 0253 22       		.byte	0x22
 1007 0254 71020000 		.4byte	0x271
 1008 0258 0C       		.uleb128 0xc
 1009 0259 C8090000 		.4byte	.LASF65
 1010 025d 0F       		.byte	0xf
 1011 025e 24       		.byte	0x24
 1012 025f 2A010000 		.4byte	0x12a
 1013 0263 00       		.byte	0
 1014 0264 0C       		.uleb128 0xc
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 49


 1015 0265 0C090000 		.4byte	.LASF66
 1016 0269 0F       		.byte	0xf
 1017 026a 25       		.byte	0x25
 1018 026b 2A010000 		.4byte	0x12a
 1019 026f 01       		.byte	0x1
 1020 0270 00       		.byte	0
 1021 0271 03       		.uleb128 0x3
 1022 0272 D4040000 		.4byte	.LASF67
 1023 0276 0F       		.byte	0xf
 1024 0277 28       		.byte	0x28
 1025 0278 50020000 		.4byte	0x250
 1026 027c 03       		.uleb128 0x3
 1027 027d BD040000 		.4byte	.LASF68
 1028 0281 02       		.byte	0x2
 1029 0282 26       		.byte	0x26
 1030 0283 87020000 		.4byte	0x287
 1031 0287 0D       		.uleb128 0xd
 1032 0288 04       		.byte	0x4
 1033 0289 8D020000 		.4byte	0x28d
 1034 028d 0E       		.uleb128 0xe
 1035 028e E9010000 		.4byte	0x1e9
 1036 0292 9C020000 		.4byte	0x29c
 1037 0296 0F       		.uleb128 0xf
 1038 0297 A2020000 		.4byte	0x2a2
 1039 029b 00       		.byte	0
 1040 029c 0D       		.uleb128 0xd
 1041 029d 04       		.byte	0x4
 1042 029e 71020000 		.4byte	0x271
 1043 02a2 10       		.uleb128 0x10
 1044 02a3 9C020000 		.4byte	0x29c
 1045 02a7 03       		.uleb128 0x3
 1046 02a8 BC060000 		.4byte	.LASF69
 1047 02ac 02       		.byte	0x2
 1048 02ad 2C       		.byte	0x2c
 1049 02ae B2020000 		.4byte	0x2b2
 1050 02b2 0D       		.uleb128 0xd
 1051 02b3 04       		.byte	0x4
 1052 02b4 B8020000 		.4byte	0x2b8
 1053 02b8 0E       		.uleb128 0xe
 1054 02b9 E9010000 		.4byte	0x1e9
 1055 02bd C7020000 		.4byte	0x2c7
 1056 02c1 0F       		.uleb128 0xf
 1057 02c2 D2020000 		.4byte	0x2d2
 1058 02c6 00       		.byte	0
 1059 02c7 0D       		.uleb128 0xd
 1060 02c8 04       		.byte	0x4
 1061 02c9 CD020000 		.4byte	0x2cd
 1062 02cd 10       		.uleb128 0x10
 1063 02ce 71020000 		.4byte	0x271
 1064 02d2 10       		.uleb128 0x10
 1065 02d3 C7020000 		.4byte	0x2c7
 1066 02d7 11       		.uleb128 0x11
 1067 02d8 8F060000 		.4byte	.LASF81
 1068 02dc 28       		.byte	0x28
 1069 02dd 02       		.byte	0x2
 1070 02de 36       		.byte	0x36
 1071 02df 5C030000 		.4byte	0x35c
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 50


 1072 02e3 0C       		.uleb128 0xc
 1073 02e4 07060000 		.4byte	.LASF70
 1074 02e8 02       		.byte	0x2
 1075 02e9 3B       		.byte	0x3b
 1076 02ea 5C030000 		.4byte	0x35c
 1077 02ee 00       		.byte	0
 1078 02ef 0C       		.uleb128 0xc
 1079 02f0 5C030000 		.4byte	.LASF71
 1080 02f4 02       		.byte	0x2
 1081 02f5 40       		.byte	0x40
 1082 02f6 61030000 		.4byte	0x361
 1083 02fa 04       		.byte	0x4
 1084 02fb 0C       		.uleb128 0xc
 1085 02fc B4010000 		.4byte	.LASF72
 1086 0300 02       		.byte	0x2
 1087 0301 45       		.byte	0x45
 1088 0302 66030000 		.4byte	0x366
 1089 0306 08       		.byte	0x8
 1090 0307 0C       		.uleb128 0xc
 1091 0308 C9070000 		.4byte	.LASF73
 1092 030c 02       		.byte	0x2
 1093 030d 4B       		.byte	0x4b
 1094 030e 66030000 		.4byte	0x366
 1095 0312 0C       		.byte	0xc
 1096 0313 0C       		.uleb128 0xc
 1097 0314 A3020000 		.4byte	.LASF74
 1098 0318 02       		.byte	0x2
 1099 0319 50       		.byte	0x50
 1100 031a 6B030000 		.4byte	0x36b
 1101 031e 10       		.byte	0x10
 1102 031f 0C       		.uleb128 0xc
 1103 0320 F6060000 		.4byte	.LASF75
 1104 0324 02       		.byte	0x2
 1105 0325 55       		.byte	0x55
 1106 0326 76030000 		.4byte	0x376
 1107 032a 14       		.byte	0x14
 1108 032b 0C       		.uleb128 0xc
 1109 032c 54060000 		.4byte	.LASF76
 1110 0330 02       		.byte	0x2
 1111 0331 5A       		.byte	0x5a
 1112 0332 6B030000 		.4byte	0x36b
 1113 0336 18       		.byte	0x18
 1114 0337 0C       		.uleb128 0xc
 1115 0338 ED090000 		.4byte	.LASF77
 1116 033c 02       		.byte	0x2
 1117 033d 5F       		.byte	0x5f
 1118 033e 76030000 		.4byte	0x376
 1119 0342 1C       		.byte	0x1c
 1120 0343 0C       		.uleb128 0xc
 1121 0344 6F080000 		.4byte	.LASF78
 1122 0348 02       		.byte	0x2
 1123 0349 65       		.byte	0x65
 1124 034a 7B030000 		.4byte	0x37b
 1125 034e 20       		.byte	0x20
 1126 034f 0C       		.uleb128 0xc
 1127 0350 32000000 		.4byte	.LASF79
 1128 0354 02       		.byte	0x2
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 51


 1129 0355 6A       		.byte	0x6a
 1130 0356 80030000 		.4byte	0x380
 1131 035a 24       		.byte	0x24
 1132 035b 00       		.byte	0
 1133 035c 10       		.uleb128 0x10
 1134 035d 7C020000 		.4byte	0x27c
 1135 0361 10       		.uleb128 0x10
 1136 0362 A7020000 		.4byte	0x2a7
 1137 0366 10       		.uleb128 0x10
 1138 0367 17010000 		.4byte	0x117
 1139 036b 10       		.uleb128 0x10
 1140 036c C2000000 		.4byte	0xc2
 1141 0370 0D       		.uleb128 0xd
 1142 0371 04       		.byte	0x4
 1143 0372 F4010000 		.4byte	0x1f4
 1144 0376 10       		.uleb128 0x10
 1145 0377 70030000 		.4byte	0x370
 1146 037b 10       		.uleb128 0x10
 1147 037c 35010000 		.4byte	0x135
 1148 0380 10       		.uleb128 0x10
 1149 0381 15020000 		.4byte	0x215
 1150 0385 03       		.uleb128 0x3
 1151 0386 31030000 		.4byte	.LASF80
 1152 038a 02       		.byte	0x2
 1153 038b 6D       		.byte	0x6d
 1154 038c 90030000 		.4byte	0x390
 1155 0390 10       		.uleb128 0x10
 1156 0391 D7020000 		.4byte	0x2d7
 1157 0395 11       		.uleb128 0x11
 1158 0396 DB070000 		.4byte	.LASF82
 1159 039a 0C       		.byte	0xc
 1160 039b 02       		.byte	0x2
 1161 039c 79       		.byte	0x79
 1162 039d D2030000 		.4byte	0x3d2
 1163 03a1 0C       		.uleb128 0xc
 1164 03a2 D6020000 		.4byte	.LASF83
 1165 03a6 02       		.byte	0x2
 1166 03a7 7F       		.byte	0x7f
 1167 03a8 71020000 		.4byte	0x271
 1168 03ac 00       		.byte	0
 1169 03ad 0C       		.uleb128 0xc
 1170 03ae 2F090000 		.4byte	.LASF84
 1171 03b2 02       		.byte	0x2
 1172 03b3 84       		.byte	0x84
 1173 03b4 45020000 		.4byte	0x245
 1174 03b8 02       		.byte	0x2
 1175 03b9 12       		.uleb128 0x12
 1176 03ba 61676500 		.ascii	"age\000"
 1177 03be 02       		.byte	0x2
 1178 03bf 89       		.byte	0x89
 1179 03c0 A2000000 		.4byte	0xa2
 1180 03c4 04       		.byte	0x4
 1181 03c5 0C       		.uleb128 0xc
 1182 03c6 D3070000 		.4byte	.LASF85
 1183 03ca 02       		.byte	0x2
 1184 03cb 8E       		.byte	0x8e
 1185 03cc D8030000 		.4byte	0x3d8
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 52


 1186 03d0 08       		.byte	0x8
 1187 03d1 00       		.byte	0
 1188 03d2 0D       		.uleb128 0xd
 1189 03d3 04       		.byte	0x4
 1190 03d4 85030000 		.4byte	0x385
 1191 03d8 10       		.uleb128 0x10
 1192 03d9 D2030000 		.4byte	0x3d2
 1193 03dd 03       		.uleb128 0x3
 1194 03de E9070000 		.4byte	.LASF86
 1195 03e2 02       		.byte	0x2
 1196 03e3 91       		.byte	0x91
 1197 03e4 95030000 		.4byte	0x395
 1198 03e8 0B       		.uleb128 0xb
 1199 03e9 01       		.byte	0x1
 1200 03ea 10       		.byte	0x10
 1201 03eb 21       		.byte	0x21
 1202 03ec FD030000 		.4byte	0x3fd
 1203 03f0 0C       		.uleb128 0xc
 1204 03f1 B6080000 		.4byte	.LASF87
 1205 03f5 10       		.byte	0x10
 1206 03f6 23       		.byte	0x23
 1207 03f7 8C000000 		.4byte	0x8c
 1208 03fb 00       		.byte	0
 1209 03fc 00       		.byte	0
 1210 03fd 03       		.uleb128 0x3
 1211 03fe 1E080000 		.4byte	.LASF88
 1212 0402 10       		.byte	0x10
 1213 0403 26       		.byte	0x26
 1214 0404 E8030000 		.4byte	0x3e8
 1215 0408 03       		.uleb128 0x3
 1216 0409 90040000 		.4byte	.LASF89
 1217 040d 03       		.byte	0x3
 1218 040e 26       		.byte	0x26
 1219 040f 13040000 		.4byte	0x413
 1220 0413 0D       		.uleb128 0xd
 1221 0414 04       		.byte	0x4
 1222 0415 19040000 		.4byte	0x419
 1223 0419 0E       		.uleb128 0xe
 1224 041a E9010000 		.4byte	0x1e9
 1225 041e 28040000 		.4byte	0x428
 1226 0422 0F       		.uleb128 0xf
 1227 0423 2E040000 		.4byte	0x42e
 1228 0427 00       		.byte	0
 1229 0428 0D       		.uleb128 0xd
 1230 0429 04       		.byte	0x4
 1231 042a FD030000 		.4byte	0x3fd
 1232 042e 10       		.uleb128 0x10
 1233 042f 28040000 		.4byte	0x428
 1234 0433 03       		.uleb128 0x3
 1235 0434 7B040000 		.4byte	.LASF90
 1236 0438 03       		.byte	0x3
 1237 0439 2C       		.byte	0x2c
 1238 043a 3E040000 		.4byte	0x43e
 1239 043e 0D       		.uleb128 0xd
 1240 043f 04       		.byte	0x4
 1241 0440 44040000 		.4byte	0x444
 1242 0444 0E       		.uleb128 0xe
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 53


 1243 0445 E9010000 		.4byte	0x1e9
 1244 0449 53040000 		.4byte	0x453
 1245 044d 0F       		.uleb128 0xf
 1246 044e 5E040000 		.4byte	0x45e
 1247 0452 00       		.byte	0
 1248 0453 0D       		.uleb128 0xd
 1249 0454 04       		.byte	0x4
 1250 0455 59040000 		.4byte	0x459
 1251 0459 10       		.uleb128 0x10
 1252 045a FD030000 		.4byte	0x3fd
 1253 045e 10       		.uleb128 0x10
 1254 045f 53040000 		.4byte	0x453
 1255 0463 11       		.uleb128 0x11
 1256 0464 6E010000 		.4byte	.LASF91
 1257 0468 28       		.byte	0x28
 1258 0469 03       		.byte	0x3
 1259 046a 36       		.byte	0x36
 1260 046b E8040000 		.4byte	0x4e8
 1261 046f 0C       		.uleb128 0xc
 1262 0470 07060000 		.4byte	.LASF70
 1263 0474 03       		.byte	0x3
 1264 0475 3B       		.byte	0x3b
 1265 0476 E8040000 		.4byte	0x4e8
 1266 047a 00       		.byte	0
 1267 047b 0C       		.uleb128 0xc
 1268 047c 5C030000 		.4byte	.LASF71
 1269 0480 03       		.byte	0x3
 1270 0481 40       		.byte	0x40
 1271 0482 ED040000 		.4byte	0x4ed
 1272 0486 04       		.byte	0x4
 1273 0487 0C       		.uleb128 0xc
 1274 0488 B4010000 		.4byte	.LASF72
 1275 048c 03       		.byte	0x3
 1276 048d 45       		.byte	0x45
 1277 048e 66030000 		.4byte	0x366
 1278 0492 08       		.byte	0x8
 1279 0493 0C       		.uleb128 0xc
 1280 0494 C9070000 		.4byte	.LASF73
 1281 0498 03       		.byte	0x3
 1282 0499 4B       		.byte	0x4b
 1283 049a 66030000 		.4byte	0x366
 1284 049e 0C       		.byte	0xc
 1285 049f 0C       		.uleb128 0xc
 1286 04a0 A3020000 		.4byte	.LASF74
 1287 04a4 03       		.byte	0x3
 1288 04a5 50       		.byte	0x50
 1289 04a6 6B030000 		.4byte	0x36b
 1290 04aa 10       		.byte	0x10
 1291 04ab 0C       		.uleb128 0xc
 1292 04ac F6060000 		.4byte	.LASF75
 1293 04b0 03       		.byte	0x3
 1294 04b1 55       		.byte	0x55
 1295 04b2 76030000 		.4byte	0x376
 1296 04b6 14       		.byte	0x14
 1297 04b7 0C       		.uleb128 0xc
 1298 04b8 54060000 		.4byte	.LASF76
 1299 04bc 03       		.byte	0x3
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 54


 1300 04bd 5A       		.byte	0x5a
 1301 04be 6B030000 		.4byte	0x36b
 1302 04c2 18       		.byte	0x18
 1303 04c3 0C       		.uleb128 0xc
 1304 04c4 ED090000 		.4byte	.LASF77
 1305 04c8 03       		.byte	0x3
 1306 04c9 5F       		.byte	0x5f
 1307 04ca 76030000 		.4byte	0x376
 1308 04ce 1C       		.byte	0x1c
 1309 04cf 0C       		.uleb128 0xc
 1310 04d0 6F080000 		.4byte	.LASF78
 1311 04d4 03       		.byte	0x3
 1312 04d5 65       		.byte	0x65
 1313 04d6 7B030000 		.4byte	0x37b
 1314 04da 20       		.byte	0x20
 1315 04db 0C       		.uleb128 0xc
 1316 04dc 32000000 		.4byte	.LASF79
 1317 04e0 03       		.byte	0x3
 1318 04e1 6A       		.byte	0x6a
 1319 04e2 80030000 		.4byte	0x380
 1320 04e6 24       		.byte	0x24
 1321 04e7 00       		.byte	0
 1322 04e8 10       		.uleb128 0x10
 1323 04e9 08040000 		.4byte	0x408
 1324 04ed 10       		.uleb128 0x10
 1325 04ee 33040000 		.4byte	0x433
 1326 04f2 03       		.uleb128 0x3
 1327 04f3 7D010000 		.4byte	.LASF92
 1328 04f7 03       		.byte	0x3
 1329 04f8 6D       		.byte	0x6d
 1330 04f9 FD040000 		.4byte	0x4fd
 1331 04fd 10       		.uleb128 0x10
 1332 04fe 63040000 		.4byte	0x463
 1333 0502 11       		.uleb128 0x11
 1334 0503 DC020000 		.4byte	.LASF93
 1335 0507 0C       		.byte	0xc
 1336 0508 03       		.byte	0x3
 1337 0509 79       		.byte	0x79
 1338 050a 3F050000 		.4byte	0x53f
 1339 050e 0C       		.uleb128 0xc
 1340 050f D6020000 		.4byte	.LASF83
 1341 0513 03       		.byte	0x3
 1342 0514 7F       		.byte	0x7f
 1343 0515 FD030000 		.4byte	0x3fd
 1344 0519 00       		.byte	0
 1345 051a 0C       		.uleb128 0xc
 1346 051b 2F090000 		.4byte	.LASF84
 1347 051f 03       		.byte	0x3
 1348 0520 84       		.byte	0x84
 1349 0521 45020000 		.4byte	0x245
 1350 0525 01       		.byte	0x1
 1351 0526 12       		.uleb128 0x12
 1352 0527 61676500 		.ascii	"age\000"
 1353 052b 03       		.byte	0x3
 1354 052c 89       		.byte	0x89
 1355 052d A2000000 		.4byte	0xa2
 1356 0531 04       		.byte	0x4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 55


 1357 0532 0C       		.uleb128 0xc
 1358 0533 D3070000 		.4byte	.LASF85
 1359 0537 03       		.byte	0x3
 1360 0538 8E       		.byte	0x8e
 1361 0539 45050000 		.4byte	0x545
 1362 053d 08       		.byte	0x8
 1363 053e 00       		.byte	0
 1364 053f 0D       		.uleb128 0xd
 1365 0540 04       		.byte	0x4
 1366 0541 F2040000 		.4byte	0x4f2
 1367 0545 10       		.uleb128 0x10
 1368 0546 3F050000 		.4byte	0x53f
 1369 054a 03       		.uleb128 0x3
 1370 054b E7020000 		.4byte	.LASF94
 1371 054f 03       		.byte	0x3
 1372 0550 91       		.byte	0x91
 1373 0551 02050000 		.4byte	0x502
 1374 0555 0B       		.uleb128 0xb
 1375 0556 01       		.byte	0x1
 1376 0557 11       		.byte	0x11
 1377 0558 21       		.byte	0x21
 1378 0559 6A050000 		.4byte	0x56a
 1379 055d 0C       		.uleb128 0xc
 1380 055e 12000000 		.4byte	.LASF95
 1381 0562 11       		.byte	0x11
 1382 0563 23       		.byte	0x23
 1383 0564 8C000000 		.4byte	0x8c
 1384 0568 00       		.byte	0
 1385 0569 00       		.byte	0
 1386 056a 03       		.uleb128 0x3
 1387 056b B7090000 		.4byte	.LASF96
 1388 056f 11       		.byte	0x11
 1389 0570 26       		.byte	0x26
 1390 0571 55050000 		.4byte	0x555
 1391 0575 03       		.uleb128 0x3
 1392 0576 0A010000 		.4byte	.LASF97
 1393 057a 04       		.byte	0x4
 1394 057b 26       		.byte	0x26
 1395 057c 80050000 		.4byte	0x580
 1396 0580 0D       		.uleb128 0xd
 1397 0581 04       		.byte	0x4
 1398 0582 86050000 		.4byte	0x586
 1399 0586 0E       		.uleb128 0xe
 1400 0587 E9010000 		.4byte	0x1e9
 1401 058b 95050000 		.4byte	0x595
 1402 058f 0F       		.uleb128 0xf
 1403 0590 9B050000 		.4byte	0x59b
 1404 0594 00       		.byte	0
 1405 0595 0D       		.uleb128 0xd
 1406 0596 04       		.byte	0x4
 1407 0597 6A050000 		.4byte	0x56a
 1408 059b 10       		.uleb128 0x10
 1409 059c 95050000 		.4byte	0x595
 1410 05a0 03       		.uleb128 0x3
 1411 05a1 65040000 		.4byte	.LASF98
 1412 05a5 04       		.byte	0x4
 1413 05a6 2C       		.byte	0x2c
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 56


 1414 05a7 AB050000 		.4byte	0x5ab
 1415 05ab 0D       		.uleb128 0xd
 1416 05ac 04       		.byte	0x4
 1417 05ad B1050000 		.4byte	0x5b1
 1418 05b1 0E       		.uleb128 0xe
 1419 05b2 E9010000 		.4byte	0x1e9
 1420 05b6 C0050000 		.4byte	0x5c0
 1421 05ba 0F       		.uleb128 0xf
 1422 05bb CB050000 		.4byte	0x5cb
 1423 05bf 00       		.byte	0
 1424 05c0 0D       		.uleb128 0xd
 1425 05c1 04       		.byte	0x4
 1426 05c2 C6050000 		.4byte	0x5c6
 1427 05c6 10       		.uleb128 0x10
 1428 05c7 6A050000 		.4byte	0x56a
 1429 05cb 10       		.uleb128 0x10
 1430 05cc C0050000 		.4byte	0x5c0
 1431 05d0 11       		.uleb128 0x11
 1432 05d1 6A000000 		.4byte	.LASF99
 1433 05d5 28       		.byte	0x28
 1434 05d6 04       		.byte	0x4
 1435 05d7 36       		.byte	0x36
 1436 05d8 55060000 		.4byte	0x655
 1437 05dc 0C       		.uleb128 0xc
 1438 05dd 07060000 		.4byte	.LASF70
 1439 05e1 04       		.byte	0x4
 1440 05e2 3B       		.byte	0x3b
 1441 05e3 55060000 		.4byte	0x655
 1442 05e7 00       		.byte	0
 1443 05e8 0C       		.uleb128 0xc
 1444 05e9 5C030000 		.4byte	.LASF71
 1445 05ed 04       		.byte	0x4
 1446 05ee 40       		.byte	0x40
 1447 05ef 5A060000 		.4byte	0x65a
 1448 05f3 04       		.byte	0x4
 1449 05f4 0C       		.uleb128 0xc
 1450 05f5 B4010000 		.4byte	.LASF72
 1451 05f9 04       		.byte	0x4
 1452 05fa 45       		.byte	0x45
 1453 05fb 66030000 		.4byte	0x366
 1454 05ff 08       		.byte	0x8
 1455 0600 0C       		.uleb128 0xc
 1456 0601 C9070000 		.4byte	.LASF73
 1457 0605 04       		.byte	0x4
 1458 0606 4B       		.byte	0x4b
 1459 0607 66030000 		.4byte	0x366
 1460 060b 0C       		.byte	0xc
 1461 060c 0C       		.uleb128 0xc
 1462 060d A3020000 		.4byte	.LASF74
 1463 0611 04       		.byte	0x4
 1464 0612 50       		.byte	0x50
 1465 0613 6B030000 		.4byte	0x36b
 1466 0617 10       		.byte	0x10
 1467 0618 0C       		.uleb128 0xc
 1468 0619 F6060000 		.4byte	.LASF75
 1469 061d 04       		.byte	0x4
 1470 061e 55       		.byte	0x55
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 57


 1471 061f 76030000 		.4byte	0x376
 1472 0623 14       		.byte	0x14
 1473 0624 0C       		.uleb128 0xc
 1474 0625 54060000 		.4byte	.LASF76
 1475 0629 04       		.byte	0x4
 1476 062a 5A       		.byte	0x5a
 1477 062b 6B030000 		.4byte	0x36b
 1478 062f 18       		.byte	0x18
 1479 0630 0C       		.uleb128 0xc
 1480 0631 ED090000 		.4byte	.LASF77
 1481 0635 04       		.byte	0x4
 1482 0636 5F       		.byte	0x5f
 1483 0637 76030000 		.4byte	0x376
 1484 063b 1C       		.byte	0x1c
 1485 063c 0C       		.uleb128 0xc
 1486 063d 6F080000 		.4byte	.LASF78
 1487 0641 04       		.byte	0x4
 1488 0642 65       		.byte	0x65
 1489 0643 7B030000 		.4byte	0x37b
 1490 0647 20       		.byte	0x20
 1491 0648 0C       		.uleb128 0xc
 1492 0649 32000000 		.4byte	.LASF79
 1493 064d 04       		.byte	0x4
 1494 064e 6A       		.byte	0x6a
 1495 064f 80030000 		.4byte	0x380
 1496 0653 24       		.byte	0x24
 1497 0654 00       		.byte	0
 1498 0655 10       		.uleb128 0x10
 1499 0656 75050000 		.4byte	0x575
 1500 065a 10       		.uleb128 0x10
 1501 065b A0050000 		.4byte	0x5a0
 1502 065f 03       		.uleb128 0x3
 1503 0660 7A000000 		.4byte	.LASF100
 1504 0664 04       		.byte	0x4
 1505 0665 6D       		.byte	0x6d
 1506 0666 6A060000 		.4byte	0x66a
 1507 066a 10       		.uleb128 0x10
 1508 066b D0050000 		.4byte	0x5d0
 1509 066f 11       		.uleb128 0x11
 1510 0670 020A0000 		.4byte	.LASF101
 1511 0674 0C       		.byte	0xc
 1512 0675 04       		.byte	0x4
 1513 0676 79       		.byte	0x79
 1514 0677 AC060000 		.4byte	0x6ac
 1515 067b 0C       		.uleb128 0xc
 1516 067c D6020000 		.4byte	.LASF83
 1517 0680 04       		.byte	0x4
 1518 0681 7F       		.byte	0x7f
 1519 0682 6A050000 		.4byte	0x56a
 1520 0686 00       		.byte	0
 1521 0687 0C       		.uleb128 0xc
 1522 0688 2F090000 		.4byte	.LASF84
 1523 068c 04       		.byte	0x4
 1524 068d 84       		.byte	0x84
 1525 068e 45020000 		.4byte	0x245
 1526 0692 01       		.byte	0x1
 1527 0693 12       		.uleb128 0x12
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 58


 1528 0694 61676500 		.ascii	"age\000"
 1529 0698 04       		.byte	0x4
 1530 0699 89       		.byte	0x89
 1531 069a A2000000 		.4byte	0xa2
 1532 069e 04       		.byte	0x4
 1533 069f 0C       		.uleb128 0xc
 1534 06a0 D3070000 		.4byte	.LASF85
 1535 06a4 04       		.byte	0x4
 1536 06a5 8E       		.byte	0x8e
 1537 06a6 B2060000 		.4byte	0x6b2
 1538 06aa 08       		.byte	0x8
 1539 06ab 00       		.byte	0
 1540 06ac 0D       		.uleb128 0xd
 1541 06ad 04       		.byte	0x4
 1542 06ae 5F060000 		.4byte	0x65f
 1543 06b2 10       		.uleb128 0x10
 1544 06b3 AC060000 		.4byte	0x6ac
 1545 06b7 03       		.uleb128 0x3
 1546 06b8 0E0A0000 		.4byte	.LASF102
 1547 06bc 04       		.byte	0x4
 1548 06bd 91       		.byte	0x91
 1549 06be 6F060000 		.4byte	0x66f
 1550 06c2 0B       		.uleb128 0xb
 1551 06c3 01       		.byte	0x1
 1552 06c4 12       		.byte	0x12
 1553 06c5 21       		.byte	0x21
 1554 06c6 D7060000 		.4byte	0x6d7
 1555 06ca 0C       		.uleb128 0xc
 1556 06cb E5010000 		.4byte	.LASF103
 1557 06cf 12       		.byte	0x12
 1558 06d0 23       		.byte	0x23
 1559 06d1 8C000000 		.4byte	0x8c
 1560 06d5 00       		.byte	0
 1561 06d6 00       		.byte	0
 1562 06d7 03       		.uleb128 0x3
 1563 06d8 7E080000 		.4byte	.LASF104
 1564 06dc 12       		.byte	0x12
 1565 06dd 26       		.byte	0x26
 1566 06de C2060000 		.4byte	0x6c2
 1567 06e2 03       		.uleb128 0x3
 1568 06e3 A4040000 		.4byte	.LASF105
 1569 06e7 05       		.byte	0x5
 1570 06e8 26       		.byte	0x26
 1571 06e9 ED060000 		.4byte	0x6ed
 1572 06ed 0D       		.uleb128 0xd
 1573 06ee 04       		.byte	0x4
 1574 06ef F3060000 		.4byte	0x6f3
 1575 06f3 0E       		.uleb128 0xe
 1576 06f4 E9010000 		.4byte	0x1e9
 1577 06f8 02070000 		.4byte	0x702
 1578 06fc 0F       		.uleb128 0xf
 1579 06fd 08070000 		.4byte	0x708
 1580 0701 00       		.byte	0
 1581 0702 0D       		.uleb128 0xd
 1582 0703 04       		.byte	0x4
 1583 0704 D7060000 		.4byte	0x6d7
 1584 0708 10       		.uleb128 0x10
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 59


 1585 0709 02070000 		.4byte	0x702
 1586 070d 03       		.uleb128 0x3
 1587 070e 94050000 		.4byte	.LASF106
 1588 0712 05       		.byte	0x5
 1589 0713 2C       		.byte	0x2c
 1590 0714 18070000 		.4byte	0x718
 1591 0718 0D       		.uleb128 0xd
 1592 0719 04       		.byte	0x4
 1593 071a 1E070000 		.4byte	0x71e
 1594 071e 0E       		.uleb128 0xe
 1595 071f E9010000 		.4byte	0x1e9
 1596 0723 2D070000 		.4byte	0x72d
 1597 0727 0F       		.uleb128 0xf
 1598 0728 38070000 		.4byte	0x738
 1599 072c 00       		.byte	0
 1600 072d 0D       		.uleb128 0xd
 1601 072e 04       		.byte	0x4
 1602 072f 33070000 		.4byte	0x733
 1603 0733 10       		.uleb128 0x10
 1604 0734 D7060000 		.4byte	0x6d7
 1605 0738 10       		.uleb128 0x10
 1606 0739 2D070000 		.4byte	0x72d
 1607 073d 11       		.uleb128 0x11
 1608 073e 3B000000 		.4byte	.LASF107
 1609 0742 28       		.byte	0x28
 1610 0743 05       		.byte	0x5
 1611 0744 36       		.byte	0x36
 1612 0745 C2070000 		.4byte	0x7c2
 1613 0749 0C       		.uleb128 0xc
 1614 074a 07060000 		.4byte	.LASF70
 1615 074e 05       		.byte	0x5
 1616 074f 3B       		.byte	0x3b
 1617 0750 C2070000 		.4byte	0x7c2
 1618 0754 00       		.byte	0
 1619 0755 0C       		.uleb128 0xc
 1620 0756 5C030000 		.4byte	.LASF71
 1621 075a 05       		.byte	0x5
 1622 075b 40       		.byte	0x40
 1623 075c C7070000 		.4byte	0x7c7
 1624 0760 04       		.byte	0x4
 1625 0761 0C       		.uleb128 0xc
 1626 0762 B4010000 		.4byte	.LASF72
 1627 0766 05       		.byte	0x5
 1628 0767 45       		.byte	0x45
 1629 0768 66030000 		.4byte	0x366
 1630 076c 08       		.byte	0x8
 1631 076d 0C       		.uleb128 0xc
 1632 076e C9070000 		.4byte	.LASF73
 1633 0772 05       		.byte	0x5
 1634 0773 4B       		.byte	0x4b
 1635 0774 66030000 		.4byte	0x366
 1636 0778 0C       		.byte	0xc
 1637 0779 0C       		.uleb128 0xc
 1638 077a A3020000 		.4byte	.LASF74
 1639 077e 05       		.byte	0x5
 1640 077f 50       		.byte	0x50
 1641 0780 6B030000 		.4byte	0x36b
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 60


 1642 0784 10       		.byte	0x10
 1643 0785 0C       		.uleb128 0xc
 1644 0786 F6060000 		.4byte	.LASF75
 1645 078a 05       		.byte	0x5
 1646 078b 55       		.byte	0x55
 1647 078c 76030000 		.4byte	0x376
 1648 0790 14       		.byte	0x14
 1649 0791 0C       		.uleb128 0xc
 1650 0792 54060000 		.4byte	.LASF76
 1651 0796 05       		.byte	0x5
 1652 0797 5A       		.byte	0x5a
 1653 0798 6B030000 		.4byte	0x36b
 1654 079c 18       		.byte	0x18
 1655 079d 0C       		.uleb128 0xc
 1656 079e ED090000 		.4byte	.LASF77
 1657 07a2 05       		.byte	0x5
 1658 07a3 5F       		.byte	0x5f
 1659 07a4 76030000 		.4byte	0x376
 1660 07a8 1C       		.byte	0x1c
 1661 07a9 0C       		.uleb128 0xc
 1662 07aa 6F080000 		.4byte	.LASF78
 1663 07ae 05       		.byte	0x5
 1664 07af 65       		.byte	0x65
 1665 07b0 7B030000 		.4byte	0x37b
 1666 07b4 20       		.byte	0x20
 1667 07b5 0C       		.uleb128 0xc
 1668 07b6 32000000 		.4byte	.LASF79
 1669 07ba 05       		.byte	0x5
 1670 07bb 6A       		.byte	0x6a
 1671 07bc 80030000 		.4byte	0x380
 1672 07c0 24       		.byte	0x24
 1673 07c1 00       		.byte	0
 1674 07c2 10       		.uleb128 0x10
 1675 07c3 E2060000 		.4byte	0x6e2
 1676 07c7 10       		.uleb128 0x10
 1677 07c8 0D070000 		.4byte	0x70d
 1678 07cc 03       		.uleb128 0x3
 1679 07cd 4F000000 		.4byte	.LASF108
 1680 07d1 05       		.byte	0x5
 1681 07d2 6D       		.byte	0x6d
 1682 07d3 D7070000 		.4byte	0x7d7
 1683 07d7 10       		.uleb128 0x10
 1684 07d8 3D070000 		.4byte	0x73d
 1685 07dc 11       		.uleb128 0x11
 1686 07dd CD090000 		.4byte	.LASF109
 1687 07e1 0C       		.byte	0xc
 1688 07e2 05       		.byte	0x5
 1689 07e3 79       		.byte	0x79
 1690 07e4 19080000 		.4byte	0x819
 1691 07e8 0C       		.uleb128 0xc
 1692 07e9 D6020000 		.4byte	.LASF83
 1693 07ed 05       		.byte	0x5
 1694 07ee 7F       		.byte	0x7f
 1695 07ef D7060000 		.4byte	0x6d7
 1696 07f3 00       		.byte	0
 1697 07f4 0C       		.uleb128 0xc
 1698 07f5 2F090000 		.4byte	.LASF84
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 61


 1699 07f9 05       		.byte	0x5
 1700 07fa 84       		.byte	0x84
 1701 07fb 45020000 		.4byte	0x245
 1702 07ff 01       		.byte	0x1
 1703 0800 12       		.uleb128 0x12
 1704 0801 61676500 		.ascii	"age\000"
 1705 0805 05       		.byte	0x5
 1706 0806 89       		.byte	0x89
 1707 0807 A2000000 		.4byte	0xa2
 1708 080b 04       		.byte	0x4
 1709 080c 0C       		.uleb128 0xc
 1710 080d D3070000 		.4byte	.LASF85
 1711 0811 05       		.byte	0x5
 1712 0812 8E       		.byte	0x8e
 1713 0813 1F080000 		.4byte	0x81f
 1714 0817 08       		.byte	0x8
 1715 0818 00       		.byte	0
 1716 0819 0D       		.uleb128 0xd
 1717 081a 04       		.byte	0x4
 1718 081b CC070000 		.4byte	0x7cc
 1719 081f 10       		.uleb128 0x10
 1720 0820 19080000 		.4byte	0x819
 1721 0824 03       		.uleb128 0x3
 1722 0825 DD090000 		.4byte	.LASF110
 1723 0829 05       		.byte	0x5
 1724 082a 91       		.byte	0x91
 1725 082b DC070000 		.4byte	0x7dc
 1726 082f 13       		.uleb128 0x13
 1727 0830 D1010000 		.4byte	.LASF115
 1728 0834 02       		.byte	0x2
 1729 0835 3501     		.2byte	0x135
 1730 0837 E9010000 		.4byte	0x1e9
 1731 083b 03       		.byte	0x3
 1732 083c 8B080000 		.4byte	0x88b
 1733 0840 14       		.uleb128 0x14
 1734 0841 00080000 		.4byte	.LASF111
 1735 0845 02       		.byte	0x2
 1736 0846 3501     		.2byte	0x135
 1737 0848 91080000 		.4byte	0x891
 1738 084c 14       		.uleb128 0x14
 1739 084d D6020000 		.4byte	.LASF83
 1740 0851 02       		.byte	0x2
 1741 0852 3501     		.2byte	0x135
 1742 0854 CD020000 		.4byte	0x2cd
 1743 0858 15       		.uleb128 0x15
 1744 0859 72657400 		.ascii	"ret\000"
 1745 085d 02       		.byte	0x2
 1746 085e 3801     		.2byte	0x138
 1747 0860 E9010000 		.4byte	0x1e9
 1748 0864 16       		.uleb128 0x16
 1749 0865 1F090000 		.4byte	.LASF112
 1750 0869 02       		.byte	0x2
 1751 086a 3901     		.2byte	0x139
 1752 086c C2000000 		.4byte	0xc2
 1753 0870 16       		.uleb128 0x16
 1754 0871 8A000000 		.4byte	.LASF113
 1755 0875 02       		.byte	0x2
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 62


 1756 0876 4301     		.2byte	0x143
 1757 0878 70030000 		.4byte	0x370
 1758 087c 17       		.uleb128 0x17
 1759 087d 16       		.uleb128 0x16
 1760 087e CB000000 		.4byte	.LASF114
 1761 0882 02       		.byte	0x2
 1762 0883 4801     		.2byte	0x148
 1763 0885 0B010000 		.4byte	0x10b
 1764 0889 00       		.byte	0
 1765 088a 00       		.byte	0
 1766 088b 0D       		.uleb128 0xd
 1767 088c 04       		.byte	0x4
 1768 088d DD030000 		.4byte	0x3dd
 1769 0891 10       		.uleb128 0x10
 1770 0892 8B080000 		.4byte	0x88b
 1771 0896 18       		.uleb128 0x18
 1772 0897 82090000 		.4byte	.LASF116
 1773 089b 02       		.byte	0x2
 1774 089c C6       		.byte	0xc6
 1775 089d E9010000 		.4byte	0x1e9
 1776 08a1 03       		.byte	0x3
 1777 08a2 E2080000 		.4byte	0x8e2
 1778 08a6 19       		.uleb128 0x19
 1779 08a7 00080000 		.4byte	.LASF111
 1780 08ab 02       		.byte	0x2
 1781 08ac C6       		.byte	0xc6
 1782 08ad 91080000 		.4byte	0x891
 1783 08b1 19       		.uleb128 0x19
 1784 08b2 2F090000 		.4byte	.LASF84
 1785 08b6 02       		.byte	0x2
 1786 08b7 C6       		.byte	0xc6
 1787 08b8 E2080000 		.4byte	0x8e2
 1788 08bc 1A       		.uleb128 0x1a
 1789 08bd 1F090000 		.4byte	.LASF112
 1790 08c1 02       		.byte	0x2
 1791 08c2 C9       		.byte	0xc9
 1792 08c3 C2000000 		.4byte	0xc2
 1793 08c7 17       		.uleb128 0x17
 1794 08c8 1A       		.uleb128 0x1a
 1795 08c9 8A000000 		.4byte	.LASF113
 1796 08cd 02       		.byte	0x2
 1797 08ce CF       		.byte	0xcf
 1798 08cf 70030000 		.4byte	0x370
 1799 08d3 17       		.uleb128 0x17
 1800 08d4 1A       		.uleb128 0x1a
 1801 08d5 CB000000 		.4byte	.LASF114
 1802 08d9 02       		.byte	0x2
 1803 08da D3       		.byte	0xd3
 1804 08db 0B010000 		.4byte	0x10b
 1805 08df 00       		.byte	0
 1806 08e0 00       		.byte	0
 1807 08e1 00       		.byte	0
 1808 08e2 10       		.uleb128 0x10
 1809 08e3 45020000 		.4byte	0x245
 1810 08e7 13       		.uleb128 0x13
 1811 08e8 25020000 		.4byte	.LASF117
 1812 08ec 02       		.byte	0x2
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 63


 1813 08ed 5D01     		.2byte	0x15d
 1814 08ef E9010000 		.4byte	0x1e9
 1815 08f3 03       		.byte	0x3
 1816 08f4 1F090000 		.4byte	0x91f
 1817 08f8 14       		.uleb128 0x14
 1818 08f9 00080000 		.4byte	.LASF111
 1819 08fd 02       		.byte	0x2
 1820 08fe 5D01     		.2byte	0x15d
 1821 0900 91080000 		.4byte	0x891
 1822 0904 15       		.uleb128 0x15
 1823 0905 72657400 		.ascii	"ret\000"
 1824 0909 02       		.byte	0x2
 1825 090a 5F01     		.2byte	0x15f
 1826 090c E9010000 		.4byte	0x1e9
 1827 0910 17       		.uleb128 0x17
 1828 0911 16       		.uleb128 0x16
 1829 0912 D6020000 		.4byte	.LASF83
 1830 0916 02       		.byte	0x2
 1831 0917 6401     		.2byte	0x164
 1832 0919 71020000 		.4byte	0x271
 1833 091d 00       		.byte	0
 1834 091e 00       		.byte	0
 1835 091f 18       		.uleb128 0x18
 1836 0920 47010000 		.4byte	.LASF118
 1837 0924 02       		.byte	0x2
 1838 0925 B8       		.byte	0xb8
 1839 0926 45020000 		.4byte	0x245
 1840 092a 03       		.byte	0x3
 1841 092b 3B090000 		.4byte	0x93b
 1842 092f 19       		.uleb128 0x19
 1843 0930 00080000 		.4byte	.LASF111
 1844 0934 02       		.byte	0x2
 1845 0935 B8       		.byte	0xb8
 1846 0936 46090000 		.4byte	0x946
 1847 093a 00       		.byte	0
 1848 093b 0D       		.uleb128 0xd
 1849 093c 04       		.byte	0x4
 1850 093d 41090000 		.4byte	0x941
 1851 0941 10       		.uleb128 0x10
 1852 0942 DD030000 		.4byte	0x3dd
 1853 0946 10       		.uleb128 0x10
 1854 0947 3B090000 		.4byte	0x93b
 1855 094b 13       		.uleb128 0x13
 1856 094c F3050000 		.4byte	.LASF119
 1857 0950 02       		.byte	0x2
 1858 0951 1201     		.2byte	0x112
 1859 0953 71020000 		.4byte	0x271
 1860 0957 03       		.byte	0x3
 1861 0958 69090000 		.4byte	0x969
 1862 095c 14       		.uleb128 0x14
 1863 095d 00080000 		.4byte	.LASF111
 1864 0961 02       		.byte	0x2
 1865 0962 1201     		.2byte	0x112
 1866 0964 46090000 		.4byte	0x946
 1867 0968 00       		.byte	0
 1868 0969 13       		.uleb128 0x13
 1869 096a 68020000 		.4byte	.LASF120
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 64


 1870 096e 03       		.byte	0x3
 1871 096f 3501     		.2byte	0x135
 1872 0971 E9010000 		.4byte	0x1e9
 1873 0975 03       		.byte	0x3
 1874 0976 C5090000 		.4byte	0x9c5
 1875 097a 14       		.uleb128 0x14
 1876 097b 00080000 		.4byte	.LASF111
 1877 097f 03       		.byte	0x3
 1878 0980 3501     		.2byte	0x135
 1879 0982 CB090000 		.4byte	0x9cb
 1880 0986 14       		.uleb128 0x14
 1881 0987 D6020000 		.4byte	.LASF83
 1882 098b 03       		.byte	0x3
 1883 098c 3501     		.2byte	0x135
 1884 098e 59040000 		.4byte	0x459
 1885 0992 15       		.uleb128 0x15
 1886 0993 72657400 		.ascii	"ret\000"
 1887 0997 03       		.byte	0x3
 1888 0998 3801     		.2byte	0x138
 1889 099a E9010000 		.4byte	0x1e9
 1890 099e 16       		.uleb128 0x16
 1891 099f 1F090000 		.4byte	.LASF112
 1892 09a3 03       		.byte	0x3
 1893 09a4 3901     		.2byte	0x139
 1894 09a6 C2000000 		.4byte	0xc2
 1895 09aa 16       		.uleb128 0x16
 1896 09ab 8A000000 		.4byte	.LASF113
 1897 09af 03       		.byte	0x3
 1898 09b0 4301     		.2byte	0x143
 1899 09b2 70030000 		.4byte	0x370
 1900 09b6 17       		.uleb128 0x17
 1901 09b7 16       		.uleb128 0x16
 1902 09b8 CB000000 		.4byte	.LASF114
 1903 09bc 03       		.byte	0x3
 1904 09bd 4801     		.2byte	0x148
 1905 09bf 0B010000 		.4byte	0x10b
 1906 09c3 00       		.byte	0
 1907 09c4 00       		.byte	0
 1908 09c5 0D       		.uleb128 0xd
 1909 09c6 04       		.byte	0x4
 1910 09c7 4A050000 		.4byte	0x54a
 1911 09cb 10       		.uleb128 0x10
 1912 09cc C5090000 		.4byte	0x9c5
 1913 09d0 18       		.uleb128 0x18
 1914 09d1 AD030000 		.4byte	.LASF121
 1915 09d5 03       		.byte	0x3
 1916 09d6 B8       		.byte	0xb8
 1917 09d7 45020000 		.4byte	0x245
 1918 09db 03       		.byte	0x3
 1919 09dc EC090000 		.4byte	0x9ec
 1920 09e0 19       		.uleb128 0x19
 1921 09e1 00080000 		.4byte	.LASF111
 1922 09e5 03       		.byte	0x3
 1923 09e6 B8       		.byte	0xb8
 1924 09e7 F7090000 		.4byte	0x9f7
 1925 09eb 00       		.byte	0
 1926 09ec 0D       		.uleb128 0xd
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 65


 1927 09ed 04       		.byte	0x4
 1928 09ee F2090000 		.4byte	0x9f2
 1929 09f2 10       		.uleb128 0x10
 1930 09f3 4A050000 		.4byte	0x54a
 1931 09f7 10       		.uleb128 0x10
 1932 09f8 EC090000 		.4byte	0x9ec
 1933 09fc 13       		.uleb128 0x13
 1934 09fd 1F060000 		.4byte	.LASF122
 1935 0a01 03       		.byte	0x3
 1936 0a02 1201     		.2byte	0x112
 1937 0a04 FD030000 		.4byte	0x3fd
 1938 0a08 03       		.byte	0x3
 1939 0a09 1A0A0000 		.4byte	0xa1a
 1940 0a0d 14       		.uleb128 0x14
 1941 0a0e 00080000 		.4byte	.LASF111
 1942 0a12 03       		.byte	0x3
 1943 0a13 1201     		.2byte	0x112
 1944 0a15 F7090000 		.4byte	0x9f7
 1945 0a19 00       		.byte	0
 1946 0a1a 18       		.uleb128 0x18
 1947 0a1b 1E000000 		.4byte	.LASF123
 1948 0a1f 03       		.byte	0x3
 1949 0a20 E4       		.byte	0xe4
 1950 0a21 A2000000 		.4byte	0xa2
 1951 0a25 03       		.byte	0x3
 1952 0a26 360A0000 		.4byte	0xa36
 1953 0a2a 19       		.uleb128 0x19
 1954 0a2b 00080000 		.4byte	.LASF111
 1955 0a2f 03       		.byte	0x3
 1956 0a30 E4       		.byte	0xe4
 1957 0a31 F7090000 		.4byte	0x9f7
 1958 0a35 00       		.byte	0
 1959 0a36 13       		.uleb128 0x13
 1960 0a37 30010000 		.4byte	.LASF124
 1961 0a3b 04       		.byte	0x4
 1962 0a3c 7E01     		.2byte	0x17e
 1963 0a3e E9010000 		.4byte	0x1e9
 1964 0a42 03       		.byte	0x3
 1965 0a43 600A0000 		.4byte	0xa60
 1966 0a47 14       		.uleb128 0x14
 1967 0a48 00080000 		.4byte	.LASF111
 1968 0a4c 04       		.byte	0x4
 1969 0a4d 7E01     		.2byte	0x17e
 1970 0a4f 6B0A0000 		.4byte	0xa6b
 1971 0a53 15       		.uleb128 0x15
 1972 0a54 72657400 		.ascii	"ret\000"
 1973 0a58 04       		.byte	0x4
 1974 0a59 8001     		.2byte	0x180
 1975 0a5b E9010000 		.4byte	0x1e9
 1976 0a5f 00       		.byte	0
 1977 0a60 0D       		.uleb128 0xd
 1978 0a61 04       		.byte	0x4
 1979 0a62 660A0000 		.4byte	0xa66
 1980 0a66 10       		.uleb128 0x10
 1981 0a67 B7060000 		.4byte	0x6b7
 1982 0a6b 10       		.uleb128 0x10
 1983 0a6c 600A0000 		.4byte	0xa60
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 66


 1984 0a70 13       		.uleb128 0x13
 1985 0a71 BF010000 		.4byte	.LASF125
 1986 0a75 04       		.byte	0x4
 1987 0a76 3501     		.2byte	0x135
 1988 0a78 E9010000 		.4byte	0x1e9
 1989 0a7c 03       		.byte	0x3
 1990 0a7d CC0A0000 		.4byte	0xacc
 1991 0a81 14       		.uleb128 0x14
 1992 0a82 00080000 		.4byte	.LASF111
 1993 0a86 04       		.byte	0x4
 1994 0a87 3501     		.2byte	0x135
 1995 0a89 D20A0000 		.4byte	0xad2
 1996 0a8d 14       		.uleb128 0x14
 1997 0a8e D6020000 		.4byte	.LASF83
 1998 0a92 04       		.byte	0x4
 1999 0a93 3501     		.2byte	0x135
 2000 0a95 C6050000 		.4byte	0x5c6
 2001 0a99 15       		.uleb128 0x15
 2002 0a9a 72657400 		.ascii	"ret\000"
 2003 0a9e 04       		.byte	0x4
 2004 0a9f 3801     		.2byte	0x138
 2005 0aa1 E9010000 		.4byte	0x1e9
 2006 0aa5 16       		.uleb128 0x16
 2007 0aa6 1F090000 		.4byte	.LASF112
 2008 0aaa 04       		.byte	0x4
 2009 0aab 3901     		.2byte	0x139
 2010 0aad C2000000 		.4byte	0xc2
 2011 0ab1 16       		.uleb128 0x16
 2012 0ab2 8A000000 		.4byte	.LASF113
 2013 0ab6 04       		.byte	0x4
 2014 0ab7 4301     		.2byte	0x143
 2015 0ab9 70030000 		.4byte	0x370
 2016 0abd 17       		.uleb128 0x17
 2017 0abe 16       		.uleb128 0x16
 2018 0abf CB000000 		.4byte	.LASF114
 2019 0ac3 04       		.byte	0x4
 2020 0ac4 4801     		.2byte	0x148
 2021 0ac6 0B010000 		.4byte	0x10b
 2022 0aca 00       		.byte	0
 2023 0acb 00       		.byte	0
 2024 0acc 0D       		.uleb128 0xd
 2025 0acd 04       		.byte	0x4
 2026 0ace B7060000 		.4byte	0x6b7
 2027 0ad2 10       		.uleb128 0x10
 2028 0ad3 CC0A0000 		.4byte	0xacc
 2029 0ad7 13       		.uleb128 0x13
 2030 0ad8 A1060000 		.4byte	.LASF126
 2031 0adc 05       		.byte	0x5
 2032 0add 7E01     		.2byte	0x17e
 2033 0adf E9010000 		.4byte	0x1e9
 2034 0ae3 03       		.byte	0x3
 2035 0ae4 010B0000 		.4byte	0xb01
 2036 0ae8 14       		.uleb128 0x14
 2037 0ae9 00080000 		.4byte	.LASF111
 2038 0aed 05       		.byte	0x5
 2039 0aee 7E01     		.2byte	0x17e
 2040 0af0 0C0B0000 		.4byte	0xb0c
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 67


 2041 0af4 15       		.uleb128 0x15
 2042 0af5 72657400 		.ascii	"ret\000"
 2043 0af9 05       		.byte	0x5
 2044 0afa 8001     		.2byte	0x180
 2045 0afc E9010000 		.4byte	0x1e9
 2046 0b00 00       		.byte	0
 2047 0b01 0D       		.uleb128 0xd
 2048 0b02 04       		.byte	0x4
 2049 0b03 070B0000 		.4byte	0xb07
 2050 0b07 10       		.uleb128 0x10
 2051 0b08 24080000 		.4byte	0x824
 2052 0b0c 10       		.uleb128 0x10
 2053 0b0d 010B0000 		.4byte	0xb01
 2054 0b11 13       		.uleb128 0x13
 2055 0b12 3E060000 		.4byte	.LASF127
 2056 0b16 05       		.byte	0x5
 2057 0b17 3501     		.2byte	0x135
 2058 0b19 E9010000 		.4byte	0x1e9
 2059 0b1d 03       		.byte	0x3
 2060 0b1e 6D0B0000 		.4byte	0xb6d
 2061 0b22 14       		.uleb128 0x14
 2062 0b23 00080000 		.4byte	.LASF111
 2063 0b27 05       		.byte	0x5
 2064 0b28 3501     		.2byte	0x135
 2065 0b2a 730B0000 		.4byte	0xb73
 2066 0b2e 14       		.uleb128 0x14
 2067 0b2f D6020000 		.4byte	.LASF83
 2068 0b33 05       		.byte	0x5
 2069 0b34 3501     		.2byte	0x135
 2070 0b36 33070000 		.4byte	0x733
 2071 0b3a 15       		.uleb128 0x15
 2072 0b3b 72657400 		.ascii	"ret\000"
 2073 0b3f 05       		.byte	0x5
 2074 0b40 3801     		.2byte	0x138
 2075 0b42 E9010000 		.4byte	0x1e9
 2076 0b46 16       		.uleb128 0x16
 2077 0b47 1F090000 		.4byte	.LASF112
 2078 0b4b 05       		.byte	0x5
 2079 0b4c 3901     		.2byte	0x139
 2080 0b4e C2000000 		.4byte	0xc2
 2081 0b52 16       		.uleb128 0x16
 2082 0b53 8A000000 		.4byte	.LASF113
 2083 0b57 05       		.byte	0x5
 2084 0b58 4301     		.2byte	0x143
 2085 0b5a 70030000 		.4byte	0x370
 2086 0b5e 17       		.uleb128 0x17
 2087 0b5f 16       		.uleb128 0x16
 2088 0b60 CB000000 		.4byte	.LASF114
 2089 0b64 05       		.byte	0x5
 2090 0b65 4801     		.2byte	0x148
 2091 0b67 0B010000 		.4byte	0x10b
 2092 0b6b 00       		.byte	0
 2093 0b6c 00       		.byte	0
 2094 0b6d 0D       		.uleb128 0xd
 2095 0b6e 04       		.byte	0x4
 2096 0b6f 24080000 		.4byte	0x824
 2097 0b73 10       		.uleb128 0x10
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 68


 2098 0b74 6D0B0000 		.4byte	0xb6d
 2099 0b78 1B       		.uleb128 0x1b
 2100 0b79 A2000000 		.4byte	.LASF128
 2101 0b7d 01       		.byte	0x1
 2102 0b7e 2C       		.byte	0x2c
 2103 0b7f 00000000 		.4byte	.LFB180
 2104 0b83 94000000 		.4byte	.LFE180-.LFB180
 2105 0b87 01       		.uleb128 0x1
 2106 0b88 9C       		.byte	0x9c
 2107 0b89 BD0C0000 		.4byte	0xcbd
 2108 0b8d 1C       		.uleb128 0x1c
 2109 0b8e 657600   		.ascii	"ev\000"
 2110 0b91 01       		.byte	0x1
 2111 0b92 2C       		.byte	0x2c
 2112 0b93 0A020000 		.4byte	0x20a
 2113 0b97 00000000 		.4byte	.LLST0
 2114 0b9b 1D       		.uleb128 0x1d
 2115 0b9c E7080000 		.4byte	0x8e7
 2116 0ba0 04000000 		.4byte	.LBB53
 2117 0ba4 82000000 		.4byte	.LBE53-.LBB53
 2118 0ba8 01       		.byte	0x1
 2119 0ba9 30       		.byte	0x30
 2120 0baa AD0C0000 		.4byte	0xcad
 2121 0bae 1E       		.uleb128 0x1e
 2122 0baf F8080000 		.4byte	0x8f8
 2123 0bb3 1F       		.uleb128 0x1f
 2124 0bb4 04000000 		.4byte	.LBB54
 2125 0bb8 82000000 		.4byte	.LBE54-.LBB54
 2126 0bbc 20       		.uleb128 0x20
 2127 0bbd 04090000 		.4byte	0x904
 2128 0bc1 1F000000 		.4byte	.LLST1
 2129 0bc5 1F       		.uleb128 0x1f
 2130 0bc6 0E000000 		.4byte	.LBB55
 2131 0bca 78000000 		.4byte	.LBE55-.LBB55
 2132 0bce 21       		.uleb128 0x21
 2133 0bcf 11090000 		.4byte	0x911
 2134 0bd3 02       		.uleb128 0x2
 2135 0bd4 91       		.byte	0x91
 2136 0bd5 68       		.sleb128 -24
 2137 0bd6 22       		.uleb128 0x22
 2138 0bd7 2F080000 		.4byte	0x82f
 2139 0bdb 26000000 		.4byte	.LBB56
 2140 0bdf 34000000 		.4byte	.LBE56-.LBB56
 2141 0be3 02       		.byte	0x2
 2142 0be4 6A01     		.2byte	0x16a
 2143 0be6 390C0000 		.4byte	0xc39
 2144 0bea 23       		.uleb128 0x23
 2145 0beb 4C080000 		.4byte	0x84c
 2146 0bef 02       		.uleb128 0x2
 2147 0bf0 91       		.byte	0x91
 2148 0bf1 6C       		.sleb128 -20
 2149 0bf2 1E       		.uleb128 0x1e
 2150 0bf3 40080000 		.4byte	0x840
 2151 0bf7 1F       		.uleb128 0x1f
 2152 0bf8 26000000 		.4byte	.LBB57
 2153 0bfc 34000000 		.4byte	.LBE57-.LBB57
 2154 0c00 20       		.uleb128 0x20
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 69


 2155 0c01 58080000 		.4byte	0x858
 2156 0c05 5F000000 		.4byte	.LLST2
 2157 0c09 20       		.uleb128 0x20
 2158 0c0a 64080000 		.4byte	0x864
 2159 0c0e 73000000 		.4byte	.LLST3
 2160 0c12 20       		.uleb128 0x20
 2161 0c13 70080000 		.4byte	0x870
 2162 0c17 A9000000 		.4byte	.LLST4
 2163 0c1b 1F       		.uleb128 0x1f
 2164 0c1c 3E000000 		.4byte	.LBB58
 2165 0c20 0A000000 		.4byte	.LBE58-.LBB58
 2166 0c24 20       		.uleb128 0x20
 2167 0c25 7D080000 		.4byte	0x87d
 2168 0c29 BC000000 		.4byte	.LLST5
 2169 0c2d 24       		.uleb128 0x24
 2170 0c2e 48000000 		.4byte	.LVL7
 2171 0c32 EB100000 		.4byte	0x10eb
 2172 0c36 00       		.byte	0
 2173 0c37 00       		.byte	0
 2174 0c38 00       		.byte	0
 2175 0c39 22       		.uleb128 0x22
 2176 0c3a 96080000 		.4byte	0x896
 2177 0c3e 5A000000 		.4byte	.LBB59
 2178 0c42 2C000000 		.4byte	.LBE59-.LBB59
 2179 0c46 02       		.byte	0x2
 2180 0c47 6F01     		.2byte	0x16f
 2181 0c49 9E0C0000 		.4byte	0xc9e
 2182 0c4d 25       		.uleb128 0x25
 2183 0c4e B1080000 		.4byte	0x8b1
 2184 0c52 D5000000 		.4byte	.LLST6
 2185 0c56 1E       		.uleb128 0x1e
 2186 0c57 A6080000 		.4byte	0x8a6
 2187 0c5b 1F       		.uleb128 0x1f
 2188 0c5c 5A000000 		.4byte	.LBB60
 2189 0c60 2C000000 		.4byte	.LBE60-.LBB60
 2190 0c64 20       		.uleb128 0x20
 2191 0c65 BC080000 		.4byte	0x8bc
 2192 0c69 E9000000 		.4byte	.LLST7
 2193 0c6d 1F       		.uleb128 0x1f
 2194 0c6e 60000000 		.4byte	.LBB61
 2195 0c72 26000000 		.4byte	.LBE61-.LBB61
 2196 0c76 20       		.uleb128 0x20
 2197 0c77 C8080000 		.4byte	0x8c8
 2198 0c7b 1F010000 		.4byte	.LLST8
 2199 0c7f 1F       		.uleb128 0x1f
 2200 0c80 6C000000 		.4byte	.LBB62
 2201 0c84 0A000000 		.4byte	.LBE62-.LBB62
 2202 0c88 20       		.uleb128 0x20
 2203 0c89 D4080000 		.4byte	0x8d4
 2204 0c8d 32010000 		.4byte	.LLST9
 2205 0c91 24       		.uleb128 0x24
 2206 0c92 76000000 		.4byte	.LVL15
 2207 0c96 EB100000 		.4byte	0x10eb
 2208 0c9a 00       		.byte	0
 2209 0c9b 00       		.byte	0
 2210 0c9c 00       		.byte	0
 2211 0c9d 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 70


 2212 0c9e 26       		.uleb128 0x26
 2213 0c9f 1C000000 		.4byte	.LVL2
 2214 0ca3 27       		.uleb128 0x27
 2215 0ca4 01       		.uleb128 0x1
 2216 0ca5 50       		.byte	0x50
 2217 0ca6 02       		.uleb128 0x2
 2218 0ca7 91       		.byte	0x91
 2219 0ca8 68       		.sleb128 -24
 2220 0ca9 00       		.byte	0
 2221 0caa 00       		.byte	0
 2222 0cab 00       		.byte	0
 2223 0cac 00       		.byte	0
 2224 0cad 28       		.uleb128 0x28
 2225 0cae 8C000000 		.4byte	.LVL20
 2226 0cb2 F7100000 		.4byte	0x10f7
 2227 0cb6 27       		.uleb128 0x27
 2228 0cb7 01       		.uleb128 0x1
 2229 0cb8 50       		.byte	0x50
 2230 0cb9 01       		.uleb128 0x1
 2231 0cba 30       		.byte	0x30
 2232 0cbb 00       		.byte	0
 2233 0cbc 00       		.byte	0
 2234 0cbd 1B       		.uleb128 0x1b
 2235 0cbe D0000000 		.4byte	.LASF129
 2236 0cc2 01       		.byte	0x1
 2237 0cc3 41       		.byte	0x41
 2238 0cc4 00000000 		.4byte	.LFB181
 2239 0cc8 B8000000 		.4byte	.LFE181-.LFB181
 2240 0ccc 01       		.uleb128 0x1
 2241 0ccd 9C       		.byte	0x9c
 2242 0cce 2F0E0000 		.4byte	0xe2f
 2243 0cd2 1C       		.uleb128 0x1c
 2244 0cd3 657600   		.ascii	"ev\000"
 2245 0cd6 01       		.byte	0x1
 2246 0cd7 41       		.byte	0x41
 2247 0cd8 0A020000 		.4byte	0x20a
 2248 0cdc 4B010000 		.4byte	.LLST10
 2249 0ce0 29       		.uleb128 0x29
 2250 0ce1 0A000000 		.4byte	.LBB63
 2251 0ce5 62000000 		.4byte	.LBE63-.LBB63
 2252 0ce9 AB0D0000 		.4byte	0xdab
 2253 0ced 2A       		.uleb128 0x2a
 2254 0cee 62050000 		.4byte	.LASF130
 2255 0cf2 01       		.byte	0x1
 2256 0cf3 46       		.byte	0x46
 2257 0cf4 FD030000 		.4byte	0x3fd
 2258 0cf8 B7010000 		.4byte	.LLST11
 2259 0cfc 2B       		.uleb128 0x2b
 2260 0cfd B5020000 		.4byte	.LASF131
 2261 0d01 01       		.byte	0x1
 2262 0d02 47       		.byte	0x47
 2263 0d03 71020000 		.4byte	0x271
 2264 0d07 02       		.uleb128 0x2
 2265 0d08 91       		.byte	0x91
 2266 0d09 64       		.sleb128 -28
 2267 0d0a 1D       		.uleb128 0x1d
 2268 0d0b 1F090000 		.4byte	0x91f
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 71


 2269 0d0f 12000000 		.4byte	.LBB64
 2270 0d13 04000000 		.4byte	.LBE64-.LBB64
 2271 0d17 01       		.byte	0x1
 2272 0d18 4A       		.byte	0x4a
 2273 0d19 230D0000 		.4byte	0xd23
 2274 0d1d 1E       		.uleb128 0x1e
 2275 0d1e 2F090000 		.4byte	0x92f
 2276 0d22 00       		.byte	0
 2277 0d23 1D       		.uleb128 0x1d
 2278 0d24 4B090000 		.4byte	0x94b
 2279 0d28 1A000000 		.4byte	.LBB66
 2280 0d2c 0C000000 		.4byte	.LBE66-.LBB66
 2281 0d30 01       		.byte	0x1
 2282 0d31 4B       		.byte	0x4b
 2283 0d32 3C0D0000 		.4byte	0xd3c
 2284 0d36 1E       		.uleb128 0x1e
 2285 0d37 5C090000 		.4byte	0x95c
 2286 0d3b 00       		.byte	0
 2287 0d3c 1D       		.uleb128 0x1d
 2288 0d3d 69090000 		.4byte	0x969
 2289 0d41 34000000 		.4byte	.LBB68
 2290 0d45 32000000 		.4byte	.LBE68-.LBB68
 2291 0d49 01       		.byte	0x1
 2292 0d4a 5A       		.byte	0x5a
 2293 0d4b 9B0D0000 		.4byte	0xd9b
 2294 0d4f 1E       		.uleb128 0x1e
 2295 0d50 86090000 		.4byte	0x986
 2296 0d54 1E       		.uleb128 0x1e
 2297 0d55 7A090000 		.4byte	0x97a
 2298 0d59 1F       		.uleb128 0x1f
 2299 0d5a 34000000 		.4byte	.LBB69
 2300 0d5e 32000000 		.4byte	.LBE69-.LBB69
 2301 0d62 20       		.uleb128 0x20
 2302 0d63 92090000 		.4byte	0x992
 2303 0d67 CA010000 		.4byte	.LLST12
 2304 0d6b 20       		.uleb128 0x20
 2305 0d6c 9E090000 		.4byte	0x99e
 2306 0d70 DE010000 		.4byte	.LLST13
 2307 0d74 20       		.uleb128 0x20
 2308 0d75 AA090000 		.4byte	0x9aa
 2309 0d79 14020000 		.4byte	.LLST14
 2310 0d7d 1F       		.uleb128 0x1f
 2311 0d7e 4C000000 		.4byte	.LBB70
 2312 0d82 0A000000 		.4byte	.LBE70-.LBB70
 2313 0d86 20       		.uleb128 0x20
 2314 0d87 B7090000 		.4byte	0x9b7
 2315 0d8b 27020000 		.4byte	.LLST15
 2316 0d8f 24       		.uleb128 0x24
 2317 0d90 56000000 		.4byte	.LVL32
 2318 0d94 EB100000 		.4byte	0x10eb
 2319 0d98 00       		.byte	0
 2320 0d99 00       		.byte	0
 2321 0d9a 00       		.byte	0
 2322 0d9b 28       		.uleb128 0x28
 2323 0d9c 6C000000 		.4byte	.LVL37
 2324 0da0 F7100000 		.4byte	0x10f7
 2325 0da4 27       		.uleb128 0x27
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 72


 2326 0da5 01       		.uleb128 0x1
 2327 0da6 50       		.byte	0x50
 2328 0da7 01       		.uleb128 0x1
 2329 0da8 31       		.byte	0x31
 2330 0da9 00       		.byte	0
 2331 0daa 00       		.byte	0
 2332 0dab 1F       		.uleb128 0x1f
 2333 0dac 74000000 		.4byte	.LBB71
 2334 0db0 38000000 		.4byte	.LBE71-.LBB71
 2335 0db4 1A       		.uleb128 0x1a
 2336 0db5 62050000 		.4byte	.LASF130
 2337 0db9 01       		.byte	0x1
 2338 0dba 60       		.byte	0x60
 2339 0dbb FD030000 		.4byte	0x3fd
 2340 0dbf 1D       		.uleb128 0x1d
 2341 0dc0 69090000 		.4byte	0x969
 2342 0dc4 76000000 		.4byte	.LBB72
 2343 0dc8 30000000 		.4byte	.LBE72-.LBB72
 2344 0dcc 01       		.byte	0x1
 2345 0dcd 62       		.byte	0x62
 2346 0dce 1E0E0000 		.4byte	0xe1e
 2347 0dd2 1E       		.uleb128 0x1e
 2348 0dd3 86090000 		.4byte	0x986
 2349 0dd7 1E       		.uleb128 0x1e
 2350 0dd8 7A090000 		.4byte	0x97a
 2351 0ddc 1F       		.uleb128 0x1f
 2352 0ddd 76000000 		.4byte	.LBB73
 2353 0de1 30000000 		.4byte	.LBE73-.LBB73
 2354 0de5 20       		.uleb128 0x20
 2355 0de6 92090000 		.4byte	0x992
 2356 0dea 40020000 		.4byte	.LLST16
 2357 0dee 20       		.uleb128 0x20
 2358 0def 9E090000 		.4byte	0x99e
 2359 0df3 54020000 		.4byte	.LLST17
 2360 0df7 20       		.uleb128 0x20
 2361 0df8 AA090000 		.4byte	0x9aa
 2362 0dfc 8A020000 		.4byte	.LLST18
 2363 0e00 1F       		.uleb128 0x1f
 2364 0e01 8C000000 		.4byte	.LBB74
 2365 0e05 0A000000 		.4byte	.LBE74-.LBB74
 2366 0e09 20       		.uleb128 0x20
 2367 0e0a B7090000 		.4byte	0x9b7
 2368 0e0e 9D020000 		.4byte	.LLST19
 2369 0e12 24       		.uleb128 0x24
 2370 0e13 96000000 		.4byte	.LVL42
 2371 0e17 EB100000 		.4byte	0x10eb
 2372 0e1b 00       		.byte	0
 2373 0e1c 00       		.byte	0
 2374 0e1d 00       		.byte	0
 2375 0e1e 28       		.uleb128 0x28
 2376 0e1f AC000000 		.4byte	.LVL47
 2377 0e23 F7100000 		.4byte	0x10f7
 2378 0e27 27       		.uleb128 0x27
 2379 0e28 01       		.uleb128 0x1
 2380 0e29 50       		.byte	0x50
 2381 0e2a 01       		.uleb128 0x1
 2382 0e2b 31       		.byte	0x31
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 73


 2383 0e2c 00       		.byte	0
 2384 0e2d 00       		.byte	0
 2385 0e2e 00       		.byte	0
 2386 0e2f 2C       		.uleb128 0x2c
 2387 0e30 D2080000 		.4byte	.LASF132
 2388 0e34 01       		.byte	0x1
 2389 0e35 74       		.byte	0x74
 2390 0e36 00000000 		.4byte	.LFB182
 2391 0e3a 70000000 		.4byte	.LFE182-.LFB182
 2392 0e3e 01       		.uleb128 0x1
 2393 0e3f 9C       		.byte	0x9c
 2394 0e40 450F0000 		.4byte	0xf45
 2395 0e44 1C       		.uleb128 0x1c
 2396 0e45 657600   		.ascii	"ev\000"
 2397 0e48 01       		.byte	0x1
 2398 0e49 74       		.byte	0x74
 2399 0e4a 0A020000 		.4byte	0x20a
 2400 0e4e B6020000 		.4byte	.LLST20
 2401 0e52 2A       		.uleb128 0x2a
 2402 0e53 62050000 		.4byte	.LASF130
 2403 0e57 01       		.byte	0x1
 2404 0e58 79       		.byte	0x79
 2405 0e59 FD030000 		.4byte	0x3fd
 2406 0e5d D5020000 		.4byte	.LLST21
 2407 0e61 1A       		.uleb128 0x1a
 2408 0e62 E7060000 		.4byte	.LASF133
 2409 0e66 01       		.byte	0x1
 2410 0e67 7A       		.byte	0x7a
 2411 0e68 A2000000 		.4byte	0xa2
 2412 0e6c 2A       		.uleb128 0x2a
 2413 0e6d 55090000 		.4byte	.LASF134
 2414 0e71 01       		.byte	0x1
 2415 0e72 7C       		.byte	0x7c
 2416 0e73 6A050000 		.4byte	0x56a
 2417 0e77 E8020000 		.4byte	.LLST22
 2418 0e7b 1D       		.uleb128 0x1d
 2419 0e7c D0090000 		.4byte	0x9d0
 2420 0e80 06000000 		.4byte	.LBB75
 2421 0e84 04000000 		.4byte	.LBE75-.LBB75
 2422 0e88 01       		.byte	0x1
 2423 0e89 80       		.byte	0x80
 2424 0e8a 940E0000 		.4byte	0xe94
 2425 0e8e 1E       		.uleb128 0x1e
 2426 0e8f E0090000 		.4byte	0x9e0
 2427 0e93 00       		.byte	0
 2428 0e94 1D       		.uleb128 0x1d
 2429 0e95 1A0A0000 		.4byte	0xa1a
 2430 0e99 12000000 		.4byte	.LBB77
 2431 0e9d 04000000 		.4byte	.LBE77-.LBB77
 2432 0ea1 01       		.byte	0x1
 2433 0ea2 87       		.byte	0x87
 2434 0ea3 AD0E0000 		.4byte	0xead
 2435 0ea7 1E       		.uleb128 0x1e
 2436 0ea8 2A0A0000 		.4byte	0xa2a
 2437 0eac 00       		.byte	0
 2438 0ead 1D       		.uleb128 0x1d
 2439 0eae 700A0000 		.4byte	0xa70
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 74


 2440 0eb2 1E000000 		.4byte	.LBB79
 2441 0eb6 32000000 		.4byte	.LBE79-.LBB79
 2442 0eba 01       		.byte	0x1
 2443 0ebb 91       		.byte	0x91
 2444 0ebc 090F0000 		.4byte	0xf09
 2445 0ec0 1E       		.uleb128 0x1e
 2446 0ec1 8D0A0000 		.4byte	0xa8d
 2447 0ec5 1E       		.uleb128 0x1e
 2448 0ec6 810A0000 		.4byte	0xa81
 2449 0eca 1F       		.uleb128 0x1f
 2450 0ecb 1E000000 		.4byte	.LBB80
 2451 0ecf 32000000 		.4byte	.LBE80-.LBB80
 2452 0ed3 2D       		.uleb128 0x2d
 2453 0ed4 990A0000 		.4byte	0xa99
 2454 0ed8 00       		.byte	0
 2455 0ed9 20       		.uleb128 0x20
 2456 0eda A50A0000 		.4byte	0xaa5
 2457 0ede FB020000 		.4byte	.LLST23
 2458 0ee2 20       		.uleb128 0x20
 2459 0ee3 B10A0000 		.4byte	0xab1
 2460 0ee7 31030000 		.4byte	.LLST24
 2461 0eeb 1F       		.uleb128 0x1f
 2462 0eec 36000000 		.4byte	.LBB81
 2463 0ef0 0A000000 		.4byte	.LBE81-.LBB81
 2464 0ef4 20       		.uleb128 0x20
 2465 0ef5 BE0A0000 		.4byte	0xabe
 2466 0ef9 44030000 		.4byte	.LLST25
 2467 0efd 24       		.uleb128 0x24
 2468 0efe 40000000 		.4byte	.LVL61
 2469 0f02 EB100000 		.4byte	0x10eb
 2470 0f06 00       		.byte	0
 2471 0f07 00       		.byte	0
 2472 0f08 00       		.byte	0
 2473 0f09 1D       		.uleb128 0x1d
 2474 0f0a 360A0000 		.4byte	0xa36
 2475 0f0e 56000000 		.4byte	.LBB82
 2476 0f12 1A000000 		.4byte	.LBE82-.LBB82
 2477 0f16 01       		.byte	0x1
 2478 0f17 94       		.byte	0x94
 2479 0f18 350F0000 		.4byte	0xf35
 2480 0f1c 1E       		.uleb128 0x1e
 2481 0f1d 470A0000 		.4byte	0xa47
 2482 0f21 1F       		.uleb128 0x1f
 2483 0f22 56000000 		.4byte	.LBB83
 2484 0f26 1A000000 		.4byte	.LBE83-.LBB83
 2485 0f2a 20       		.uleb128 0x20
 2486 0f2b 530A0000 		.4byte	0xa53
 2487 0f2f 5D030000 		.4byte	.LLST26
 2488 0f33 00       		.byte	0
 2489 0f34 00       		.byte	0
 2490 0f35 28       		.uleb128 0x28
 2491 0f36 56000000 		.4byte	.LVL66
 2492 0f3a F7100000 		.4byte	0x10f7
 2493 0f3e 27       		.uleb128 0x27
 2494 0f3f 01       		.uleb128 0x1
 2495 0f40 50       		.byte	0x50
 2496 0f41 01       		.uleb128 0x1
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 75


 2497 0f42 32       		.byte	0x32
 2498 0f43 00       		.byte	0
 2499 0f44 00       		.byte	0
 2500 0f45 2C       		.uleb128 0x2c
 2501 0f46 9C090000 		.4byte	.LASF135
 2502 0f4a 01       		.byte	0x1
 2503 0f4b A6       		.byte	0xa6
 2504 0f4c 00000000 		.4byte	.LFB183
 2505 0f50 78000000 		.4byte	.LFE183-.LFB183
 2506 0f54 01       		.uleb128 0x1
 2507 0f55 9C       		.byte	0x9c
 2508 0f56 44100000 		.4byte	0x1044
 2509 0f5a 1C       		.uleb128 0x1c
 2510 0f5b 657600   		.ascii	"ev\000"
 2511 0f5e 01       		.byte	0x1
 2512 0f5f A6       		.byte	0xa6
 2513 0f60 0A020000 		.4byte	0x20a
 2514 0f64 72030000 		.4byte	.LLST27
 2515 0f68 1F       		.uleb128 0x1f
 2516 0f69 08000000 		.4byte	.LBB84
 2517 0f6d 70000000 		.4byte	.LBE84-.LBB84
 2518 0f71 2A       		.uleb128 0x2a
 2519 0f72 62050000 		.4byte	.LASF130
 2520 0f76 01       		.byte	0x1
 2521 0f77 AD       		.byte	0xad
 2522 0f78 FD030000 		.4byte	0x3fd
 2523 0f7c B7030000 		.4byte	.LLST28
 2524 0f80 2A       		.uleb128 0x2a
 2525 0f81 56020000 		.4byte	.LASF136
 2526 0f85 01       		.byte	0x1
 2527 0f86 B3       		.byte	0xb3
 2528 0f87 D7060000 		.4byte	0x6d7
 2529 0f8b CA030000 		.4byte	.LLST29
 2530 0f8f 1D       		.uleb128 0x1d
 2531 0f90 D0090000 		.4byte	0x9d0
 2532 0f94 0C000000 		.4byte	.LBB85
 2533 0f98 04000000 		.4byte	.LBE85-.LBB85
 2534 0f9c 01       		.byte	0x1
 2535 0f9d B0       		.byte	0xb0
 2536 0f9e A80F0000 		.4byte	0xfa8
 2537 0fa2 1E       		.uleb128 0x1e
 2538 0fa3 E0090000 		.4byte	0x9e0
 2539 0fa7 00       		.byte	0
 2540 0fa8 1D       		.uleb128 0x1d
 2541 0fa9 110B0000 		.4byte	0xb11
 2542 0fad 24000000 		.4byte	.LBB87
 2543 0fb1 32000000 		.4byte	.LBE87-.LBB87
 2544 0fb5 01       		.byte	0x1
 2545 0fb6 BC       		.byte	0xbc
 2546 0fb7 07100000 		.4byte	0x1007
 2547 0fbb 1E       		.uleb128 0x1e
 2548 0fbc 2E0B0000 		.4byte	0xb2e
 2549 0fc0 1E       		.uleb128 0x1e
 2550 0fc1 220B0000 		.4byte	0xb22
 2551 0fc5 1F       		.uleb128 0x1f
 2552 0fc6 24000000 		.4byte	.LBB88
 2553 0fca 32000000 		.4byte	.LBE88-.LBB88
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 76


 2554 0fce 20       		.uleb128 0x20
 2555 0fcf 3A0B0000 		.4byte	0xb3a
 2556 0fd3 DD030000 		.4byte	.LLST30
 2557 0fd7 20       		.uleb128 0x20
 2558 0fd8 460B0000 		.4byte	0xb46
 2559 0fdc F1030000 		.4byte	.LLST31
 2560 0fe0 20       		.uleb128 0x20
 2561 0fe1 520B0000 		.4byte	0xb52
 2562 0fe5 27040000 		.4byte	.LLST32
 2563 0fe9 1F       		.uleb128 0x1f
 2564 0fea 3C000000 		.4byte	.LBB89
 2565 0fee 0A000000 		.4byte	.LBE89-.LBB89
 2566 0ff2 20       		.uleb128 0x20
 2567 0ff3 5F0B0000 		.4byte	0xb5f
 2568 0ff7 3A040000 		.4byte	.LLST33
 2569 0ffb 24       		.uleb128 0x24
 2570 0ffc 46000000 		.4byte	.LVL80
 2571 1000 EB100000 		.4byte	0x10eb
 2572 1004 00       		.byte	0
 2573 1005 00       		.byte	0
 2574 1006 00       		.byte	0
 2575 1007 1D       		.uleb128 0x1d
 2576 1008 D70A0000 		.4byte	0xad7
 2577 100c 5C000000 		.4byte	.LBB90
 2578 1010 1C000000 		.4byte	.LBE90-.LBB90
 2579 1014 01       		.byte	0x1
 2580 1015 BF       		.byte	0xbf
 2581 1016 33100000 		.4byte	0x1033
 2582 101a 1E       		.uleb128 0x1e
 2583 101b E80A0000 		.4byte	0xae8
 2584 101f 1F       		.uleb128 0x1f
 2585 1020 5C000000 		.4byte	.LBB91
 2586 1024 1C000000 		.4byte	.LBE91-.LBB91
 2587 1028 20       		.uleb128 0x20
 2588 1029 F40A0000 		.4byte	0xaf4
 2589 102d 53040000 		.4byte	.LLST34
 2590 1031 00       		.byte	0
 2591 1032 00       		.byte	0
 2592 1033 28       		.uleb128 0x28
 2593 1034 5C000000 		.4byte	.LVL85
 2594 1038 F7100000 		.4byte	0x10f7
 2595 103c 27       		.uleb128 0x27
 2596 103d 01       		.uleb128 0x1
 2597 103e 50       		.byte	0x50
 2598 103f 01       		.uleb128 0x1
 2599 1040 33       		.byte	0x33
 2600 1041 00       		.byte	0
 2601 1042 00       		.byte	0
 2602 1043 00       		.byte	0
 2603 1044 1B       		.uleb128 0x1b
 2604 1045 F6010000 		.4byte	.LASF137
 2605 1049 01       		.byte	0x1
 2606 104a D2       		.byte	0xd2
 2607 104b 00000000 		.4byte	.LFB184
 2608 104f 0A000000 		.4byte	.LFE184-.LFB184
 2609 1053 01       		.uleb128 0x1
 2610 1054 9C       		.byte	0x9c
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 77


 2611 1055 77100000 		.4byte	0x1077
 2612 1059 1C       		.uleb128 0x1c
 2613 105a 657600   		.ascii	"ev\000"
 2614 105d 01       		.byte	0x1
 2615 105e D2       		.byte	0xd2
 2616 105f 0A020000 		.4byte	0x20a
 2617 1063 68040000 		.4byte	.LLST35
 2618 1067 28       		.uleb128 0x28
 2619 1068 08000000 		.4byte	.LVL90
 2620 106c F7100000 		.4byte	0x10f7
 2621 1070 27       		.uleb128 0x27
 2622 1071 01       		.uleb128 0x1
 2623 1072 50       		.byte	0x50
 2624 1073 01       		.uleb128 0x1
 2625 1074 34       		.byte	0x34
 2626 1075 00       		.byte	0
 2627 1076 00       		.byte	0
 2628 1077 2E       		.uleb128 0x2e
 2629 1078 E4030000 		.4byte	.LASF138
 2630 107c 13       		.byte	0x13
 2631 107d 40       		.byte	0x40
 2632 107e EA000000 		.4byte	0xea
 2633 1082 2E       		.uleb128 0x2e
 2634 1083 13050000 		.4byte	.LASF139
 2635 1087 13       		.byte	0x13
 2636 1088 47       		.byte	0x47
 2637 1089 F5000000 		.4byte	0xf5
 2638 108d 2E       		.uleb128 0x2e
 2639 108e 3D050000 		.4byte	.LASF140
 2640 1092 13       		.byte	0x13
 2641 1093 4A       		.byte	0x4a
 2642 1094 EA000000 		.4byte	0xea
 2643 1098 2E       		.uleb128 0x2e
 2644 1099 B0070000 		.4byte	.LASF141
 2645 109d 14       		.byte	0x14
 2646 109e 48       		.byte	0x48
 2647 109f 00010000 		.4byte	0x100
 2648 10a3 2E       		.uleb128 0x2e
 2649 10a4 36090000 		.4byte	.LASF142
 2650 10a8 15       		.byte	0x15
 2651 10a9 44       		.byte	0x44
 2652 10aa EA000000 		.4byte	0xea
 2653 10ae 2F       		.uleb128 0x2f
 2654 10af 61010000 		.4byte	.LASF143
 2655 10b3 16       		.byte	0x16
 2656 10b4 1207     		.2byte	0x712
 2657 10b6 BA100000 		.4byte	0x10ba
 2658 10ba 30       		.uleb128 0x30
 2659 10bb 97000000 		.4byte	0x97
 2660 10bf 2E       		.uleb128 0x2e
 2661 10c0 15030000 		.4byte	.LASF144
 2662 10c4 17       		.byte	0x17
 2663 10c5 2C       		.byte	0x2c
 2664 10c6 DD030000 		.4byte	0x3dd
 2665 10ca 2E       		.uleb128 0x2e
 2666 10cb 12070000 		.4byte	.LASF145
 2667 10cf 17       		.byte	0x17
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 78


 2668 10d0 3B       		.byte	0x3b
 2669 10d1 4A050000 		.4byte	0x54a
 2670 10d5 2E       		.uleb128 0x2e
 2671 10d6 1F010000 		.4byte	.LASF146
 2672 10da 17       		.byte	0x17
 2673 10db 4A       		.byte	0x4a
 2674 10dc B7060000 		.4byte	0x6b7
 2675 10e0 2E       		.uleb128 0x2e
 2676 10e1 10020000 		.4byte	.LASF147
 2677 10e5 17       		.byte	0x17
 2678 10e6 68       		.byte	0x68
 2679 10e7 24080000 		.4byte	0x824
 2680 10eb 31       		.uleb128 0x31
 2681 10ec E9000000 		.4byte	.LASF148
 2682 10f0 E9000000 		.4byte	.LASF148
 2683 10f4 18       		.byte	0x18
 2684 10f5 4A01     		.2byte	0x14a
 2685 10f7 32       		.uleb128 0x32
 2686 10f8 28030000 		.4byte	.LASF149
 2687 10fc 28030000 		.4byte	.LASF149
 2688 1100 19       		.byte	0x19
 2689 1101 86       		.byte	0x86
 2690 1102 00       		.byte	0
 2691              		.section	.debug_abbrev,"",%progbits
 2692              	.Ldebug_abbrev0:
 2693 0000 01       		.uleb128 0x1
 2694 0001 11       		.uleb128 0x11
 2695 0002 01       		.byte	0x1
 2696 0003 25       		.uleb128 0x25
 2697 0004 0E       		.uleb128 0xe
 2698 0005 13       		.uleb128 0x13
 2699 0006 0B       		.uleb128 0xb
 2700 0007 03       		.uleb128 0x3
 2701 0008 0E       		.uleb128 0xe
 2702 0009 1B       		.uleb128 0x1b
 2703 000a 0E       		.uleb128 0xe
 2704 000b 55       		.uleb128 0x55
 2705 000c 17       		.uleb128 0x17
 2706 000d 11       		.uleb128 0x11
 2707 000e 01       		.uleb128 0x1
 2708 000f 10       		.uleb128 0x10
 2709 0010 17       		.uleb128 0x17
 2710 0011 00       		.byte	0
 2711 0012 00       		.byte	0
 2712 0013 02       		.uleb128 0x2
 2713 0014 24       		.uleb128 0x24
 2714 0015 00       		.byte	0
 2715 0016 0B       		.uleb128 0xb
 2716 0017 0B       		.uleb128 0xb
 2717 0018 3E       		.uleb128 0x3e
 2718 0019 0B       		.uleb128 0xb
 2719 001a 03       		.uleb128 0x3
 2720 001b 0E       		.uleb128 0xe
 2721 001c 00       		.byte	0
 2722 001d 00       		.byte	0
 2723 001e 03       		.uleb128 0x3
 2724 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 79


 2725 0020 00       		.byte	0
 2726 0021 03       		.uleb128 0x3
 2727 0022 0E       		.uleb128 0xe
 2728 0023 3A       		.uleb128 0x3a
 2729 0024 0B       		.uleb128 0xb
 2730 0025 3B       		.uleb128 0x3b
 2731 0026 0B       		.uleb128 0xb
 2732 0027 49       		.uleb128 0x49
 2733 0028 13       		.uleb128 0x13
 2734 0029 00       		.byte	0
 2735 002a 00       		.byte	0
 2736 002b 04       		.uleb128 0x4
 2737 002c 24       		.uleb128 0x24
 2738 002d 00       		.byte	0
 2739 002e 0B       		.uleb128 0xb
 2740 002f 0B       		.uleb128 0xb
 2741 0030 3E       		.uleb128 0x3e
 2742 0031 0B       		.uleb128 0xb
 2743 0032 03       		.uleb128 0x3
 2744 0033 08       		.uleb128 0x8
 2745 0034 00       		.byte	0
 2746 0035 00       		.byte	0
 2747 0036 05       		.uleb128 0x5
 2748 0037 16       		.uleb128 0x16
 2749 0038 00       		.byte	0
 2750 0039 03       		.uleb128 0x3
 2751 003a 0E       		.uleb128 0xe
 2752 003b 3A       		.uleb128 0x3a
 2753 003c 0B       		.uleb128 0xb
 2754 003d 3B       		.uleb128 0x3b
 2755 003e 05       		.uleb128 0x5
 2756 003f 49       		.uleb128 0x49
 2757 0040 13       		.uleb128 0x13
 2758 0041 00       		.byte	0
 2759 0042 00       		.byte	0
 2760 0043 06       		.uleb128 0x6
 2761 0044 04       		.uleb128 0x4
 2762 0045 01       		.byte	0x1
 2763 0046 0B       		.uleb128 0xb
 2764 0047 0B       		.uleb128 0xb
 2765 0048 49       		.uleb128 0x49
 2766 0049 13       		.uleb128 0x13
 2767 004a 3A       		.uleb128 0x3a
 2768 004b 0B       		.uleb128 0xb
 2769 004c 3B       		.uleb128 0x3b
 2770 004d 0B       		.uleb128 0xb
 2771 004e 01       		.uleb128 0x1
 2772 004f 13       		.uleb128 0x13
 2773 0050 00       		.byte	0
 2774 0051 00       		.byte	0
 2775 0052 07       		.uleb128 0x7
 2776 0053 28       		.uleb128 0x28
 2777 0054 00       		.byte	0
 2778 0055 03       		.uleb128 0x3
 2779 0056 0E       		.uleb128 0xe
 2780 0057 1C       		.uleb128 0x1c
 2781 0058 0B       		.uleb128 0xb
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 80


 2782 0059 00       		.byte	0
 2783 005a 00       		.byte	0
 2784 005b 08       		.uleb128 0x8
 2785 005c 28       		.uleb128 0x28
 2786 005d 00       		.byte	0
 2787 005e 03       		.uleb128 0x3
 2788 005f 0E       		.uleb128 0xe
 2789 0060 1C       		.uleb128 0x1c
 2790 0061 0D       		.uleb128 0xd
 2791 0062 00       		.byte	0
 2792 0063 00       		.byte	0
 2793 0064 09       		.uleb128 0x9
 2794 0065 01       		.uleb128 0x1
 2795 0066 01       		.byte	0x1
 2796 0067 49       		.uleb128 0x49
 2797 0068 13       		.uleb128 0x13
 2798 0069 01       		.uleb128 0x1
 2799 006a 13       		.uleb128 0x13
 2800 006b 00       		.byte	0
 2801 006c 00       		.byte	0
 2802 006d 0A       		.uleb128 0xa
 2803 006e 21       		.uleb128 0x21
 2804 006f 00       		.byte	0
 2805 0070 00       		.byte	0
 2806 0071 00       		.byte	0
 2807 0072 0B       		.uleb128 0xb
 2808 0073 13       		.uleb128 0x13
 2809 0074 01       		.byte	0x1
 2810 0075 0B       		.uleb128 0xb
 2811 0076 0B       		.uleb128 0xb
 2812 0077 3A       		.uleb128 0x3a
 2813 0078 0B       		.uleb128 0xb
 2814 0079 3B       		.uleb128 0x3b
 2815 007a 0B       		.uleb128 0xb
 2816 007b 01       		.uleb128 0x1
 2817 007c 13       		.uleb128 0x13
 2818 007d 00       		.byte	0
 2819 007e 00       		.byte	0
 2820 007f 0C       		.uleb128 0xc
 2821 0080 0D       		.uleb128 0xd
 2822 0081 00       		.byte	0
 2823 0082 03       		.uleb128 0x3
 2824 0083 0E       		.uleb128 0xe
 2825 0084 3A       		.uleb128 0x3a
 2826 0085 0B       		.uleb128 0xb
 2827 0086 3B       		.uleb128 0x3b
 2828 0087 0B       		.uleb128 0xb
 2829 0088 49       		.uleb128 0x49
 2830 0089 13       		.uleb128 0x13
 2831 008a 38       		.uleb128 0x38
 2832 008b 0B       		.uleb128 0xb
 2833 008c 00       		.byte	0
 2834 008d 00       		.byte	0
 2835 008e 0D       		.uleb128 0xd
 2836 008f 0F       		.uleb128 0xf
 2837 0090 00       		.byte	0
 2838 0091 0B       		.uleb128 0xb
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 81


 2839 0092 0B       		.uleb128 0xb
 2840 0093 49       		.uleb128 0x49
 2841 0094 13       		.uleb128 0x13
 2842 0095 00       		.byte	0
 2843 0096 00       		.byte	0
 2844 0097 0E       		.uleb128 0xe
 2845 0098 15       		.uleb128 0x15
 2846 0099 01       		.byte	0x1
 2847 009a 27       		.uleb128 0x27
 2848 009b 19       		.uleb128 0x19
 2849 009c 49       		.uleb128 0x49
 2850 009d 13       		.uleb128 0x13
 2851 009e 01       		.uleb128 0x1
 2852 009f 13       		.uleb128 0x13
 2853 00a0 00       		.byte	0
 2854 00a1 00       		.byte	0
 2855 00a2 0F       		.uleb128 0xf
 2856 00a3 05       		.uleb128 0x5
 2857 00a4 00       		.byte	0
 2858 00a5 49       		.uleb128 0x49
 2859 00a6 13       		.uleb128 0x13
 2860 00a7 00       		.byte	0
 2861 00a8 00       		.byte	0
 2862 00a9 10       		.uleb128 0x10
 2863 00aa 26       		.uleb128 0x26
 2864 00ab 00       		.byte	0
 2865 00ac 49       		.uleb128 0x49
 2866 00ad 13       		.uleb128 0x13
 2867 00ae 00       		.byte	0
 2868 00af 00       		.byte	0
 2869 00b0 11       		.uleb128 0x11
 2870 00b1 13       		.uleb128 0x13
 2871 00b2 01       		.byte	0x1
 2872 00b3 03       		.uleb128 0x3
 2873 00b4 0E       		.uleb128 0xe
 2874 00b5 0B       		.uleb128 0xb
 2875 00b6 0B       		.uleb128 0xb
 2876 00b7 3A       		.uleb128 0x3a
 2877 00b8 0B       		.uleb128 0xb
 2878 00b9 3B       		.uleb128 0x3b
 2879 00ba 0B       		.uleb128 0xb
 2880 00bb 01       		.uleb128 0x1
 2881 00bc 13       		.uleb128 0x13
 2882 00bd 00       		.byte	0
 2883 00be 00       		.byte	0
 2884 00bf 12       		.uleb128 0x12
 2885 00c0 0D       		.uleb128 0xd
 2886 00c1 00       		.byte	0
 2887 00c2 03       		.uleb128 0x3
 2888 00c3 08       		.uleb128 0x8
 2889 00c4 3A       		.uleb128 0x3a
 2890 00c5 0B       		.uleb128 0xb
 2891 00c6 3B       		.uleb128 0x3b
 2892 00c7 0B       		.uleb128 0xb
 2893 00c8 49       		.uleb128 0x49
 2894 00c9 13       		.uleb128 0x13
 2895 00ca 38       		.uleb128 0x38
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 82


 2896 00cb 0B       		.uleb128 0xb
 2897 00cc 00       		.byte	0
 2898 00cd 00       		.byte	0
 2899 00ce 13       		.uleb128 0x13
 2900 00cf 2E       		.uleb128 0x2e
 2901 00d0 01       		.byte	0x1
 2902 00d1 3F       		.uleb128 0x3f
 2903 00d2 19       		.uleb128 0x19
 2904 00d3 03       		.uleb128 0x3
 2905 00d4 0E       		.uleb128 0xe
 2906 00d5 3A       		.uleb128 0x3a
 2907 00d6 0B       		.uleb128 0xb
 2908 00d7 3B       		.uleb128 0x3b
 2909 00d8 05       		.uleb128 0x5
 2910 00d9 27       		.uleb128 0x27
 2911 00da 19       		.uleb128 0x19
 2912 00db 49       		.uleb128 0x49
 2913 00dc 13       		.uleb128 0x13
 2914 00dd 20       		.uleb128 0x20
 2915 00de 0B       		.uleb128 0xb
 2916 00df 01       		.uleb128 0x1
 2917 00e0 13       		.uleb128 0x13
 2918 00e1 00       		.byte	0
 2919 00e2 00       		.byte	0
 2920 00e3 14       		.uleb128 0x14
 2921 00e4 05       		.uleb128 0x5
 2922 00e5 00       		.byte	0
 2923 00e6 03       		.uleb128 0x3
 2924 00e7 0E       		.uleb128 0xe
 2925 00e8 3A       		.uleb128 0x3a
 2926 00e9 0B       		.uleb128 0xb
 2927 00ea 3B       		.uleb128 0x3b
 2928 00eb 05       		.uleb128 0x5
 2929 00ec 49       		.uleb128 0x49
 2930 00ed 13       		.uleb128 0x13
 2931 00ee 00       		.byte	0
 2932 00ef 00       		.byte	0
 2933 00f0 15       		.uleb128 0x15
 2934 00f1 34       		.uleb128 0x34
 2935 00f2 00       		.byte	0
 2936 00f3 03       		.uleb128 0x3
 2937 00f4 08       		.uleb128 0x8
 2938 00f5 3A       		.uleb128 0x3a
 2939 00f6 0B       		.uleb128 0xb
 2940 00f7 3B       		.uleb128 0x3b
 2941 00f8 05       		.uleb128 0x5
 2942 00f9 49       		.uleb128 0x49
 2943 00fa 13       		.uleb128 0x13
 2944 00fb 00       		.byte	0
 2945 00fc 00       		.byte	0
 2946 00fd 16       		.uleb128 0x16
 2947 00fe 34       		.uleb128 0x34
 2948 00ff 00       		.byte	0
 2949 0100 03       		.uleb128 0x3
 2950 0101 0E       		.uleb128 0xe
 2951 0102 3A       		.uleb128 0x3a
 2952 0103 0B       		.uleb128 0xb
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 83


 2953 0104 3B       		.uleb128 0x3b
 2954 0105 05       		.uleb128 0x5
 2955 0106 49       		.uleb128 0x49
 2956 0107 13       		.uleb128 0x13
 2957 0108 00       		.byte	0
 2958 0109 00       		.byte	0
 2959 010a 17       		.uleb128 0x17
 2960 010b 0B       		.uleb128 0xb
 2961 010c 01       		.byte	0x1
 2962 010d 00       		.byte	0
 2963 010e 00       		.byte	0
 2964 010f 18       		.uleb128 0x18
 2965 0110 2E       		.uleb128 0x2e
 2966 0111 01       		.byte	0x1
 2967 0112 3F       		.uleb128 0x3f
 2968 0113 19       		.uleb128 0x19
 2969 0114 03       		.uleb128 0x3
 2970 0115 0E       		.uleb128 0xe
 2971 0116 3A       		.uleb128 0x3a
 2972 0117 0B       		.uleb128 0xb
 2973 0118 3B       		.uleb128 0x3b
 2974 0119 0B       		.uleb128 0xb
 2975 011a 27       		.uleb128 0x27
 2976 011b 19       		.uleb128 0x19
 2977 011c 49       		.uleb128 0x49
 2978 011d 13       		.uleb128 0x13
 2979 011e 20       		.uleb128 0x20
 2980 011f 0B       		.uleb128 0xb
 2981 0120 01       		.uleb128 0x1
 2982 0121 13       		.uleb128 0x13
 2983 0122 00       		.byte	0
 2984 0123 00       		.byte	0
 2985 0124 19       		.uleb128 0x19
 2986 0125 05       		.uleb128 0x5
 2987 0126 00       		.byte	0
 2988 0127 03       		.uleb128 0x3
 2989 0128 0E       		.uleb128 0xe
 2990 0129 3A       		.uleb128 0x3a
 2991 012a 0B       		.uleb128 0xb
 2992 012b 3B       		.uleb128 0x3b
 2993 012c 0B       		.uleb128 0xb
 2994 012d 49       		.uleb128 0x49
 2995 012e 13       		.uleb128 0x13
 2996 012f 00       		.byte	0
 2997 0130 00       		.byte	0
 2998 0131 1A       		.uleb128 0x1a
 2999 0132 34       		.uleb128 0x34
 3000 0133 00       		.byte	0
 3001 0134 03       		.uleb128 0x3
 3002 0135 0E       		.uleb128 0xe
 3003 0136 3A       		.uleb128 0x3a
 3004 0137 0B       		.uleb128 0xb
 3005 0138 3B       		.uleb128 0x3b
 3006 0139 0B       		.uleb128 0xb
 3007 013a 49       		.uleb128 0x49
 3008 013b 13       		.uleb128 0x13
 3009 013c 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 84


 3010 013d 00       		.byte	0
 3011 013e 1B       		.uleb128 0x1b
 3012 013f 2E       		.uleb128 0x2e
 3013 0140 01       		.byte	0x1
 3014 0141 3F       		.uleb128 0x3f
 3015 0142 19       		.uleb128 0x19
 3016 0143 03       		.uleb128 0x3
 3017 0144 0E       		.uleb128 0xe
 3018 0145 3A       		.uleb128 0x3a
 3019 0146 0B       		.uleb128 0xb
 3020 0147 3B       		.uleb128 0x3b
 3021 0148 0B       		.uleb128 0xb
 3022 0149 27       		.uleb128 0x27
 3023 014a 19       		.uleb128 0x19
 3024 014b 11       		.uleb128 0x11
 3025 014c 01       		.uleb128 0x1
 3026 014d 12       		.uleb128 0x12
 3027 014e 06       		.uleb128 0x6
 3028 014f 40       		.uleb128 0x40
 3029 0150 18       		.uleb128 0x18
 3030 0151 9742     		.uleb128 0x2117
 3031 0153 19       		.uleb128 0x19
 3032 0154 01       		.uleb128 0x1
 3033 0155 13       		.uleb128 0x13
 3034 0156 00       		.byte	0
 3035 0157 00       		.byte	0
 3036 0158 1C       		.uleb128 0x1c
 3037 0159 05       		.uleb128 0x5
 3038 015a 00       		.byte	0
 3039 015b 03       		.uleb128 0x3
 3040 015c 08       		.uleb128 0x8
 3041 015d 3A       		.uleb128 0x3a
 3042 015e 0B       		.uleb128 0xb
 3043 015f 3B       		.uleb128 0x3b
 3044 0160 0B       		.uleb128 0xb
 3045 0161 49       		.uleb128 0x49
 3046 0162 13       		.uleb128 0x13
 3047 0163 02       		.uleb128 0x2
 3048 0164 17       		.uleb128 0x17
 3049 0165 00       		.byte	0
 3050 0166 00       		.byte	0
 3051 0167 1D       		.uleb128 0x1d
 3052 0168 1D       		.uleb128 0x1d
 3053 0169 01       		.byte	0x1
 3054 016a 31       		.uleb128 0x31
 3055 016b 13       		.uleb128 0x13
 3056 016c 11       		.uleb128 0x11
 3057 016d 01       		.uleb128 0x1
 3058 016e 12       		.uleb128 0x12
 3059 016f 06       		.uleb128 0x6
 3060 0170 58       		.uleb128 0x58
 3061 0171 0B       		.uleb128 0xb
 3062 0172 59       		.uleb128 0x59
 3063 0173 0B       		.uleb128 0xb
 3064 0174 01       		.uleb128 0x1
 3065 0175 13       		.uleb128 0x13
 3066 0176 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 85


 3067 0177 00       		.byte	0
 3068 0178 1E       		.uleb128 0x1e
 3069 0179 05       		.uleb128 0x5
 3070 017a 00       		.byte	0
 3071 017b 31       		.uleb128 0x31
 3072 017c 13       		.uleb128 0x13
 3073 017d 00       		.byte	0
 3074 017e 00       		.byte	0
 3075 017f 1F       		.uleb128 0x1f
 3076 0180 0B       		.uleb128 0xb
 3077 0181 01       		.byte	0x1
 3078 0182 11       		.uleb128 0x11
 3079 0183 01       		.uleb128 0x1
 3080 0184 12       		.uleb128 0x12
 3081 0185 06       		.uleb128 0x6
 3082 0186 00       		.byte	0
 3083 0187 00       		.byte	0
 3084 0188 20       		.uleb128 0x20
 3085 0189 34       		.uleb128 0x34
 3086 018a 00       		.byte	0
 3087 018b 31       		.uleb128 0x31
 3088 018c 13       		.uleb128 0x13
 3089 018d 02       		.uleb128 0x2
 3090 018e 17       		.uleb128 0x17
 3091 018f 00       		.byte	0
 3092 0190 00       		.byte	0
 3093 0191 21       		.uleb128 0x21
 3094 0192 34       		.uleb128 0x34
 3095 0193 00       		.byte	0
 3096 0194 31       		.uleb128 0x31
 3097 0195 13       		.uleb128 0x13
 3098 0196 02       		.uleb128 0x2
 3099 0197 18       		.uleb128 0x18
 3100 0198 00       		.byte	0
 3101 0199 00       		.byte	0
 3102 019a 22       		.uleb128 0x22
 3103 019b 1D       		.uleb128 0x1d
 3104 019c 01       		.byte	0x1
 3105 019d 31       		.uleb128 0x31
 3106 019e 13       		.uleb128 0x13
 3107 019f 11       		.uleb128 0x11
 3108 01a0 01       		.uleb128 0x1
 3109 01a1 12       		.uleb128 0x12
 3110 01a2 06       		.uleb128 0x6
 3111 01a3 58       		.uleb128 0x58
 3112 01a4 0B       		.uleb128 0xb
 3113 01a5 59       		.uleb128 0x59
 3114 01a6 05       		.uleb128 0x5
 3115 01a7 01       		.uleb128 0x1
 3116 01a8 13       		.uleb128 0x13
 3117 01a9 00       		.byte	0
 3118 01aa 00       		.byte	0
 3119 01ab 23       		.uleb128 0x23
 3120 01ac 05       		.uleb128 0x5
 3121 01ad 00       		.byte	0
 3122 01ae 31       		.uleb128 0x31
 3123 01af 13       		.uleb128 0x13
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 86


 3124 01b0 02       		.uleb128 0x2
 3125 01b1 18       		.uleb128 0x18
 3126 01b2 00       		.byte	0
 3127 01b3 00       		.byte	0
 3128 01b4 24       		.uleb128 0x24
 3129 01b5 898201   		.uleb128 0x4109
 3130 01b8 00       		.byte	0
 3131 01b9 11       		.uleb128 0x11
 3132 01ba 01       		.uleb128 0x1
 3133 01bb 31       		.uleb128 0x31
 3134 01bc 13       		.uleb128 0x13
 3135 01bd 00       		.byte	0
 3136 01be 00       		.byte	0
 3137 01bf 25       		.uleb128 0x25
 3138 01c0 05       		.uleb128 0x5
 3139 01c1 00       		.byte	0
 3140 01c2 31       		.uleb128 0x31
 3141 01c3 13       		.uleb128 0x13
 3142 01c4 02       		.uleb128 0x2
 3143 01c5 17       		.uleb128 0x17
 3144 01c6 00       		.byte	0
 3145 01c7 00       		.byte	0
 3146 01c8 26       		.uleb128 0x26
 3147 01c9 898201   		.uleb128 0x4109
 3148 01cc 01       		.byte	0x1
 3149 01cd 11       		.uleb128 0x11
 3150 01ce 01       		.uleb128 0x1
 3151 01cf 00       		.byte	0
 3152 01d0 00       		.byte	0
 3153 01d1 27       		.uleb128 0x27
 3154 01d2 8A8201   		.uleb128 0x410a
 3155 01d5 00       		.byte	0
 3156 01d6 02       		.uleb128 0x2
 3157 01d7 18       		.uleb128 0x18
 3158 01d8 9142     		.uleb128 0x2111
 3159 01da 18       		.uleb128 0x18
 3160 01db 00       		.byte	0
 3161 01dc 00       		.byte	0
 3162 01dd 28       		.uleb128 0x28
 3163 01de 898201   		.uleb128 0x4109
 3164 01e1 01       		.byte	0x1
 3165 01e2 11       		.uleb128 0x11
 3166 01e3 01       		.uleb128 0x1
 3167 01e4 31       		.uleb128 0x31
 3168 01e5 13       		.uleb128 0x13
 3169 01e6 00       		.byte	0
 3170 01e7 00       		.byte	0
 3171 01e8 29       		.uleb128 0x29
 3172 01e9 0B       		.uleb128 0xb
 3173 01ea 01       		.byte	0x1
 3174 01eb 11       		.uleb128 0x11
 3175 01ec 01       		.uleb128 0x1
 3176 01ed 12       		.uleb128 0x12
 3177 01ee 06       		.uleb128 0x6
 3178 01ef 01       		.uleb128 0x1
 3179 01f0 13       		.uleb128 0x13
 3180 01f1 00       		.byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 87


 3181 01f2 00       		.byte	0
 3182 01f3 2A       		.uleb128 0x2a
 3183 01f4 34       		.uleb128 0x34
 3184 01f5 00       		.byte	0
 3185 01f6 03       		.uleb128 0x3
 3186 01f7 0E       		.uleb128 0xe
 3187 01f8 3A       		.uleb128 0x3a
 3188 01f9 0B       		.uleb128 0xb
 3189 01fa 3B       		.uleb128 0x3b
 3190 01fb 0B       		.uleb128 0xb
 3191 01fc 49       		.uleb128 0x49
 3192 01fd 13       		.uleb128 0x13
 3193 01fe 02       		.uleb128 0x2
 3194 01ff 17       		.uleb128 0x17
 3195 0200 00       		.byte	0
 3196 0201 00       		.byte	0
 3197 0202 2B       		.uleb128 0x2b
 3198 0203 34       		.uleb128 0x34
 3199 0204 00       		.byte	0
 3200 0205 03       		.uleb128 0x3
 3201 0206 0E       		.uleb128 0xe
 3202 0207 3A       		.uleb128 0x3a
 3203 0208 0B       		.uleb128 0xb
 3204 0209 3B       		.uleb128 0x3b
 3205 020a 0B       		.uleb128 0xb
 3206 020b 49       		.uleb128 0x49
 3207 020c 13       		.uleb128 0x13
 3208 020d 02       		.uleb128 0x2
 3209 020e 18       		.uleb128 0x18
 3210 020f 00       		.byte	0
 3211 0210 00       		.byte	0
 3212 0211 2C       		.uleb128 0x2c
 3213 0212 2E       		.uleb128 0x2e
 3214 0213 01       		.byte	0x1
 3215 0214 3F       		.uleb128 0x3f
 3216 0215 19       		.uleb128 0x19
 3217 0216 03       		.uleb128 0x3
 3218 0217 0E       		.uleb128 0xe
 3219 0218 3A       		.uleb128 0x3a
 3220 0219 0B       		.uleb128 0xb
 3221 021a 3B       		.uleb128 0x3b
 3222 021b 0B       		.uleb128 0xb
 3223 021c 27       		.uleb128 0x27
 3224 021d 19       		.uleb128 0x19
 3225 021e 11       		.uleb128 0x11
 3226 021f 01       		.uleb128 0x1
 3227 0220 12       		.uleb128 0x12
 3228 0221 06       		.uleb128 0x6
 3229 0222 40       		.uleb128 0x40
 3230 0223 18       		.uleb128 0x18
 3231 0224 9642     		.uleb128 0x2116
 3232 0226 19       		.uleb128 0x19
 3233 0227 01       		.uleb128 0x1
 3234 0228 13       		.uleb128 0x13
 3235 0229 00       		.byte	0
 3236 022a 00       		.byte	0
 3237 022b 2D       		.uleb128 0x2d
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 88


 3238 022c 34       		.uleb128 0x34
 3239 022d 00       		.byte	0
 3240 022e 31       		.uleb128 0x31
 3241 022f 13       		.uleb128 0x13
 3242 0230 1C       		.uleb128 0x1c
 3243 0231 0B       		.uleb128 0xb
 3244 0232 00       		.byte	0
 3245 0233 00       		.byte	0
 3246 0234 2E       		.uleb128 0x2e
 3247 0235 34       		.uleb128 0x34
 3248 0236 00       		.byte	0
 3249 0237 03       		.uleb128 0x3
 3250 0238 0E       		.uleb128 0xe
 3251 0239 3A       		.uleb128 0x3a
 3252 023a 0B       		.uleb128 0xb
 3253 023b 3B       		.uleb128 0x3b
 3254 023c 0B       		.uleb128 0xb
 3255 023d 49       		.uleb128 0x49
 3256 023e 13       		.uleb128 0x13
 3257 023f 3F       		.uleb128 0x3f
 3258 0240 19       		.uleb128 0x19
 3259 0241 3C       		.uleb128 0x3c
 3260 0242 19       		.uleb128 0x19
 3261 0243 00       		.byte	0
 3262 0244 00       		.byte	0
 3263 0245 2F       		.uleb128 0x2f
 3264 0246 34       		.uleb128 0x34
 3265 0247 00       		.byte	0
 3266 0248 03       		.uleb128 0x3
 3267 0249 0E       		.uleb128 0xe
 3268 024a 3A       		.uleb128 0x3a
 3269 024b 0B       		.uleb128 0xb
 3270 024c 3B       		.uleb128 0x3b
 3271 024d 05       		.uleb128 0x5
 3272 024e 49       		.uleb128 0x49
 3273 024f 13       		.uleb128 0x13
 3274 0250 3F       		.uleb128 0x3f
 3275 0251 19       		.uleb128 0x19
 3276 0252 3C       		.uleb128 0x3c
 3277 0253 19       		.uleb128 0x19
 3278 0254 00       		.byte	0
 3279 0255 00       		.byte	0
 3280 0256 30       		.uleb128 0x30
 3281 0257 35       		.uleb128 0x35
 3282 0258 00       		.byte	0
 3283 0259 49       		.uleb128 0x49
 3284 025a 13       		.uleb128 0x13
 3285 025b 00       		.byte	0
 3286 025c 00       		.byte	0
 3287 025d 31       		.uleb128 0x31
 3288 025e 2E       		.uleb128 0x2e
 3289 025f 00       		.byte	0
 3290 0260 3F       		.uleb128 0x3f
 3291 0261 19       		.uleb128 0x19
 3292 0262 3C       		.uleb128 0x3c
 3293 0263 19       		.uleb128 0x19
 3294 0264 6E       		.uleb128 0x6e
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 89


 3295 0265 0E       		.uleb128 0xe
 3296 0266 03       		.uleb128 0x3
 3297 0267 0E       		.uleb128 0xe
 3298 0268 3A       		.uleb128 0x3a
 3299 0269 0B       		.uleb128 0xb
 3300 026a 3B       		.uleb128 0x3b
 3301 026b 05       		.uleb128 0x5
 3302 026c 00       		.byte	0
 3303 026d 00       		.byte	0
 3304 026e 32       		.uleb128 0x32
 3305 026f 2E       		.uleb128 0x2e
 3306 0270 00       		.byte	0
 3307 0271 3F       		.uleb128 0x3f
 3308 0272 19       		.uleb128 0x19
 3309 0273 3C       		.uleb128 0x3c
 3310 0274 19       		.uleb128 0x19
 3311 0275 6E       		.uleb128 0x6e
 3312 0276 0E       		.uleb128 0xe
 3313 0277 03       		.uleb128 0x3
 3314 0278 0E       		.uleb128 0xe
 3315 0279 3A       		.uleb128 0x3a
 3316 027a 0B       		.uleb128 0xb
 3317 027b 3B       		.uleb128 0x3b
 3318 027c 0B       		.uleb128 0xb
 3319 027d 00       		.byte	0
 3320 027e 00       		.byte	0
 3321 027f 00       		.byte	0
 3322              		.section	.debug_loc,"",%progbits
 3323              	.Ldebug_loc0:
 3324              	.LLST0:
 3325 0000 00000000 		.4byte	.LVL0
 3326 0004 04000000 		.4byte	.LVL1
 3327 0008 0100     		.2byte	0x1
 3328 000a 50       		.byte	0x50
 3329 000b 04000000 		.4byte	.LVL1
 3330 000f 94000000 		.4byte	.LFE180
 3331 0013 0200     		.2byte	0x2
 3332 0015 30       		.byte	0x30
 3333 0016 9F       		.byte	0x9f
 3334 0017 00000000 		.4byte	0
 3335 001b 00000000 		.4byte	0
 3336              	.LLST1:
 3337 001f 04000000 		.4byte	.LVL1
 3338 0023 1C000000 		.4byte	.LVL2
 3339 0027 0200     		.2byte	0x2
 3340 0029 30       		.byte	0x30
 3341 002a 9F       		.byte	0x9f
 3342 002b 1C000000 		.4byte	.LVL2
 3343 002f 3E000000 		.4byte	.LVL6
 3344 0033 0100     		.2byte	0x1
 3345 0035 50       		.byte	0x50
 3346 0036 4C000000 		.4byte	.LVL9
 3347 003a 4E000000 		.4byte	.LVL10
 3348 003e 0100     		.2byte	0x1
 3349 0040 50       		.byte	0x50
 3350 0041 5A000000 		.4byte	.LVL11
 3351 0045 6C000000 		.4byte	.LVL14
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 90


 3352 0049 0100     		.2byte	0x1
 3353 004b 50       		.byte	0x50
 3354 004c 7A000000 		.4byte	.LVL17
 3355 0050 7C000000 		.4byte	.LVL18
 3356 0054 0100     		.2byte	0x1
 3357 0056 50       		.byte	0x50
 3358 0057 00000000 		.4byte	0
 3359 005b 00000000 		.4byte	0
 3360              	.LLST2:
 3361 005f 26000000 		.4byte	.LVL4
 3362 0063 5A000000 		.4byte	.LVL11
 3363 0067 0200     		.2byte	0x2
 3364 0069 30       		.byte	0x30
 3365 006a 9F       		.byte	0x9f
 3366 006b 00000000 		.4byte	0
 3367 006f 00000000 		.4byte	0
 3368              	.LLST3:
 3369 0073 26000000 		.4byte	.LVL4
 3370 0077 3E000000 		.4byte	.LVL6
 3371 007b 0200     		.2byte	0x2
 3372 007d 30       		.byte	0x30
 3373 007e 9F       		.byte	0x9f
 3374 007f 3E000000 		.4byte	.LVL6
 3375 0083 4C000000 		.4byte	.LVL9
 3376 0087 0100     		.2byte	0x1
 3377 0089 54       		.byte	0x54
 3378 008a 4C000000 		.4byte	.LVL9
 3379 008e 4E000000 		.4byte	.LVL10
 3380 0092 0200     		.2byte	0x2
 3381 0094 30       		.byte	0x30
 3382 0095 9F       		.byte	0x9f
 3383 0096 4E000000 		.4byte	.LVL10
 3384 009a 5A000000 		.4byte	.LVL11
 3385 009e 0100     		.2byte	0x1
 3386 00a0 54       		.byte	0x54
 3387 00a1 00000000 		.4byte	0
 3388 00a5 00000000 		.4byte	0
 3389              	.LLST4:
 3390 00a9 36000000 		.4byte	.LVL5
 3391 00ad 5A000000 		.4byte	.LVL11
 3392 00b1 0100     		.2byte	0x1
 3393 00b3 55       		.byte	0x55
 3394 00b4 00000000 		.4byte	0
 3395 00b8 00000000 		.4byte	0
 3396              	.LLST5:
 3397 00bc 3E000000 		.4byte	.LVL6
 3398 00c0 47000000 		.4byte	.LVL7-1
 3399 00c4 0700     		.2byte	0x7
 3400 00c6 74       		.byte	0x74
 3401 00c7 00       		.sleb128 0
 3402 00c8 32       		.byte	0x32
 3403 00c9 24       		.byte	0x24
 3404 00ca 75       		.byte	0x75
 3405 00cb 00       		.sleb128 0
 3406 00cc 22       		.byte	0x22
 3407 00cd 00000000 		.4byte	0
 3408 00d1 00000000 		.4byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 91


 3409              	.LLST6:
 3410 00d5 5A000000 		.4byte	.LVL11
 3411 00d9 86000000 		.4byte	.LVL19
 3412 00dd 0200     		.2byte	0x2
 3413 00df 33       		.byte	0x33
 3414 00e0 9F       		.byte	0x9f
 3415 00e1 00000000 		.4byte	0
 3416 00e5 00000000 		.4byte	0
 3417              	.LLST7:
 3418 00e9 60000000 		.4byte	.LVL12
 3419 00ed 6C000000 		.4byte	.LVL14
 3420 00f1 0200     		.2byte	0x2
 3421 00f3 30       		.byte	0x30
 3422 00f4 9F       		.byte	0x9f
 3423 00f5 6C000000 		.4byte	.LVL14
 3424 00f9 7A000000 		.4byte	.LVL17
 3425 00fd 0100     		.2byte	0x1
 3426 00ff 54       		.byte	0x54
 3427 0100 7A000000 		.4byte	.LVL17
 3428 0104 7C000000 		.4byte	.LVL18
 3429 0108 0200     		.2byte	0x2
 3430 010a 30       		.byte	0x30
 3431 010b 9F       		.byte	0x9f
 3432 010c 7C000000 		.4byte	.LVL18
 3433 0110 86000000 		.4byte	.LVL19
 3434 0114 0100     		.2byte	0x1
 3435 0116 54       		.byte	0x54
 3436 0117 00000000 		.4byte	0
 3437 011b 00000000 		.4byte	0
 3438              	.LLST8:
 3439 011f 64000000 		.4byte	.LVL13
 3440 0123 86000000 		.4byte	.LVL19
 3441 0127 0100     		.2byte	0x1
 3442 0129 55       		.byte	0x55
 3443 012a 00000000 		.4byte	0
 3444 012e 00000000 		.4byte	0
 3445              	.LLST9:
 3446 0132 6C000000 		.4byte	.LVL14
 3447 0136 75000000 		.4byte	.LVL15-1
 3448 013a 0700     		.2byte	0x7
 3449 013c 74       		.byte	0x74
 3450 013d 00       		.sleb128 0
 3451 013e 32       		.byte	0x32
 3452 013f 24       		.byte	0x24
 3453 0140 75       		.byte	0x75
 3454 0141 00       		.sleb128 0
 3455 0142 22       		.byte	0x22
 3456 0143 00000000 		.4byte	0
 3457 0147 00000000 		.4byte	0
 3458              	.LLST10:
 3459 014b 00000000 		.4byte	.LVL21
 3460 014f 4C000000 		.4byte	.LVL31
 3461 0153 0100     		.2byte	0x1
 3462 0155 50       		.byte	0x50
 3463 0156 4C000000 		.4byte	.LVL31
 3464 015a 5A000000 		.4byte	.LVL34
 3465 015e 0400     		.2byte	0x4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 92


 3466 0160 F3       		.byte	0xf3
 3467 0161 01       		.uleb128 0x1
 3468 0162 50       		.byte	0x50
 3469 0163 9F       		.byte	0x9f
 3470 0164 5A000000 		.4byte	.LVL34
 3471 0168 5C000000 		.4byte	.LVL35
 3472 016c 0100     		.2byte	0x1
 3473 016e 50       		.byte	0x50
 3474 016f 5C000000 		.4byte	.LVL35
 3475 0173 6E000000 		.4byte	.LVL38
 3476 0177 0400     		.2byte	0x4
 3477 0179 F3       		.byte	0xf3
 3478 017a 01       		.uleb128 0x1
 3479 017b 50       		.byte	0x50
 3480 017c 9F       		.byte	0x9f
 3481 017d 6E000000 		.4byte	.LVL38
 3482 0181 8C000000 		.4byte	.LVL41
 3483 0185 0100     		.2byte	0x1
 3484 0187 50       		.byte	0x50
 3485 0188 8C000000 		.4byte	.LVL41
 3486 018c 9A000000 		.4byte	.LVL44
 3487 0190 0400     		.2byte	0x4
 3488 0192 F3       		.byte	0xf3
 3489 0193 01       		.uleb128 0x1
 3490 0194 50       		.byte	0x50
 3491 0195 9F       		.byte	0x9f
 3492 0196 9A000000 		.4byte	.LVL44
 3493 019a 9C000000 		.4byte	.LVL45
 3494 019e 0100     		.2byte	0x1
 3495 01a0 50       		.byte	0x50
 3496 01a1 9C000000 		.4byte	.LVL45
 3497 01a5 B8000000 		.4byte	.LFE181
 3498 01a9 0400     		.2byte	0x4
 3499 01ab F3       		.byte	0xf3
 3500 01ac 01       		.uleb128 0x1
 3501 01ad 50       		.byte	0x50
 3502 01ae 9F       		.byte	0x9f
 3503 01af 00000000 		.4byte	0
 3504 01b3 00000000 		.4byte	0
 3505              	.LLST11:
 3506 01b7 38000000 		.4byte	.LVL28
 3507 01bb 3C000000 		.4byte	.LVL29
 3508 01bf 0100     		.2byte	0x1
 3509 01c1 51       		.byte	0x51
 3510 01c2 00000000 		.4byte	0
 3511 01c6 00000000 		.4byte	0
 3512              	.LLST12:
 3513 01ca 34000000 		.4byte	.LVL27
 3514 01ce 6E000000 		.4byte	.LVL38
 3515 01d2 0200     		.2byte	0x2
 3516 01d4 30       		.byte	0x30
 3517 01d5 9F       		.byte	0x9f
 3518 01d6 00000000 		.4byte	0
 3519 01da 00000000 		.4byte	0
 3520              	.LLST13:
 3521 01de 34000000 		.4byte	.LVL27
 3522 01e2 4C000000 		.4byte	.LVL31
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 93


 3523 01e6 0200     		.2byte	0x2
 3524 01e8 30       		.byte	0x30
 3525 01e9 9F       		.byte	0x9f
 3526 01ea 4C000000 		.4byte	.LVL31
 3527 01ee 5A000000 		.4byte	.LVL34
 3528 01f2 0100     		.2byte	0x1
 3529 01f4 54       		.byte	0x54
 3530 01f5 5A000000 		.4byte	.LVL34
 3531 01f9 5C000000 		.4byte	.LVL35
 3532 01fd 0200     		.2byte	0x2
 3533 01ff 30       		.byte	0x30
 3534 0200 9F       		.byte	0x9f
 3535 0201 5C000000 		.4byte	.LVL35
 3536 0205 66000000 		.4byte	.LVL36
 3537 0209 0100     		.2byte	0x1
 3538 020b 54       		.byte	0x54
 3539 020c 00000000 		.4byte	0
 3540 0210 00000000 		.4byte	0
 3541              	.LLST14:
 3542 0214 44000000 		.4byte	.LVL30
 3543 0218 66000000 		.4byte	.LVL36
 3544 021c 0100     		.2byte	0x1
 3545 021e 55       		.byte	0x55
 3546 021f 00000000 		.4byte	0
 3547 0223 00000000 		.4byte	0
 3548              	.LLST15:
 3549 0227 4C000000 		.4byte	.LVL31
 3550 022b 55000000 		.4byte	.LVL32-1
 3551 022f 0700     		.2byte	0x7
 3552 0231 74       		.byte	0x74
 3553 0232 00       		.sleb128 0
 3554 0233 32       		.byte	0x32
 3555 0234 24       		.byte	0x24
 3556 0235 75       		.byte	0x75
 3557 0236 00       		.sleb128 0
 3558 0237 22       		.byte	0x22
 3559 0238 00000000 		.4byte	0
 3560 023c 00000000 		.4byte	0
 3561              	.LLST16:
 3562 0240 76000000 		.4byte	.LVL39
 3563 0244 AC000000 		.4byte	.LVL47
 3564 0248 0200     		.2byte	0x2
 3565 024a 30       		.byte	0x30
 3566 024b 9F       		.byte	0x9f
 3567 024c 00000000 		.4byte	0
 3568 0250 00000000 		.4byte	0
 3569              	.LLST17:
 3570 0254 76000000 		.4byte	.LVL39
 3571 0258 8C000000 		.4byte	.LVL41
 3572 025c 0200     		.2byte	0x2
 3573 025e 30       		.byte	0x30
 3574 025f 9F       		.byte	0x9f
 3575 0260 8C000000 		.4byte	.LVL41
 3576 0264 9A000000 		.4byte	.LVL44
 3577 0268 0100     		.2byte	0x1
 3578 026a 54       		.byte	0x54
 3579 026b 9A000000 		.4byte	.LVL44
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 94


 3580 026f 9C000000 		.4byte	.LVL45
 3581 0273 0200     		.2byte	0x2
 3582 0275 30       		.byte	0x30
 3583 0276 9F       		.byte	0x9f
 3584 0277 9C000000 		.4byte	.LVL45
 3585 027b A6000000 		.4byte	.LVL46
 3586 027f 0100     		.2byte	0x1
 3587 0281 54       		.byte	0x54
 3588 0282 00000000 		.4byte	0
 3589 0286 00000000 		.4byte	0
 3590              	.LLST18:
 3591 028a 84000000 		.4byte	.LVL40
 3592 028e A6000000 		.4byte	.LVL46
 3593 0292 0100     		.2byte	0x1
 3594 0294 55       		.byte	0x55
 3595 0295 00000000 		.4byte	0
 3596 0299 00000000 		.4byte	0
 3597              	.LLST19:
 3598 029d 8C000000 		.4byte	.LVL41
 3599 02a1 95000000 		.4byte	.LVL42-1
 3600 02a5 0700     		.2byte	0x7
 3601 02a7 74       		.byte	0x74
 3602 02a8 00       		.sleb128 0
 3603 02a9 32       		.byte	0x32
 3604 02aa 24       		.byte	0x24
 3605 02ab 75       		.byte	0x75
 3606 02ac 00       		.sleb128 0
 3607 02ad 22       		.byte	0x22
 3608 02ae 00000000 		.4byte	0
 3609 02b2 00000000 		.4byte	0
 3610              	.LLST20:
 3611 02b6 00000000 		.4byte	.LVL48
 3612 02ba 02000000 		.4byte	.LVL49
 3613 02be 0100     		.2byte	0x1
 3614 02c0 50       		.byte	0x50
 3615 02c1 02000000 		.4byte	.LVL49
 3616 02c5 70000000 		.4byte	.LFE182
 3617 02c9 0200     		.2byte	0x2
 3618 02cb 30       		.byte	0x30
 3619 02cc 9F       		.byte	0x9f
 3620 02cd 00000000 		.4byte	0
 3621 02d1 00000000 		.4byte	0
 3622              	.LLST21:
 3623 02d5 1C000000 		.4byte	.LVL55
 3624 02d9 22000000 		.4byte	.LVL57
 3625 02dd 0100     		.2byte	0x1
 3626 02df 51       		.byte	0x51
 3627 02e0 00000000 		.4byte	0
 3628 02e4 00000000 		.4byte	0
 3629              	.LLST22:
 3630 02e8 22000000 		.4byte	.LVL57
 3631 02ec 26000000 		.4byte	.LVL58
 3632 02f0 0100     		.2byte	0x1
 3633 02f2 53       		.byte	0x53
 3634 02f3 00000000 		.4byte	0
 3635 02f7 00000000 		.4byte	0
 3636              	.LLST23:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 95


 3637 02fb 1E000000 		.4byte	.LVL56
 3638 02ff 36000000 		.4byte	.LVL60
 3639 0303 0200     		.2byte	0x2
 3640 0305 30       		.byte	0x30
 3641 0306 9F       		.byte	0x9f
 3642 0307 36000000 		.4byte	.LVL60
 3643 030b 44000000 		.4byte	.LVL63
 3644 030f 0100     		.2byte	0x1
 3645 0311 54       		.byte	0x54
 3646 0312 44000000 		.4byte	.LVL63
 3647 0316 46000000 		.4byte	.LVL64
 3648 031a 0200     		.2byte	0x2
 3649 031c 30       		.byte	0x30
 3650 031d 9F       		.byte	0x9f
 3651 031e 46000000 		.4byte	.LVL64
 3652 0322 50000000 		.4byte	.LVL65
 3653 0326 0100     		.2byte	0x1
 3654 0328 54       		.byte	0x54
 3655 0329 00000000 		.4byte	0
 3656 032d 00000000 		.4byte	0
 3657              	.LLST24:
 3658 0331 2E000000 		.4byte	.LVL59
 3659 0335 50000000 		.4byte	.LVL65
 3660 0339 0100     		.2byte	0x1
 3661 033b 55       		.byte	0x55
 3662 033c 00000000 		.4byte	0
 3663 0340 00000000 		.4byte	0
 3664              	.LLST25:
 3665 0344 36000000 		.4byte	.LVL60
 3666 0348 3F000000 		.4byte	.LVL61-1
 3667 034c 0700     		.2byte	0x7
 3668 034e 74       		.byte	0x74
 3669 034f 00       		.sleb128 0
 3670 0350 32       		.byte	0x32
 3671 0351 24       		.byte	0x24
 3672 0352 75       		.byte	0x75
 3673 0353 00       		.sleb128 0
 3674 0354 22       		.byte	0x22
 3675 0355 00000000 		.4byte	0
 3676 0359 00000000 		.4byte	0
 3677              	.LLST26:
 3678 035d 56000000 		.4byte	.LVL66
 3679 0361 66000000 		.4byte	.LVL67
 3680 0365 0300     		.2byte	0x3
 3681 0367 09       		.byte	0x9
 3682 0368 FF       		.byte	0xff
 3683 0369 9F       		.byte	0x9f
 3684 036a 00000000 		.4byte	0
 3685 036e 00000000 		.4byte	0
 3686              	.LLST27:
 3687 0372 00000000 		.4byte	.LVL68
 3688 0376 3C000000 		.4byte	.LVL79
 3689 037a 0100     		.2byte	0x1
 3690 037c 50       		.byte	0x50
 3691 037d 3C000000 		.4byte	.LVL79
 3692 0381 4A000000 		.4byte	.LVL82
 3693 0385 0400     		.2byte	0x4
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 96


 3694 0387 F3       		.byte	0xf3
 3695 0388 01       		.uleb128 0x1
 3696 0389 50       		.byte	0x50
 3697 038a 9F       		.byte	0x9f
 3698 038b 4A000000 		.4byte	.LVL82
 3699 038f 4C000000 		.4byte	.LVL83
 3700 0393 0100     		.2byte	0x1
 3701 0395 50       		.byte	0x50
 3702 0396 4C000000 		.4byte	.LVL83
 3703 039a 6E000000 		.4byte	.LVL87
 3704 039e 0400     		.2byte	0x4
 3705 03a0 F3       		.byte	0xf3
 3706 03a1 01       		.uleb128 0x1
 3707 03a2 50       		.byte	0x50
 3708 03a3 9F       		.byte	0x9f
 3709 03a4 6E000000 		.4byte	.LVL87
 3710 03a8 78000000 		.4byte	.LFE183
 3711 03ac 0100     		.2byte	0x1
 3712 03ae 50       		.byte	0x50
 3713 03af 00000000 		.4byte	0
 3714 03b3 00000000 		.4byte	0
 3715              	.LLST28:
 3716 03b7 1C000000 		.4byte	.LVL73
 3717 03bb 1E000000 		.4byte	.LVL74
 3718 03bf 0100     		.2byte	0x1
 3719 03c1 53       		.byte	0x53
 3720 03c2 00000000 		.4byte	0
 3721 03c6 00000000 		.4byte	0
 3722              	.LLST29:
 3723 03ca 28000000 		.4byte	.LVL76
 3724 03ce 2C000000 		.4byte	.LVL77
 3725 03d2 0100     		.2byte	0x1
 3726 03d4 51       		.byte	0x51
 3727 03d5 00000000 		.4byte	0
 3728 03d9 00000000 		.4byte	0
 3729              	.LLST30:
 3730 03dd 24000000 		.4byte	.LVL75
 3731 03e1 6E000000 		.4byte	.LVL87
 3732 03e5 0200     		.2byte	0x2
 3733 03e7 30       		.byte	0x30
 3734 03e8 9F       		.byte	0x9f
 3735 03e9 00000000 		.4byte	0
 3736 03ed 00000000 		.4byte	0
 3737              	.LLST31:
 3738 03f1 24000000 		.4byte	.LVL75
 3739 03f5 3C000000 		.4byte	.LVL79
 3740 03f9 0200     		.2byte	0x2
 3741 03fb 30       		.byte	0x30
 3742 03fc 9F       		.byte	0x9f
 3743 03fd 3C000000 		.4byte	.LVL79
 3744 0401 4A000000 		.4byte	.LVL82
 3745 0405 0100     		.2byte	0x1
 3746 0407 54       		.byte	0x54
 3747 0408 4A000000 		.4byte	.LVL82
 3748 040c 4C000000 		.4byte	.LVL83
 3749 0410 0200     		.2byte	0x2
 3750 0412 30       		.byte	0x30
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 97


 3751 0413 9F       		.byte	0x9f
 3752 0414 4C000000 		.4byte	.LVL83
 3753 0418 56000000 		.4byte	.LVL84
 3754 041c 0100     		.2byte	0x1
 3755 041e 54       		.byte	0x54
 3756 041f 00000000 		.4byte	0
 3757 0423 00000000 		.4byte	0
 3758              	.LLST32:
 3759 0427 34000000 		.4byte	.LVL78
 3760 042b 56000000 		.4byte	.LVL84
 3761 042f 0100     		.2byte	0x1
 3762 0431 55       		.byte	0x55
 3763 0432 00000000 		.4byte	0
 3764 0436 00000000 		.4byte	0
 3765              	.LLST33:
 3766 043a 3C000000 		.4byte	.LVL79
 3767 043e 45000000 		.4byte	.LVL80-1
 3768 0442 0700     		.2byte	0x7
 3769 0444 74       		.byte	0x74
 3770 0445 00       		.sleb128 0
 3771 0446 32       		.byte	0x32
 3772 0447 24       		.byte	0x24
 3773 0448 75       		.byte	0x75
 3774 0449 00       		.sleb128 0
 3775 044a 22       		.byte	0x22
 3776 044b 00000000 		.4byte	0
 3777 044f 00000000 		.4byte	0
 3778              	.LLST34:
 3779 0453 5C000000 		.4byte	.LVL85
 3780 0457 6C000000 		.4byte	.LVL86
 3781 045b 0300     		.2byte	0x3
 3782 045d 09       		.byte	0x9
 3783 045e FF       		.byte	0xff
 3784 045f 9F       		.byte	0x9f
 3785 0460 00000000 		.4byte	0
 3786 0464 00000000 		.4byte	0
 3787              	.LLST35:
 3788 0468 00000000 		.4byte	.LVL88
 3789 046c 04000000 		.4byte	.LVL89
 3790 0470 0100     		.2byte	0x1
 3791 0472 50       		.byte	0x50
 3792 0473 04000000 		.4byte	.LVL89
 3793 0477 0A000000 		.4byte	.LFE184
 3794 047b 0400     		.2byte	0x4
 3795 047d F3       		.byte	0xf3
 3796 047e 01       		.uleb128 0x1
 3797 047f 50       		.byte	0x50
 3798 0480 9F       		.byte	0x9f
 3799 0481 00000000 		.4byte	0
 3800 0485 00000000 		.4byte	0
 3801              		.section	.debug_aranges,"",%progbits
 3802 0000 3C000000 		.4byte	0x3c
 3803 0004 0200     		.2byte	0x2
 3804 0006 00000000 		.4byte	.Ldebug_info0
 3805 000a 04       		.byte	0x4
 3806 000b 00       		.byte	0
 3807 000c 0000     		.2byte	0
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 98


 3808 000e 0000     		.2byte	0
 3809 0010 00000000 		.4byte	.LFB180
 3810 0014 94000000 		.4byte	.LFE180-.LFB180
 3811 0018 00000000 		.4byte	.LFB181
 3812 001c B8000000 		.4byte	.LFE181-.LFB181
 3813 0020 00000000 		.4byte	.LFB182
 3814 0024 70000000 		.4byte	.LFE182-.LFB182
 3815 0028 00000000 		.4byte	.LFB183
 3816 002c 78000000 		.4byte	.LFE183-.LFB183
 3817 0030 00000000 		.4byte	.LFB184
 3818 0034 0A000000 		.4byte	.LFE184-.LFB184
 3819 0038 00000000 		.4byte	0
 3820 003c 00000000 		.4byte	0
 3821              		.section	.debug_ranges,"",%progbits
 3822              	.Ldebug_ranges0:
 3823 0000 00000000 		.4byte	.LFB180
 3824 0004 94000000 		.4byte	.LFE180
 3825 0008 00000000 		.4byte	.LFB181
 3826 000c B8000000 		.4byte	.LFE181
 3827 0010 00000000 		.4byte	.LFB182
 3828 0014 70000000 		.4byte	.LFE182
 3829 0018 00000000 		.4byte	.LFB183
 3830 001c 78000000 		.4byte	.LFE183
 3831 0020 00000000 		.4byte	.LFB184
 3832 0024 0A000000 		.4byte	.LFE184
 3833 0028 00000000 		.4byte	0
 3834 002c 00000000 		.4byte	0
 3835              		.section	.debug_line,"",%progbits
 3836              	.Ldebug_line0:
 3837 0000 D5040000 		.section	.debug_str,"MS",%progbits,1
 3837      0200AD03 
 3837      00000201 
 3837      FB0E0D00 
 3837      01010101 
 3838              	.LASF41:
 3839 0000 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 3839      52524F52 
 3839      5F54494D 
 3839      455F4F55 
 3839      5400
 3840              	.LASF95:
 3841 0012 656E6769 		.ascii	"engineValue\000"
 3841      6E655661 
 3841      6C756500 
 3842              	.LASF123:
 3843 001e 5254455F 		.ascii	"RTE_SC_SPEED_getAge\000"
 3843      53435F53 
 3843      50454544 
 3843      5F676574 
 3843      41676500 
 3844              	.LASF79:
 3845 0032 7265736F 		.ascii	"resource\000"
 3845      75726365 
 3845      00
 3846              	.LASF107:
 3847 003b 53435F42 		.ascii	"SC_BREAKLIGHT_cfg_s\000"
 3847      5245414B 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 99


 3847      4C494748 
 3847      545F6366 
 3847      675F7300 
 3848              	.LASF108:
 3849 004f 53435F42 		.ascii	"SC_BREAKLIGHT_cfg_t\000"
 3849      5245414B 
 3849      4C494748 
 3849      545F6366 
 3849      675F7400 
 3850              	.LASF18:
 3851 0063 73697A65 		.ascii	"size_t\000"
 3851      5F7400
 3852              	.LASF99:
 3853 006a 53435F45 		.ascii	"SC_ENGINE_cfg_s\000"
 3853      4E47494E 
 3853      455F6366 
 3853      675F7300 
 3854              	.LASF100:
 3855 007a 53435F45 		.ascii	"SC_ENGINE_cfg_t\000"
 3855      4E47494E 
 3855      455F6366 
 3855      675F7400 
 3856              	.LASF113:
 3857 008a 70546173 		.ascii	"pTaskArray\000"
 3857      6B417272 
 3857      617900
 3858              	.LASF59:
 3859 0095 5265736F 		.ascii	"ResourceType\000"
 3859      75726365 
 3859      54797065 
 3859      00
 3860              	.LASF128:
 3861 00a2 47415350 		.ascii	"GASPEDAL_readJoystick_run\000"
 3861      4544414C 
 3861      5F726561 
 3861      644A6F79 
 3861      73746963 
 3862              	.LASF4:
 3863 00bc 5F5F7569 		.ascii	"__uint8_t\000"
 3863      6E74385F 
 3863      7400
 3864              	.LASF56:
 3865 00c6 52435F74 		.ascii	"RC_t\000"
 3865      00
 3866              	.LASF114:
 3867 00cb 7461736B 		.ascii	"task\000"
 3867      00
 3868              	.LASF129:
 3869 00d0 47415350 		.ascii	"GASPEDAL_calcControl_run\000"
 3869      4544414C 
 3869      5F63616C 
 3869      63436F6E 
 3869      74726F6C 
 3870              	.LASF148:
 3871 00e9 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 3871      6F5F5365 
 3871      74457665 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 100


 3871      6E7400
 3872              	.LASF51:
 3873 00f8 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 3873      52524F52 
 3873      5F424144 
 3873      5F444154 
 3873      4100
 3874              	.LASF97:
 3875 010a 53435F45 		.ascii	"SC_ENGINE_driverIn_t\000"
 3875      4E47494E 
 3875      455F6472 
 3875      69766572 
 3875      496E5F74 
 3876              	.LASF146:
 3877 011f 534F5F45 		.ascii	"SO_ENGINE_signal\000"
 3877      4E47494E 
 3877      455F7369 
 3877      676E616C 
 3877      00
 3878              	.LASF124:
 3879 0130 5254455F 		.ascii	"RTE_SC_ENGINE_pushPort\000"
 3879      53435F45 
 3879      4E47494E 
 3879      455F7075 
 3879      7368506F 
 3880              	.LASF118:
 3881 0147 5254455F 		.ascii	"RTE_SC_JOYSTICK_getStatus\000"
 3881      53435F4A 
 3881      4F595354 
 3881      49434B5F 
 3881      67657453 
 3882              	.LASF143:
 3883 0161 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3883      52784275 
 3883      66666572 
 3883      00
 3884              	.LASF91:
 3885 016e 53435F53 		.ascii	"SC_SPEED_cfg_s\000"
 3885      50454544 
 3885      5F636667 
 3885      5F7300
 3886              	.LASF92:
 3887 017d 53435F53 		.ascii	"SC_SPEED_cfg_t\000"
 3887      50454544 
 3887      5F636667 
 3887      5F7400
 3888              	.LASF9:
 3889 018c 6C6F6E67 		.ascii	"long long int\000"
 3889      206C6F6E 
 3889      6720696E 
 3889      7400
 3890              	.LASF0:
 3891 019a 7369676E 		.ascii	"signed char\000"
 3891      65642063 
 3891      68617200 
 3892              	.LASF26:
 3893 01a6 4576656E 		.ascii	"EventMaskType\000"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 101


 3893      744D6173 
 3893      6B547970 
 3893      6500
 3894              	.LASF72:
 3895 01b4 65764F6E 		.ascii	"evOnUpdate\000"
 3895      55706461 
 3895      746500
 3896              	.LASF125:
 3897 01bf 5254455F 		.ascii	"RTE_SC_ENGINE_set\000"
 3897      53435F45 
 3897      4E47494E 
 3897      455F7365 
 3897      7400
 3898              	.LASF115:
 3899 01d1 5254455F 		.ascii	"RTE_SC_JOYSTICK_set\000"
 3899      53435F4A 
 3899      4F595354 
 3899      49434B5F 
 3899      73657400 
 3900              	.LASF103:
 3901 01e5 62726561 		.ascii	"breakLightStatus\000"
 3901      6B4C6967 
 3901      68745374 
 3901      61747573 
 3901      00
 3902              	.LASF137:
 3903 01f6 47415350 		.ascii	"GASPEDAL_HMI_run\000"
 3903      4544414C 
 3903      5F484D49 
 3903      5F72756E 
 3903      00
 3904              	.LASF6:
 3905 0207 6C6F6E67 		.ascii	"long int\000"
 3905      20696E74 
 3905      00
 3906              	.LASF147:
 3907 0210 534F5F42 		.ascii	"SO_BREAKLIGHT_signal\000"
 3907      5245414B 
 3907      4C494748 
 3907      545F7369 
 3907      676E616C 
 3908              	.LASF117:
 3909 0225 5254455F 		.ascii	"RTE_SC_JOYSTICK_pullPort\000"
 3909      53435F4A 
 3909      4F595354 
 3909      49434B5F 
 3909      70756C6C 
 3910              	.LASF2:
 3911 023e 73686F72 		.ascii	"short int\000"
 3911      7420696E 
 3911      7400
 3912              	.LASF42:
 3913 0248 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 3913      52524F52 
 3913      5F4F5045 
 3913      4E00
 3914              	.LASF136:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 102


 3915 0256 6272616B 		.ascii	"brakeLight\000"
 3915      654C6967 
 3915      687400
 3916              	.LASF16:
 3917 0261 646F7562 		.ascii	"double\000"
 3917      6C6500
 3918              	.LASF120:
 3919 0268 5254455F 		.ascii	"RTE_SC_SPEED_set\000"
 3919      53435F53 
 3919      50454544 
 3919      5F736574 
 3919      00
 3920              	.LASF62:
 3921 0279 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
 3921      5349474E 
 3921      414C5354 
 3921      41545553 
 3921      5F56414C 
 3922              	.LASF3:
 3923 0290 73686F72 		.ascii	"short unsigned int\000"
 3923      7420756E 
 3923      7369676E 
 3923      65642069 
 3923      6E7400
 3924              	.LASF74:
 3925 02a3 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 3925      64617465 
 3925      5461736B 
 3925      436F756E 
 3925      7400
 3926              	.LASF131:
 3927 02b5 6A6F7973 		.ascii	"joystickSignal\000"
 3927      7469636B 
 3927      5369676E 
 3927      616C00
 3928              	.LASF7:
 3929 02c4 5F5F7569 		.ascii	"__uint32_t\000"
 3929      6E743332 
 3929      5F7400
 3930              	.LASF24:
 3931 02cf 45455F54 		.ascii	"EE_TID\000"
 3931      494400
 3932              	.LASF83:
 3933 02d6 76616C75 		.ascii	"value\000"
 3933      6500
 3934              	.LASF93:
 3935 02dc 53435F53 		.ascii	"SC_SPEED_s\000"
 3935      50454544 
 3935      5F7300
 3936              	.LASF94:
 3937 02e7 53435F53 		.ascii	"SC_SPEED_t\000"
 3937      50454544 
 3937      5F7400
 3938              	.LASF39:
 3939 02f2 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 3939      52524F52 
 3939      5F425546 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 103


 3939      4645525F 
 3939      454D5450 
 3940              	.LASF11:
 3941 0308 756E7369 		.ascii	"unsigned int\000"
 3941      676E6564 
 3941      20696E74 
 3941      00
 3942              	.LASF144:
 3943 0315 534F5F4A 		.ascii	"SO_JOYSTICK_signal\000"
 3943      4F595354 
 3943      49434B5F 
 3943      7369676E 
 3943      616C00
 3944              	.LASF149:
 3945 0328 57445F41 		.ascii	"WD_Alive\000"
 3945      6C697665 
 3945      00
 3946              	.LASF80:
 3947 0331 53435F4A 		.ascii	"SC_JOYSTICK_cfg_t\000"
 3947      4F595354 
 3947      49434B5F 
 3947      6366675F 
 3947      7400
 3948              	.LASF54:
 3949 0343 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 3949      52524F52 
 3949      5F554E4B 
 3949      4E4F574E 
 3949      00
 3950              	.LASF22:
 3951 0354 45455F55 		.ascii	"EE_UREG\000"
 3951      52454700 
 3952              	.LASF71:
 3953 035c 6F757444 		.ascii	"outDriver\000"
 3953      72697665 
 3953      7200
 3954              	.LASF43:
 3955 0366 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 3955      52524F52 
 3955      5F434845 
 3955      434B5355 
 3955      4D00
 3956              	.LASF8:
 3957 0378 6C6F6E67 		.ascii	"long unsigned int\000"
 3957      20756E73 
 3957      69676E65 
 3957      6420696E 
 3957      7400
 3958              	.LASF32:
 3959 038a 52435F45 		.ascii	"RC_ERROR_NULL\000"
 3959      52524F52 
 3959      5F4E554C 
 3959      4C00
 3960              	.LASF58:
 3961 0398 5254455F 		.ascii	"RTE_event\000"
 3961      6576656E 
 3961      7400
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 104


 3962              	.LASF30:
 3963 03a2 52435F53 		.ascii	"RC_SUCCESS\000"
 3963      55434345 
 3963      535300
 3964              	.LASF121:
 3965 03ad 5254455F 		.ascii	"RTE_SC_SPEED_getStatus\000"
 3965      53435F53 
 3965      50454544 
 3965      5F676574 
 3965      53746174 
 3966              	.LASF10:
 3967 03c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 3967      206C6F6E 
 3967      6720756E 
 3967      7369676E 
 3967      65642069 
 3968              	.LASF25:
 3969 03db 5461736B 		.ascii	"TaskType\000"
 3969      54797065 
 3969      00
 3970              	.LASF138:
 3971 03e4 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 3971      6F5F4952 
 3971      515F6469 
 3971      7361626C 
 3971      655F636F 
 3972              	.LASF38:
 3973 03fc 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 3973      52524F52 
 3973      5F425546 
 3973      4645525F 
 3973      46554C4C 
 3974              	.LASF48:
 3975 0411 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 3975      52524F52 
 3975      5F575249 
 3975      54455F46 
 3975      41494C53 
 3976              	.LASF60:
 3977 0426 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 3977      5349474E 
 3977      414C5354 
 3977      41545553 
 3977      5F535441 
 3978              	.LASF50:
 3979 043f 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 3979      52524F52 
 3979      5F424144 
 3979      5F504152 
 3979      414D00
 3980              	.LASF49:
 3981 0452 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 3981      52524F52 
 3981      5F4E4F54 
 3981      5F4D4154 
 3981      434800
 3982              	.LASF98:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 105


 3983 0465 53435F45 		.ascii	"SC_ENGINE_driverOut_t\000"
 3983      4E47494E 
 3983      455F6472 
 3983      69766572 
 3983      4F75745F 
 3984              	.LASF90:
 3985 047b 53435F53 		.ascii	"SC_SPEED_driverOut_t\000"
 3985      50454544 
 3985      5F647269 
 3985      7665724F 
 3985      75745F74 
 3986              	.LASF89:
 3987 0490 53435F53 		.ascii	"SC_SPEED_driverIn_t\000"
 3987      50454544 
 3987      5F647269 
 3987      76657249 
 3987      6E5F7400 
 3988              	.LASF105:
 3989 04a4 53435F42 		.ascii	"SC_BREAKLIGHT_driverIn_t\000"
 3989      5245414B 
 3989      4C494748 
 3989      545F6472 
 3989      69766572 
 3990              	.LASF68:
 3991 04bd 53435F4A 		.ascii	"SC_JOYSTICK_driverIn_t\000"
 3991      4F595354 
 3991      49434B5F 
 3991      64726976 
 3991      6572496E 
 3992              	.LASF67:
 3993 04d4 53435F4A 		.ascii	"SC_JOYSTICK_data_t\000"
 3993      4F595354 
 3993      49434B5F 
 3993      64617461 
 3993      5F7400
 3994              	.LASF27:
 3995 04e7 73697A65 		.ascii	"sizetype\000"
 3995      74797065 
 3995      00
 3996              	.LASF63:
 3997 04f0 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 3997      5349474E 
 3997      414C5354 
 3997      41545553 
 3997      5F494E56 
 3998              	.LASF29:
 3999 0509 626F6F6C 		.ascii	"boolean_t\000"
 3999      65616E5F 
 3999      7400
 4000              	.LASF139:
 4001 0513 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 4001      6F5F4952 
 4001      515F7375 
 4001      7370656E 
 4001      645F7374 
 4002              	.LASF46:
 4003 052c 52435F45 		.ascii	"RC_ERROR_INVALID\000"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 106


 4003      52524F52 
 4003      5F494E56 
 4003      414C4944 
 4003      00
 4004              	.LASF140:
 4005 053d 45455F41 		.ascii	"EE_ApplicationMode\000"
 4005      70706C69 
 4005      63617469 
 4005      6F6E4D6F 
 4005      646500
 4006              	.LASF52:
 4007 0550 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 4007      52524F52 
 4007      5F43414E 
 4007      43454C45 
 4007      4400
 4008              	.LASF130:
 4009 0562 73706565 		.ascii	"speedSignal\000"
 4009      64536967 
 4009      6E616C00 
 4010              	.LASF37:
 4011 056e 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 4011      52524F52 
 4011      5F554E44 
 4011      45525255 
 4011      4E00
 4012              	.LASF47:
 4013 0580 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 4013      52524F52 
 4013      5F524541 
 4013      445F4641 
 4013      494C5300 
 4014              	.LASF106:
 4015 0594 53435F42 		.ascii	"SC_BREAKLIGHT_driverOut_t\000"
 4015      5245414B 
 4015      4C494748 
 4015      545F6472 
 4015      69766572 
 4016              	.LASF152:
 4017 05ae 433A5C55 		.ascii	"C:\\Users\\vboxuser\\Documents\\GitHub\\EAA_GasPeda"
 4017      73657273 
 4017      5C76626F 
 4017      78757365 
 4017      725C446F 
 4018 05dc 6C5C4C61 		.ascii	"l\\Lab 1\\GasPedal.cydsn\000"
 4018      6220315C 
 4018      47617350 
 4018      6564616C 
 4018      2E637964 
 4019              	.LASF119:
 4020 05f3 5254455F 		.ascii	"RTE_SC_JOYSTICK_get\000"
 4020      53435F4A 
 4020      4F595354 
 4020      49434B5F 
 4020      67657400 
 4021              	.LASF70:
 4022 0607 696E4472 		.ascii	"inDriver\000"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 107


 4022      69766572 
 4022      00
 4023              	.LASF31:
 4024 0610 52435F45 		.ascii	"RC_ERROR\000"
 4024      52524F52 
 4024      00
 4025              	.LASF15:
 4026 0619 666C6F61 		.ascii	"float\000"
 4026      7400
 4027              	.LASF122:
 4028 061f 5254455F 		.ascii	"RTE_SC_SPEED_get\000"
 4028      53435F53 
 4028      50454544 
 4028      5F676574 
 4028      00
 4029              	.LASF40:
 4030 0630 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 4030      52524F52 
 4030      5F425553 
 4030      5900
 4031              	.LASF127:
 4032 063e 5254455F 		.ascii	"RTE_SC_BREAKLIGHT_set\000"
 4032      53435F42 
 4032      5245414B 
 4032      4C494748 
 4032      545F7365 
 4033              	.LASF76:
 4034 0654 6F6E4572 		.ascii	"onErrorTaskCount\000"
 4034      726F7254 
 4034      61736B43 
 4034      6F756E74 
 4034      00
 4035              	.LASF45:
 4036 0665 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 4036      52524F52 
 4036      5F575249 
 4036      54455F4F 
 4036      4E4C5900 
 4037              	.LASF13:
 4038 0679 696E7433 		.ascii	"int32_t\000"
 4038      325F7400 
 4039              	.LASF1:
 4040 0681 756E7369 		.ascii	"unsigned char\000"
 4040      676E6564 
 4040      20636861 
 4040      7200
 4041              	.LASF81:
 4042 068f 53435F4A 		.ascii	"SC_JOYSTICK_cfg_s\000"
 4042      4F595354 
 4042      49434B5F 
 4042      6366675F 
 4042      7300
 4043              	.LASF126:
 4044 06a1 5254455F 		.ascii	"RTE_SC_BREAKLIGHT_pushPort\000"
 4044      53435F42 
 4044      5245414B 
 4044      4C494748 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 108


 4044      545F7075 
 4045              	.LASF69:
 4046 06bc 53435F4A 		.ascii	"SC_JOYSTICK_driverOut_t\000"
 4046      4F595354 
 4046      49434B5F 
 4046      64726976 
 4046      65724F75 
 4047              	.LASF151:
 4048 06d4 6173775C 		.ascii	"asw\\swc_gaspedal.c\000"
 4048      7377635F 
 4048      67617370 
 4048      6564616C 
 4048      2E6300
 4049              	.LASF133:
 4050 06e7 73706565 		.ascii	"speedSignalAge\000"
 4050      64536967 
 4050      6E616C41 
 4050      676500
 4051              	.LASF75:
 4052 06f6 6F6E5570 		.ascii	"onUpdateTasks\000"
 4052      64617465 
 4052      5461736B 
 4052      7300
 4053              	.LASF33:
 4054 0704 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 4054      52524F52 
 4054      5F5A4552 
 4054      4F00
 4055              	.LASF145:
 4056 0712 534F5F53 		.ascii	"SO_SPEED_signal\000"
 4056      50454544 
 4056      5F736967 
 4056      6E616C00 
 4057              	.LASF150:
 4058 0722 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4058      43313120 
 4058      352E342E 
 4058      31203230 
 4058      31363036 
 4059 0755 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4059      20726576 
 4059      6973696F 
 4059      6E203233 
 4059      37373135 
 4060 0788 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4060      66756E63 
 4060      74696F6E 
 4060      2D736563 
 4060      74696F6E 
 4061              	.LASF141:
 4062 07b0 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 4062      74645F65 
 4062      6E646379 
 4062      636C655F 
 4062      6E657874 
 4063              	.LASF73:
 4064 07c9 65764F6E 		.ascii	"evOnError\000"
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 109


 4064      4572726F 
 4064      7200
 4065              	.LASF85:
 4066 07d3 70536967 		.ascii	"pSigCfg\000"
 4066      43666700 
 4067              	.LASF82:
 4068 07db 53435F4A 		.ascii	"SC_JOYSTICK_s\000"
 4068      4F595354 
 4068      49434B5F 
 4068      7300
 4069              	.LASF86:
 4070 07e9 53435F4A 		.ascii	"SC_JOYSTICK_t\000"
 4070      4F595354 
 4070      49434B5F 
 4070      7400
 4071              	.LASF14:
 4072 07f7 75696E74 		.ascii	"uint32_t\000"
 4072      33325F74 
 4072      00
 4073              	.LASF111:
 4074 0800 7369676E 		.ascii	"signal\000"
 4074      616C00
 4075              	.LASF53:
 4076 0807 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 4076      52524F52 
 4076      5F494E56 
 4076      414C4944 
 4076      5F535441 
 4077              	.LASF88:
 4078 081e 53435F53 		.ascii	"SC_SPEED_data_t\000"
 4078      50454544 
 4078      5F646174 
 4078      615F7400 
 4079              	.LASF44:
 4080 082e 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 4080      52524F52 
 4080      5F524541 
 4080      445F4F4E 
 4080      4C5900
 4081              	.LASF19:
 4082 0841 6C6F6E67 		.ascii	"long double\000"
 4082      20646F75 
 4082      626C6500 
 4083              	.LASF17:
 4084 084d 63686172 		.ascii	"char\000"
 4084      00
 4085              	.LASF61:
 4086 0852 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 4086      5349474E 
 4086      414C5354 
 4086      41545553 
 4086      5F494E49 
 4087              	.LASF78:
 4088 086f 7265736F 		.ascii	"resourceActive\000"
 4088      75726365 
 4088      41637469 
 4088      766500
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 110


 4089              	.LASF104:
 4090 087e 53435F42 		.ascii	"SC_BREAKLIGHT_data_t\000"
 4090      5245414B 
 4090      4C494748 
 4090      545F6461 
 4090      74615F74 
 4091              	.LASF5:
 4092 0893 5F5F696E 		.ascii	"__int32_t\000"
 4092      7433325F 
 4092      7400
 4093              	.LASF55:
 4094 089d 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 4094      52524F52 
 4094      5F4E4F54 
 4094      5F494D50 
 4094      4C454D45 
 4095              	.LASF87:
 4096 08b6 73706565 		.ascii	"speedValue\000"
 4096      6456616C 
 4096      756500
 4097              	.LASF36:
 4098 08c1 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 4098      52524F52 
 4098      5F4F5645 
 4098      5252554E 
 4098      00
 4099              	.LASF132:
 4100 08d2 47415350 		.ascii	"GASPEDAL_setEngine_run\000"
 4100      4544414C 
 4100      5F736574 
 4100      456E6769 
 4100      6E655F72 
 4101              	.LASF64:
 4102 08e9 5254455F 		.ascii	"RTE_signalStatus_t\000"
 4102      7369676E 
 4102      616C5374 
 4102      61747573 
 4102      5F7400
 4103              	.LASF34:
 4104 08fc 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 4104      52524F52 
 4104      5F4D454D 
 4104      4F525900 
 4105              	.LASF66:
 4106 090c 79506F73 		.ascii	"yPos\000"
 4106      00
 4107              	.LASF57:
 4108 0911 5461736B 		.ascii	"TaskTypeArray\000"
 4108      54797065 
 4108      41727261 
 4108      7900
 4109              	.LASF112:
 4110 091f 7461736B 		.ascii	"taskNum\000"
 4110      4E756D00 
 4111              	.LASF28:
 4112 0927 73696E74 		.ascii	"sint8_t\000"
 4112      385F7400 
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 111


 4113              	.LASF84:
 4114 092f 73746174 		.ascii	"status\000"
 4114      757300
 4115              	.LASF142:
 4116 0936 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 4116      52515F6E 
 4116      65737469 
 4116      6E675F6C 
 4116      6576656C 
 4117              	.LASF21:
 4118 094b 45455F55 		.ascii	"EE_UINT32\000"
 4118      494E5433 
 4118      3200
 4119              	.LASF134:
 4120 0955 656E6769 		.ascii	"engineSignal\000"
 4120      6E655369 
 4120      676E616C 
 4120      00
 4121              	.LASF35:
 4122 0962 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 4122      52524F52 
 4122      5F52414E 
 4122      474500
 4123              	.LASF20:
 4124 0971 45455F49 		.ascii	"EE_INT32\000"
 4124      4E543332 
 4124      00
 4125              	.LASF12:
 4126 097a 75696E74 		.ascii	"uint8_t\000"
 4126      385F7400 
 4127              	.LASF116:
 4128 0982 5254455F 		.ascii	"RTE_SC_JOYSTICK_setStatus\000"
 4128      53435F4A 
 4128      4F595354 
 4128      49434B5F 
 4128      73657453 
 4129              	.LASF135:
 4130 099c 47415350 		.ascii	"GASPEDAL_setBrakeLight_run\000"
 4130      4544414C 
 4130      5F736574 
 4130      4272616B 
 4130      654C6967 
 4131              	.LASF96:
 4132 09b7 53435F45 		.ascii	"SC_ENGINE_data_t\000"
 4132      4E47494E 
 4132      455F6461 
 4132      74615F74 
 4132      00
 4133              	.LASF65:
 4134 09c8 78506F73 		.ascii	"xPos\000"
 4134      00
 4135              	.LASF109:
 4136 09cd 53435F42 		.ascii	"SC_BREAKLIGHT_s\000"
 4136      5245414B 
 4136      4C494748 
 4136      545F7300 
 4137              	.LASF110:
ARM GAS  C:\Users\vboxuser\AppData\Local\Temp\cccqcqvJ.s 			page 112


 4138 09dd 53435F42 		.ascii	"SC_BREAKLIGHT_t\000"
 4138      5245414B 
 4138      4C494748 
 4138      545F7400 
 4139              	.LASF77:
 4140 09ed 6F6E4572 		.ascii	"onErrorTasks\000"
 4140      726F7254 
 4140      61736B73 
 4140      00
 4141              	.LASF23:
 4142 09fa 45455F46 		.ascii	"EE_FREG\000"
 4142      52454700 
 4143              	.LASF101:
 4144 0a02 53435F45 		.ascii	"SC_ENGINE_s\000"
 4144      4E47494E 
 4144      455F7300 
 4145              	.LASF102:
 4146 0a0e 53435F45 		.ascii	"SC_ENGINE_t\000"
 4146      4E47494E 
 4146      455F7400 
 4147              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
